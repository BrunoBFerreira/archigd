// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* namemessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  namemessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* elementid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  elementid_reflection_ = NULL;
const ::google::protobuf::Descriptor* elementidlist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  elementidlist_reflection_ = NULL;
const ::google::protobuf::Descriptor* pointmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pointmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* polyarcmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  polyarcmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* doublemessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  doublemessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* intlistmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intlistmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* repeateddoublemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  repeateddoublemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* additionalparams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  additionalparams_reflection_ = NULL;
const ::google::protobuf::Descriptor* rooflevelsmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rooflevelsmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* transmatmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  transmatmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* wallmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  wallmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* getwallmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getwallmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* wallmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  wallmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* doormessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  doormessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* windowmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  windowmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* circlemessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  circlemessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* arcmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  arcmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* spheremessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  spheremessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* cylindermsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cylindermsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* shellcomplexmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  shellcomplexmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* shellsimplemessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  shellsimplemessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* shellmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  shellmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* pointsmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pointsmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* polyarcsmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  polyarcsmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* rotshellmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rotshellmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* tshellmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  tshellmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* oldholemessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  oldholemessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* curtainwallmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  curtainwallmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* translatemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  translatemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* slabmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  slabmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* meshmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  meshmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* rotatemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rotatemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* trimmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  trimmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* intersectmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intersectmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* columnmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  columnmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* storymsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  storymsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* storyinfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  storyinfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* upperlevelmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  upperlevelmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* wallsfromslab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  wallsfromslab_reflection_ = NULL;
const ::google::protobuf::Descriptor* columnsfromslab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  columnsfromslab_reflection_ = NULL;
const ::google::protobuf::Descriptor* stairsmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  stairsmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* roofmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  roofmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* holemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  holemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* mirrormsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mirrormsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* morphmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  morphmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* boxmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  boxmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* wallinfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  wallinfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* wallrepeated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  wallrepeated_reflection_ = NULL;
const ::google::protobuf::Descriptor* slabrepeated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  slabrepeated_reflection_ = NULL;
const ::google::protobuf::Descriptor* columnrepeated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  columnrepeated_reflection_ = NULL;
const ::google::protobuf::Descriptor* objectrepeated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  objectrepeated_reflection_ = NULL;
const ::google::protobuf::Descriptor* roofrepeated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  roofrepeated_reflection_ = NULL;
const ::google::protobuf::Descriptor* levelrepeated_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  levelrepeated_reflection_ = NULL;
const ::google::protobuf::Descriptor* extrusionmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  extrusionmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* openmessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  openmessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* transformmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  transformmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* applymatrix_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  applymatrix_reflection_ = NULL;
const ::google::protobuf::Descriptor* beammsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  beammsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* intarray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intarray_reflection_ = NULL;
const ::google::protobuf::Descriptor* doublearray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  doublearray_reflection_ = NULL;
const ::google::protobuf::Descriptor* boolarray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  boolarray_reflection_ = NULL;
const ::google::protobuf::Descriptor* stringarray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  stringarray_reflection_ = NULL;
const ::google::protobuf::Descriptor* objectmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  objectmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* libpartmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  libpartmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* profilemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  profilemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* layermsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  layermsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* layerelementmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  layerelementmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* splinemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  splinemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* linemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  linemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* polylinemsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  polylinemsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* getlinesmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getlinesmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* getpolylinesmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getpolylinesmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* revshellmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  revshellmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* extshellmsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  extshellmsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* rendermsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rendermsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* cameramsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cameramsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  namemessage_descriptor_ = file->message_type(0);
  static const int namemessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(namemessage, name_),
  };
  namemessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      namemessage_descriptor_,
      namemessage::default_instance_,
      namemessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(namemessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(namemessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(namemessage));
  elementid_descriptor_ = file->message_type(1);
  static const int elementid_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementid, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementid, crashmaterial_),
  };
  elementid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      elementid_descriptor_,
      elementid::default_instance_,
      elementid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(elementid));
  elementidlist_descriptor_ = file->message_type(2);
  static const int elementidlist_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementidlist, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementidlist, crashmaterial_),
  };
  elementidlist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      elementidlist_descriptor_,
      elementidlist::default_instance_,
      elementidlist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementidlist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(elementidlist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(elementidlist));
  pointmessage_descriptor_ = file->message_type(3);
  static const int pointmessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointmessage, p0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointmessage, p0y_),
  };
  pointmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pointmessage_descriptor_,
      pointmessage::default_instance_,
      pointmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pointmessage));
  polyarcmessage_descriptor_ = file->message_type(4);
  static const int polyarcmessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcmessage, begindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcmessage, endindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcmessage, arcangle_),
  };
  polyarcmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      polyarcmessage_descriptor_,
      polyarcmessage::default_instance_,
      polyarcmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(polyarcmessage));
  doublemessage_descriptor_ = file->message_type(5);
  static const int doublemessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doublemessage, d_),
  };
  doublemessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      doublemessage_descriptor_,
      doublemessage::default_instance_,
      doublemessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doublemessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doublemessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(doublemessage));
  intlistmsg_descriptor_ = file->message_type(6);
  static const int intlistmsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intlistmsg, ilist_),
  };
  intlistmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      intlistmsg_descriptor_,
      intlistmsg::default_instance_,
      intlistmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intlistmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intlistmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(intlistmsg));
  repeateddoublemsg_descriptor_ = file->message_type(7);
  static const int repeateddoublemsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(repeateddoublemsg, dlist_),
  };
  repeateddoublemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      repeateddoublemsg_descriptor_,
      repeateddoublemsg::default_instance_,
      repeateddoublemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(repeateddoublemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(repeateddoublemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(repeateddoublemsg));
  additionalparams_descriptor_ = file->message_type(8);
  static const int additionalparams_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, doubles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, strings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, integers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, booleans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, paramtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, intarrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, doublearrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, boolarrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, stringarrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, isarray_),
  };
  additionalparams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      additionalparams_descriptor_,
      additionalparams::default_instance_,
      additionalparams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(additionalparams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(additionalparams));
  rooflevelsmsg_descriptor_ = file->message_type(9);
  static const int rooflevelsmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rooflevelsmsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rooflevelsmsg, height_),
  };
  rooflevelsmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rooflevelsmsg_descriptor_,
      rooflevelsmsg::default_instance_,
      rooflevelsmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rooflevelsmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rooflevelsmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rooflevelsmsg));
  transmatmessage_descriptor_ = file->message_type(10);
  static const int transmatmessage_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, p11_),
  };
  transmatmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      transmatmessage_descriptor_,
      transmatmessage::default_instance_,
      transmatmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transmatmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(transmatmessage));
  wallmsg_descriptor_ = file->message_type(11);
  static const int wallmsg_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, bottomindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, arcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, upperindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, referenceline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, alphaangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, betaangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, typeprofile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, profilename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, flipped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, bottomoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, layer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, windows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, windoworder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, refoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, refmat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, oppmat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, sidmat_),
  };
  wallmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      wallmsg_descriptor_,
      wallmsg::default_instance_,
      wallmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(wallmsg));
  getwallmsg_descriptor_ = file->message_type(12);
  static const int getwallmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getwallmsg, walls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getwallmsg, guid_),
  };
  getwallmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getwallmsg_descriptor_,
      getwallmsg::default_instance_,
      getwallmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getwallmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getwallmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getwallmsg));
  wallmessage_descriptor_ = file->message_type(13);
  static const int wallmessage_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, p0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, p0y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, p1x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, p1y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, bottom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, referenceline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, bottomstory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, topstory_),
  };
  wallmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      wallmessage_descriptor_,
      wallmessage::default_instance_,
      wallmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(wallmessage));
  doormessage_descriptor_ = file->message_type(14);
  static const int doormessage_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, objloc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, zpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, hole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, flipx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, flipy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, depthoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, layer_),
  };
  doormessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      doormessage_descriptor_,
      doormessage::default_instance_,
      doormessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doormessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(doormessage));
  windowmessage_descriptor_ = file->message_type(15);
  static const int windowmessage_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, objloc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, zpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, depthoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, flipx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, flipy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, layer_),
  };
  windowmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      windowmessage_descriptor_,
      windowmessage::default_instance_,
      windowmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(windowmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(windowmessage));
  circlemessage_descriptor_ = file->message_type(16);
  static const int circlemessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(circlemessage, p0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(circlemessage, p0y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(circlemessage, radius_),
  };
  circlemessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      circlemessage_descriptor_,
      circlemessage::default_instance_,
      circlemessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(circlemessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(circlemessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(circlemessage));
  arcmessage_descriptor_ = file->message_type(17);
  static const int arcmessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, p0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, p0y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, begang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, endang_),
  };
  arcmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      arcmessage_descriptor_,
      arcmessage::default_instance_,
      arcmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arcmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(arcmessage));
  spheremessage_descriptor_ = file->message_type(18);
  static const int spheremessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, c0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, c0y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, c0z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, level_),
  };
  spheremessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      spheremessage_descriptor_,
      spheremessage::default_instance_,
      spheremessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spheremessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(spheremessage));
  cylindermsg_descriptor_ = file->message_type(19);
  static const int cylindermsg_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, p0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, p0y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, p0z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, p1x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, p1y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, p1z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, level_),
  };
  cylindermsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cylindermsg_descriptor_,
      cylindermsg::default_instance_,
      cylindermsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cylindermsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cylindermsg));
  shellcomplexmessage_descriptor_ = file->message_type(20);
  static const int shellcomplexmessage_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, numpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, numarcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, numholes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, numhpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, numharcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, holeheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, reflectx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, reflecty_),
  };
  shellcomplexmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      shellcomplexmessage_descriptor_,
      shellcomplexmessage::default_instance_,
      shellcomplexmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellcomplexmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(shellcomplexmessage));
  shellsimplemessage_descriptor_ = file->message_type(21);
  static const int shellsimplemessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellsimplemessage, numpoints_),
  };
  shellsimplemessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      shellsimplemessage_descriptor_,
      shellsimplemessage::default_instance_,
      shellsimplemessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellsimplemessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellsimplemessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(shellsimplemessage));
  shellmessage_descriptor_ = file->message_type(22);
  static const int shellmessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellmessage, numpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellmessage, numarcs_),
  };
  shellmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      shellmessage_descriptor_,
      shellmessage::default_instance_,
      shellmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shellmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(shellmessage));
  pointsmessage_descriptor_ = file->message_type(23);
  static const int pointsmessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointsmessage, px_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointsmessage, py_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointsmessage, pz_),
  };
  pointsmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pointsmessage_descriptor_,
      pointsmessage::default_instance_,
      pointsmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointsmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pointsmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pointsmessage));
  polyarcsmessage_descriptor_ = file->message_type(24);
  static const int polyarcsmessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcsmessage, begindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcsmessage, endindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcsmessage, arcangle_),
  };
  polyarcsmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      polyarcsmessage_descriptor_,
      polyarcsmessage::default_instance_,
      polyarcsmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcsmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polyarcsmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(polyarcsmessage));
  rotshellmessage_descriptor_ = file->message_type(25);
  static const int rotshellmessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotshellmessage, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotshellmessage, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotshellmessage, guid_),
  };
  rotshellmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rotshellmessage_descriptor_,
      rotshellmessage::default_instance_,
      rotshellmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotshellmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotshellmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rotshellmessage));
  tshellmessage_descriptor_ = file->message_type(26);
  static const int tshellmessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tshellmessage, tx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tshellmessage, ty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tshellmessage, tz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tshellmessage, guid_),
  };
  tshellmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      tshellmessage_descriptor_,
      tshellmessage::default_instance_,
      tshellmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tshellmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tshellmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(tshellmessage));
  oldholemessage_descriptor_ = file->message_type(27);
  static const int oldholemessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(oldholemessage, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(oldholemessage, guid_),
  };
  oldholemessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      oldholemessage_descriptor_,
      oldholemessage::default_instance_,
      oldholemessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(oldholemessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(oldholemessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(oldholemessage));
  curtainwallmsg_descriptor_ = file->message_type(28);
  static const int curtainwallmsg_offsets_[28] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, arcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, bottomindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, upperindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, primaries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, secondaries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, mainpanels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, panelmaterial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, secpanelmaterial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, verticalframematerial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, horizontalframematerial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, framematerial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, panelsangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, layer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, toplinked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, mainpanelthickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, secondarypanelthickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, bframewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, bframedepth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, bframeoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, mframewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, mframedepth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, mframeoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, tframewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, tframedepth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, tframeoffset_),
  };
  curtainwallmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      curtainwallmsg_descriptor_,
      curtainwallmsg::default_instance_,
      curtainwallmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(curtainwallmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(curtainwallmsg));
  translatemsg_descriptor_ = file->message_type(29);
  static const int translatemsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(translatemsg, tx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(translatemsg, ty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(translatemsg, tz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(translatemsg, guid_),
  };
  translatemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      translatemsg_descriptor_,
      translatemsg::default_instance_,
      translatemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(translatemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(translatemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(translatemsg));
  slabmessage_descriptor_ = file->message_type(30);
  static const int slabmessage_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, subpolygons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, parcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, layer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, reference_),
  };
  slabmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      slabmessage_descriptor_,
      slabmessage::default_instance_,
      slabmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(slabmessage));
  meshmessage_descriptor_ = file->message_type(31);
  static const int meshmessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, overridematerial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, layer_),
  };
  meshmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      meshmessage_descriptor_,
      meshmessage::default_instance_,
      meshmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(meshmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(meshmessage));
  rotatemsg_descriptor_ = file->message_type(32);
  static const int rotatemsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotatemsg, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotatemsg, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotatemsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotatemsg, copy_),
  };
  rotatemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rotatemsg_descriptor_,
      rotatemsg::default_instance_,
      rotatemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotatemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rotatemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rotatemsg));
  trimmsg_descriptor_ = file->message_type(33);
  static const int trimmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trimmsg, guids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trimmsg, guids2_),
  };
  trimmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      trimmsg_descriptor_,
      trimmsg::default_instance_,
      trimmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trimmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(trimmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(trimmsg));
  intersectmsg_descriptor_ = file->message_type(34);
  static const int intersectmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intersectmsg, guid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intersectmsg, guid2_),
  };
  intersectmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      intersectmsg_descriptor_,
      intersectmsg::default_instance_,
      intersectmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intersectmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intersectmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(intersectmsg));
  columnmsg_descriptor_ = file->message_type(35);
  static const int columnmsg_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, bottom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, circlebased_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, bottomindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, upperindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, slantangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, slantdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, profilename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, bottomoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, layer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, toplinked_),
  };
  columnmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      columnmsg_descriptor_,
      columnmsg::default_instance_,
      columnmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(columnmsg));
  storymsg_descriptor_ = file->message_type(36);
  static const int storymsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storymsg, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storymsg, name_),
  };
  storymsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      storymsg_descriptor_,
      storymsg::default_instance_,
      storymsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storymsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storymsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(storymsg));
  storyinfo_descriptor_ = file->message_type(37);
  static const int storyinfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storyinfo, exists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storyinfo, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storyinfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storyinfo, name_),
  };
  storyinfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      storyinfo_descriptor_,
      storyinfo::default_instance_,
      storyinfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storyinfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(storyinfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(storyinfo));
  upperlevelmsg_descriptor_ = file->message_type(38);
  static const int upperlevelmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(upperlevelmsg, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(upperlevelmsg, height_),
  };
  upperlevelmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      upperlevelmsg_descriptor_,
      upperlevelmsg::default_instance_,
      upperlevelmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(upperlevelmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(upperlevelmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(upperlevelmsg));
  wallsfromslab_descriptor_ = file->message_type(39);
  static const int wallsfromslab_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, referenceline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, layer_),
  };
  wallsfromslab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      wallsfromslab_descriptor_,
      wallsfromslab::default_instance_,
      wallsfromslab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallsfromslab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(wallsfromslab));
  columnsfromslab_descriptor_ = file->message_type(40);
  static const int columnsfromslab_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, circlebased_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, layer_),
  };
  columnsfromslab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      columnsfromslab_descriptor_,
      columnsfromslab::default_instance_,
      columnsfromslab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnsfromslab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(columnsfromslab));
  stairsmsg_descriptor_ = file->message_type(41);
  static const int stairsmsg_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, xratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, yratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, bottom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, bottomindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, usexyfixsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, layer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, upperindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, toplinked_),
  };
  stairsmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      stairsmsg_descriptor_,
      stairsmsg::default_instance_,
      stairsmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stairsmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(stairsmsg));
  roofmsg_descriptor_ = file->message_type(42);
  static const int roofmsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, layer_),
  };
  roofmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      roofmsg_descriptor_,
      roofmsg::default_instance_,
      roofmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(roofmsg));
  holemsg_descriptor_ = file->message_type(43);
  static const int holemsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(holemsg, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(holemsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(holemsg, arcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(holemsg, type_),
  };
  holemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      holemsg_descriptor_,
      holemsg::default_instance_,
      holemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(holemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(holemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(holemsg));
  mirrormsg_descriptor_ = file->message_type(44);
  static const int mirrormsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mirrormsg, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mirrormsg, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mirrormsg, copy_),
  };
  mirrormsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      mirrormsg_descriptor_,
      mirrormsg::default_instance_,
      mirrormsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mirrormsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mirrormsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(mirrormsg));
  morphmsg_descriptor_ = file->message_type(45);
  static const int morphmsg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, refx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, refy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, refz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, edges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, polygons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, sizespolygons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, level_),
  };
  morphmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      morphmsg_descriptor_,
      morphmsg::default_instance_,
      morphmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(morphmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(morphmsg));
  boxmsg_descriptor_ = file->message_type(46);
  static const int boxmsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, x1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, y1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, z1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, x2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, y2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, z2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, bottomlevel_),
  };
  boxmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      boxmsg_descriptor_,
      boxmsg::default_instance_,
      boxmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boxmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(boxmsg));
  wallinfo_descriptor_ = file->message_type(47);
  static const int wallinfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallinfo, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallinfo, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallinfo, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallinfo, volume_),
  };
  wallinfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      wallinfo_descriptor_,
      wallinfo::default_instance_,
      wallinfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallinfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallinfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(wallinfo));
  wallrepeated_descriptor_ = file->message_type(48);
  static const int wallrepeated_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, p0x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, p0y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, p1x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, p1y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, toplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, referenceline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, alphaangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, betaangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, typeprofile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, guid_),
  };
  wallrepeated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      wallrepeated_descriptor_,
      wallrepeated::default_instance_,
      wallrepeated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wallrepeated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(wallrepeated));
  slabrepeated_descriptor_ = file->message_type(49);
  static const int slabrepeated_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, subpolygons_),
  };
  slabrepeated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      slabrepeated_descriptor_,
      slabrepeated::default_instance_,
      slabrepeated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(slabrepeated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(slabrepeated));
  columnrepeated_descriptor_ = file->message_type(50);
  static const int columnrepeated_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, px_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, py_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, toplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, circular_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, slantangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, slantdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, guid_),
  };
  columnrepeated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      columnrepeated_descriptor_,
      columnrepeated::default_instance_,
      columnrepeated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(columnrepeated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(columnrepeated));
  objectrepeated_descriptor_ = file->message_type(51);
  static const int objectrepeated_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, px_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, py_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, xratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, yratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, bottomoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, stairs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, usexyfixsize_),
  };
  objectrepeated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      objectrepeated_descriptor_,
      objectrepeated::default_instance_,
      objectrepeated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectrepeated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(objectrepeated));
  roofrepeated_descriptor_ = file->message_type(52);
  static const int roofrepeated_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, subpolygons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, height_),
  };
  roofrepeated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      roofrepeated_descriptor_,
      roofrepeated::default_instance_,
      roofrepeated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roofrepeated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(roofrepeated));
  levelrepeated_descriptor_ = file->message_type(53);
  static const int levelrepeated_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levelrepeated, levels_),
  };
  levelrepeated_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      levelrepeated_descriptor_,
      levelrepeated::default_instance_,
      levelrepeated_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levelrepeated, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levelrepeated, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(levelrepeated));
  extrusionmsg_descriptor_ = file->message_type(54);
  static const int extrusionmsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extrusionmsg, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extrusionmsg, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extrusionmsg, vz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extrusionmsg, height_),
  };
  extrusionmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      extrusionmsg_descriptor_,
      extrusionmsg::default_instance_,
      extrusionmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extrusionmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extrusionmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(extrusionmsg));
  openmessage_descriptor_ = file->message_type(55);
  static const int openmessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(openmessage, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(openmessage, extension_),
  };
  openmessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      openmessage_descriptor_,
      openmessage::default_instance_,
      openmessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(openmessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(openmessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(openmessage));
  transformmsg_descriptor_ = file->message_type(56);
  static const int transformmsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, scale_),
  };
  transformmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      transformmsg_descriptor_,
      transformmsg::default_instance_,
      transformmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(transformmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(transformmsg));
  applymatrix_descriptor_ = file->message_type(57);
  static const int applymatrix_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(applymatrix, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(applymatrix, matrix_),
  };
  applymatrix_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      applymatrix_descriptor_,
      applymatrix::default_instance_,
      applymatrix_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(applymatrix, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(applymatrix, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(applymatrix));
  beammsg_descriptor_ = file->message_type(58);
  static const int beammsg_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, x0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, y0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, x1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, y1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, beamheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, beamwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, levelheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, bottomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, profilename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, layer_),
  };
  beammsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      beammsg_descriptor_,
      beammsg::default_instance_,
      beammsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(beammsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(beammsg));
  intarray_descriptor_ = file->message_type(59);
  static const int intarray_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intarray, lst_),
  };
  intarray_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      intarray_descriptor_,
      intarray::default_instance_,
      intarray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intarray, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intarray, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(intarray));
  doublearray_descriptor_ = file->message_type(60);
  static const int doublearray_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doublearray, lst_),
  };
  doublearray_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      doublearray_descriptor_,
      doublearray::default_instance_,
      doublearray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doublearray, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(doublearray, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(doublearray));
  boolarray_descriptor_ = file->message_type(61);
  static const int boolarray_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boolarray, lst_),
  };
  boolarray_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      boolarray_descriptor_,
      boolarray::default_instance_,
      boolarray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boolarray, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(boolarray, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(boolarray));
  stringarray_descriptor_ = file->message_type(62);
  static const int stringarray_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stringarray, lst_),
  };
  stringarray_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      stringarray_descriptor_,
      stringarray::default_instance_,
      stringarray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stringarray, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stringarray, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(stringarray));
  objectmsg_descriptor_ = file->message_type(63);
  static const int objectmsg_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, usexyfixsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, xratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, yratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, useobjsectattrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, bottom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, layer_),
  };
  objectmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      objectmsg_descriptor_,
      objectmsg::default_instance_,
      objectmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objectmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(objectmsg));
  libpartmsg_descriptor_ = file->message_type(64);
  static const int libpartmsg_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, twocode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, threecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, parentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, mastercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, parametercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, doubles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, strings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, integers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, booleans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, paramtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, intarrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, doublearrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, boolarrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, stringarrays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, isarray_),
  };
  libpartmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      libpartmsg_descriptor_,
      libpartmsg::default_instance_,
      libpartmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(libpartmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(libpartmsg));
  profilemsg_descriptor_ = file->message_type(65);
  static const int profilemsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(profilemsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(profilemsg, arcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(profilemsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(profilemsg, name_),
  };
  profilemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      profilemsg_descriptor_,
      profilemsg::default_instance_,
      profilemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(profilemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(profilemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(profilemsg));
  layermsg_descriptor_ = file->message_type(66);
  static const int layermsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layermsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layermsg, connection_),
  };
  layermsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      layermsg_descriptor_,
      layermsg::default_instance_,
      layermsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layermsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layermsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(layermsg));
  layerelementmsg_descriptor_ = file->message_type(67);
  static const int layerelementmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layerelementmsg, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layerelementmsg, layer_),
  };
  layerelementmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      layerelementmsg_descriptor_,
      layerelementmsg::default_instance_,
      layerelementmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layerelementmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(layerelementmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(layerelementmsg));
  splinemsg_descriptor_ = file->message_type(68);
  static const int splinemsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(splinemsg, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(splinemsg, closed_),
  };
  splinemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      splinemsg_descriptor_,
      splinemsg::default_instance_,
      splinemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(splinemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(splinemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(splinemsg));
  linemsg_descriptor_ = file->message_type(69);
  static const int linemsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(linemsg, pts_),
  };
  linemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      linemsg_descriptor_,
      linemsg::default_instance_,
      linemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(linemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(linemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(linemsg));
  polylinemsg_descriptor_ = file->message_type(70);
  static const int polylinemsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polylinemsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polylinemsg, arcs_),
  };
  polylinemsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      polylinemsg_descriptor_,
      polylinemsg::default_instance_,
      polylinemsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polylinemsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(polylinemsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(polylinemsg));
  getlinesmsg_descriptor_ = file->message_type(71);
  static const int getlinesmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getlinesmsg, lines_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getlinesmsg, guids_),
  };
  getlinesmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getlinesmsg_descriptor_,
      getlinesmsg::default_instance_,
      getlinesmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getlinesmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getlinesmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getlinesmsg));
  getpolylinesmsg_descriptor_ = file->message_type(72);
  static const int getpolylinesmsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getpolylinesmsg, polylines_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getpolylinesmsg, guids_),
  };
  getpolylinesmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getpolylinesmsg_descriptor_,
      getpolylinesmsg::default_instance_,
      getpolylinesmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getpolylinesmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getpolylinesmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getpolylinesmsg));
  revshellmsg_descriptor_ = file->message_type(73);
  static const int revshellmsg_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, arcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, flipped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, slantangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, revangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, distortionangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, begangle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, thickness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, height_),
  };
  revshellmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      revshellmsg_descriptor_,
      revshellmsg::default_instance_,
      revshellmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(revshellmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(revshellmsg));
  extshellmsg_descriptor_ = file->message_type(74);
  static const int extshellmsg_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, pts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, arcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, flipped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, cextx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, cexty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, extx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, exty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, extz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, visible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, thickness_),
  };
  extshellmsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      extshellmsg_descriptor_,
      extshellmsg::default_instance_,
      extshellmsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(extshellmsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(extshellmsg));
  rendermsg_descriptor_ = file->message_type(75);
  static const int rendermsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rendermsg, file_),
  };
  rendermsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      rendermsg_descriptor_,
      rendermsg::default_instance_,
      rendermsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rendermsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rendermsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(rendermsg));
  cameramsg_descriptor_ = file->message_type(76);
  static const int cameramsg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, cx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, cy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, cz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, tx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, ty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, tz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, lens_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, sunazimuth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, sunaltitude_),
  };
  cameramsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cameramsg_descriptor_,
      cameramsg::default_instance_,
      cameramsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cameramsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cameramsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    namemessage_descriptor_, &namemessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    elementid_descriptor_, &elementid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    elementidlist_descriptor_, &elementidlist::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pointmessage_descriptor_, &pointmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    polyarcmessage_descriptor_, &polyarcmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    doublemessage_descriptor_, &doublemessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    intlistmsg_descriptor_, &intlistmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    repeateddoublemsg_descriptor_, &repeateddoublemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    additionalparams_descriptor_, &additionalparams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rooflevelsmsg_descriptor_, &rooflevelsmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    transmatmessage_descriptor_, &transmatmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    wallmsg_descriptor_, &wallmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getwallmsg_descriptor_, &getwallmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    wallmessage_descriptor_, &wallmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    doormessage_descriptor_, &doormessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    windowmessage_descriptor_, &windowmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    circlemessage_descriptor_, &circlemessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    arcmessage_descriptor_, &arcmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    spheremessage_descriptor_, &spheremessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cylindermsg_descriptor_, &cylindermsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    shellcomplexmessage_descriptor_, &shellcomplexmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    shellsimplemessage_descriptor_, &shellsimplemessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    shellmessage_descriptor_, &shellmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pointsmessage_descriptor_, &pointsmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    polyarcsmessage_descriptor_, &polyarcsmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rotshellmessage_descriptor_, &rotshellmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    tshellmessage_descriptor_, &tshellmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    oldholemessage_descriptor_, &oldholemessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    curtainwallmsg_descriptor_, &curtainwallmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    translatemsg_descriptor_, &translatemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    slabmessage_descriptor_, &slabmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    meshmessage_descriptor_, &meshmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rotatemsg_descriptor_, &rotatemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    trimmsg_descriptor_, &trimmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    intersectmsg_descriptor_, &intersectmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    columnmsg_descriptor_, &columnmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    storymsg_descriptor_, &storymsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    storyinfo_descriptor_, &storyinfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    upperlevelmsg_descriptor_, &upperlevelmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    wallsfromslab_descriptor_, &wallsfromslab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    columnsfromslab_descriptor_, &columnsfromslab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    stairsmsg_descriptor_, &stairsmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    roofmsg_descriptor_, &roofmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    holemsg_descriptor_, &holemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    mirrormsg_descriptor_, &mirrormsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    morphmsg_descriptor_, &morphmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    boxmsg_descriptor_, &boxmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    wallinfo_descriptor_, &wallinfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    wallrepeated_descriptor_, &wallrepeated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    slabrepeated_descriptor_, &slabrepeated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    columnrepeated_descriptor_, &columnrepeated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    objectrepeated_descriptor_, &objectrepeated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    roofrepeated_descriptor_, &roofrepeated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    levelrepeated_descriptor_, &levelrepeated::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    extrusionmsg_descriptor_, &extrusionmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    openmessage_descriptor_, &openmessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    transformmsg_descriptor_, &transformmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    applymatrix_descriptor_, &applymatrix::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    beammsg_descriptor_, &beammsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    intarray_descriptor_, &intarray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    doublearray_descriptor_, &doublearray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    boolarray_descriptor_, &boolarray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    stringarray_descriptor_, &stringarray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    objectmsg_descriptor_, &objectmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    libpartmsg_descriptor_, &libpartmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    profilemsg_descriptor_, &profilemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    layermsg_descriptor_, &layermsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    layerelementmsg_descriptor_, &layerelementmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    splinemsg_descriptor_, &splinemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    linemsg_descriptor_, &linemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    polylinemsg_descriptor_, &polylinemsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getlinesmsg_descriptor_, &getlinesmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getpolylinesmsg_descriptor_, &getpolylinesmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    revshellmsg_descriptor_, &revshellmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    extshellmsg_descriptor_, &extshellmsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    rendermsg_descriptor_, &rendermsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cameramsg_descriptor_, &cameramsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
  delete namemessage::default_instance_;
  delete namemessage_reflection_;
  delete elementid::default_instance_;
  delete elementid_reflection_;
  delete elementidlist::default_instance_;
  delete elementidlist_reflection_;
  delete pointmessage::default_instance_;
  delete pointmessage_reflection_;
  delete polyarcmessage::default_instance_;
  delete polyarcmessage_reflection_;
  delete doublemessage::default_instance_;
  delete doublemessage_reflection_;
  delete intlistmsg::default_instance_;
  delete intlistmsg_reflection_;
  delete repeateddoublemsg::default_instance_;
  delete repeateddoublemsg_reflection_;
  delete additionalparams::default_instance_;
  delete additionalparams_reflection_;
  delete rooflevelsmsg::default_instance_;
  delete rooflevelsmsg_reflection_;
  delete transmatmessage::default_instance_;
  delete transmatmessage_reflection_;
  delete wallmsg::default_instance_;
  delete wallmsg_reflection_;
  delete getwallmsg::default_instance_;
  delete getwallmsg_reflection_;
  delete wallmessage::default_instance_;
  delete wallmessage_reflection_;
  delete doormessage::default_instance_;
  delete doormessage_reflection_;
  delete windowmessage::default_instance_;
  delete windowmessage_reflection_;
  delete circlemessage::default_instance_;
  delete circlemessage_reflection_;
  delete arcmessage::default_instance_;
  delete arcmessage_reflection_;
  delete spheremessage::default_instance_;
  delete spheremessage_reflection_;
  delete cylindermsg::default_instance_;
  delete cylindermsg_reflection_;
  delete shellcomplexmessage::default_instance_;
  delete shellcomplexmessage_reflection_;
  delete shellsimplemessage::default_instance_;
  delete shellsimplemessage_reflection_;
  delete shellmessage::default_instance_;
  delete shellmessage_reflection_;
  delete pointsmessage::default_instance_;
  delete pointsmessage_reflection_;
  delete polyarcsmessage::default_instance_;
  delete polyarcsmessage_reflection_;
  delete rotshellmessage::default_instance_;
  delete rotshellmessage_reflection_;
  delete tshellmessage::default_instance_;
  delete tshellmessage_reflection_;
  delete oldholemessage::default_instance_;
  delete oldholemessage_reflection_;
  delete curtainwallmsg::default_instance_;
  delete curtainwallmsg_reflection_;
  delete translatemsg::default_instance_;
  delete translatemsg_reflection_;
  delete slabmessage::default_instance_;
  delete slabmessage_reflection_;
  delete meshmessage::default_instance_;
  delete meshmessage_reflection_;
  delete rotatemsg::default_instance_;
  delete rotatemsg_reflection_;
  delete trimmsg::default_instance_;
  delete trimmsg_reflection_;
  delete intersectmsg::default_instance_;
  delete intersectmsg_reflection_;
  delete columnmsg::default_instance_;
  delete columnmsg_reflection_;
  delete storymsg::default_instance_;
  delete storymsg_reflection_;
  delete storyinfo::default_instance_;
  delete storyinfo_reflection_;
  delete upperlevelmsg::default_instance_;
  delete upperlevelmsg_reflection_;
  delete wallsfromslab::default_instance_;
  delete wallsfromslab_reflection_;
  delete columnsfromslab::default_instance_;
  delete columnsfromslab_reflection_;
  delete stairsmsg::default_instance_;
  delete stairsmsg_reflection_;
  delete roofmsg::default_instance_;
  delete roofmsg_reflection_;
  delete holemsg::default_instance_;
  delete holemsg_reflection_;
  delete mirrormsg::default_instance_;
  delete mirrormsg_reflection_;
  delete morphmsg::default_instance_;
  delete morphmsg_reflection_;
  delete boxmsg::default_instance_;
  delete boxmsg_reflection_;
  delete wallinfo::default_instance_;
  delete wallinfo_reflection_;
  delete wallrepeated::default_instance_;
  delete wallrepeated_reflection_;
  delete slabrepeated::default_instance_;
  delete slabrepeated_reflection_;
  delete columnrepeated::default_instance_;
  delete columnrepeated_reflection_;
  delete objectrepeated::default_instance_;
  delete objectrepeated_reflection_;
  delete roofrepeated::default_instance_;
  delete roofrepeated_reflection_;
  delete levelrepeated::default_instance_;
  delete levelrepeated_reflection_;
  delete extrusionmsg::default_instance_;
  delete extrusionmsg_reflection_;
  delete openmessage::default_instance_;
  delete openmessage_reflection_;
  delete transformmsg::default_instance_;
  delete transformmsg_reflection_;
  delete applymatrix::default_instance_;
  delete applymatrix_reflection_;
  delete beammsg::default_instance_;
  delete beammsg_reflection_;
  delete intarray::default_instance_;
  delete intarray_reflection_;
  delete doublearray::default_instance_;
  delete doublearray_reflection_;
  delete boolarray::default_instance_;
  delete boolarray_reflection_;
  delete stringarray::default_instance_;
  delete stringarray_reflection_;
  delete objectmsg::default_instance_;
  delete objectmsg_reflection_;
  delete libpartmsg::default_instance_;
  delete libpartmsg_reflection_;
  delete profilemsg::default_instance_;
  delete profilemsg_reflection_;
  delete layermsg::default_instance_;
  delete layermsg_reflection_;
  delete layerelementmsg::default_instance_;
  delete layerelementmsg_reflection_;
  delete splinemsg::default_instance_;
  delete splinemsg_reflection_;
  delete linemsg::default_instance_;
  delete linemsg_reflection_;
  delete polylinemsg::default_instance_;
  delete polylinemsg_reflection_;
  delete getlinesmsg::default_instance_;
  delete getlinesmsg_reflection_;
  delete getpolylinesmsg::default_instance_;
  delete getpolylinesmsg_reflection_;
  delete revshellmsg::default_instance_;
  delete revshellmsg_reflection_;
  delete extshellmsg::default_instance_;
  delete extshellmsg_reflection_;
  delete rendermsg::default_instance_;
  delete rendermsg_reflection_;
  delete cameramsg::default_instance_;
  delete cameramsg_reflection_;
}

void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\"\033\n\013namemessage\022\014\n\004name\030"
    "\001 \002(\t\"0\n\telementid\022\014\n\004guid\030\001 \002(\t\022\025\n\rcras"
    "hmaterial\030\002 \002(\010\"4\n\relementidlist\022\014\n\004guid"
    "\030\001 \003(\t\022\025\n\rcrashmaterial\030\002 \002(\010\"(\n\014pointme"
    "ssage\022\013\n\003p0x\030\001 \002(\001\022\013\n\003p0y\030\002 \002(\001\"F\n\016polya"
    "rcmessage\022\020\n\010begindex\030\001 \002(\005\022\020\n\010endindex\030"
    "\002 \002(\005\022\020\n\010arcangle\030\003 \002(\001\"\032\n\rdoublemessage"
    "\022\t\n\001d\030\001 \002(\001\"\033\n\nintlistmsg\022\r\n\005ilist\030\001 \003(\005"
    "\"\"\n\021repeateddoublemsg\022\r\n\005dlist\030\001 \003(\001\"\221\002\n"
    "\020additionalparams\022\r\n\005names\030\001 \003(\t\022\017\n\007doub"
    "les\030\002 \003(\001\022\017\n\007strings\030\003 \003(\t\022\020\n\010integers\030\004"
    " \003(\005\022\020\n\010booleans\030\005 \003(\010\022\021\n\tparamtype\030\006 \003("
    "\t\022\034\n\tintarrays\030\007 \003(\0132\t.intarray\022\"\n\014doubl"
    "earrays\030\010 \003(\0132\014.doublearray\022\036\n\nboolarray"
    "s\030\t \003(\0132\n.boolarray\022\"\n\014stringarrays\030\n \003("
    "\0132\014.stringarray\022\017\n\007isarray\030\013 \003(\010\".\n\rroof"
    "levelsmsg\022\r\n\005angle\030\001 \003(\001\022\016\n\006height\030\002 \003(\001"
    "\"\243\001\n\017transmatmessage\022\n\n\002p0\030\001 \002(\001\022\n\n\002p1\030\002"
    " \002(\001\022\n\n\002p2\030\003 \002(\001\022\n\n\002p3\030\004 \002(\001\022\n\n\002p4\030\005 \002(\001"
    "\022\n\n\002p5\030\006 \002(\001\022\n\n\002p6\030\007 \002(\001\022\n\n\002p7\030\010 \002(\001\022\n\n\002"
    "p8\030\t \002(\001\022\n\n\002p9\030\n \002(\001\022\013\n\003p10\030\013 \002(\001\022\013\n\003p11"
    "\030\014 \002(\001\"\311\003\n\007wallmsg\022\023\n\013bottomindex\030\001 \002(\005\022"
    "\021\n\tthickness\030\002 \002(\001\022\036\n\004arcs\030\003 \001(\0132\020.polya"
    "rcsmessage\022\022\n\nupperindex\030\004 \002(\005\022\020\n\010materi"
    "al\030\005 \002(\t\022\014\n\004type\030\006 \002(\t\022\025\n\rreferenceline\030"
    "\007 \002(\t\022\022\n\nalphaangle\030\010 \002(\001\022\021\n\tbetaangle\030\t"
    " \002(\001\022\023\n\013typeprofile\030\n \002(\t\022\033\n\003pts\030\013 \001(\0132\016"
    ".pointsmessage\022\023\n\013profilename\030\014 \001(\t\022\016\n\006h"
    "eight\030\r \001(\001\022\017\n\007flipped\030\016 \001(\010\022\024\n\014bottomof"
    "fset\030\017 \001(\001\022\r\n\005layer\030\020 \001(\t\022\037\n\007windows\030\021 \003"
    "(\0132\016.windowmessage\022\023\n\013windoworder\030\022 \003(\001\022"
    "\021\n\trefoffset\030\023 \002(\001\022\016\n\006refmat\030\024 \002(\t\022\016\n\006op"
    "pmat\030\025 \002(\t\022\016\n\006sidmat\030\026 \002(\t\"3\n\ngetwallmsg"
    "\022\027\n\005walls\030\001 \003(\0132\010.wallmsg\022\014\n\004guid\030\002 \003(\t\""
    "\341\001\n\013wallmessage\022\013\n\003p0x\030\001 \002(\001\022\013\n\003p0y\030\002 \002("
    "\001\022\013\n\003p1x\030\003 \002(\001\022\013\n\003p1y\030\004 \002(\001\022\016\n\006height\030\005 "
    "\002(\001\022\021\n\tthickness\030\006 \002(\001\022\r\n\005angle\030\007 \002(\001\022\016\n"
    "\006bottom\030\010 \002(\001\022\020\n\010material\030\t \002(\t\022\014\n\004type\030"
    "\n \002(\t\022\025\n\rreferenceline\030\013 \002(\t\022\023\n\013bottomst"
    "ory\030\014 \001(\005\022\020\n\010topstory\030\r \001(\005\"\331\001\n\013doormess"
    "age\022\014\n\004guid\030\001 \002(\t\022\016\n\006objloc\030\002 \002(\001\022\014\n\004zpo"
    "s\030\003 \002(\001\022\016\n\006height\030\004 \002(\001\022\r\n\005width\030\005 \002(\001\022\014"
    "\n\004hole\030\006 \002(\010\022\014\n\004name\030\007 \002(\t\022\r\n\005flipx\030\010 \002("
    "\010\022\r\n\005flipy\030\t \002(\010\022!\n\006params\030\n \002(\0132\021.addit"
    "ionalparams\022\023\n\013depthoffset\030\013 \002(\001\022\r\n\005laye"
    "r\030\014 \001(\t\"\315\001\n\rwindowmessage\022\014\n\004guid\030\001 \001(\t\022"
    "\016\n\006objloc\030\002 \002(\001\022\014\n\004zpos\030\003 \002(\001\022\014\n\004name\030\004 "
    "\002(\t\022!\n\006params\030\005 \001(\0132\021.additionalparams\022\r"
    "\n\005width\030\006 \002(\001\022\016\n\006height\030\007 \002(\001\022\023\n\013depthof"
    "fset\030\010 \002(\001\022\r\n\005flipx\030\t \002(\010\022\r\n\005flipy\030\n \002(\010"
    "\022\r\n\005layer\030\013 \001(\t\"9\n\rcirclemessage\022\013\n\003p0x\030"
    "\001 \002(\001\022\013\n\003p0y\030\002 \002(\001\022\016\n\006radius\030\003 \002(\001\"e\n\nar"
    "cmessage\022\013\n\003p0x\030\001 \002(\001\022\013\n\003p0y\030\002 \002(\001\022\016\n\006ra"
    "dius\030\003 \002(\001\022\r\n\005angle\030\004 \002(\001\022\016\n\006begang\030\005 \002("
    "\001\022\016\n\006endang\030\006 \002(\001\"U\n\rspheremessage\022\013\n\003c0"
    "x\030\001 \002(\001\022\013\n\003c0y\030\002 \002(\001\022\013\n\003c0z\030\003 \002(\001\022\016\n\006rad"
    "ius\030\004 \002(\001\022\r\n\005level\030\005 \002(\005\"z\n\013cylindermsg\022"
    "\013\n\003p0x\030\001 \002(\001\022\013\n\003p0y\030\002 \002(\001\022\013\n\003p0z\030\003 \002(\001\022\013"
    "\n\003p1x\030\004 \002(\001\022\013\n\003p1y\030\005 \002(\001\022\013\n\003p1z\030\006 \002(\001\022\016\n"
    "\006radius\030\007 \002(\001\022\r\n\005level\030\010 \002(\005\"\251\001\n\023shellco"
    "mplexmessage\022\021\n\tnumpoints\030\001 \002(\005\022\017\n\007numar"
    "cs\030\002 \002(\005\022\020\n\010numholes\030\003 \002(\005\022\022\n\nnumhpoints"
    "\030\004 \002(\005\022\020\n\010numharcs\030\005 \002(\005\022\022\n\nholeheight\030\006"
    " \002(\001\022\020\n\010reflectx\030\007 \002(\001\022\020\n\010reflecty\030\010 \002(\001"
    "\"\'\n\022shellsimplemessage\022\021\n\tnumpoints\030\001 \002("
    "\005\"2\n\014shellmessage\022\021\n\tnumpoints\030\001 \002(\005\022\017\n\007"
    "numarcs\030\002 \002(\005\"3\n\rpointsmessage\022\n\n\002px\030\001 \003"
    "(\001\022\n\n\002py\030\002 \003(\001\022\n\n\002pz\030\003 \003(\001\"G\n\017polyarcsme"
    "ssage\022\020\n\010begindex\030\001 \003(\005\022\020\n\010endindex\030\002 \003("
    "\005\022\020\n\010arcangle\030\003 \003(\001\"<\n\017rotshellmessage\022\014"
    "\n\004axis\030\001 \002(\t\022\r\n\005angle\030\002 \002(\001\022\014\n\004guid\030\003 \002("
    "\t\"A\n\rtshellmessage\022\n\n\002tx\030\001 \002(\001\022\n\n\002ty\030\002 \002"
    "(\001\022\n\n\002tz\030\003 \002(\001\022\014\n\004guid\030\004 \002(\t\".\n\016oldholem"
    "essage\022\016\n\006height\030\001 \002(\001\022\014\n\004guid\030\002 \002(\t\"\216\005\n"
    "\016curtainwallmsg\022\033\n\003pts\030\001 \002(\0132\016.pointsmes"
    "sage\022\036\n\004arcs\030\002 \002(\0132\020.polyarcsmessage\022\023\n\013"
    "bottomindex\030\003 \002(\005\022\022\n\nupperindex\030\004 \002(\005\022\021\n"
    "\tprimaries\030\005 \003(\001\022\023\n\013secondaries\030\006 \003(\001\022\022\n"
    "\nmainpanels\030\007 \003(\010\022\025\n\rpanelmaterial\030\010 \002(\t"
    "\022\030\n\020secpanelmaterial\030\t \002(\t\022\035\n\025verticalfr"
    "amematerial\030\n \002(\t\022\037\n\027horizontalframemate"
    "rial\030\013 \002(\t\022\025\n\rframematerial\030\014 \002(\t\022\023\n\013pan"
    "elsangle\030\r \002(\001\022\016\n\006offset\030\016 \002(\001\022\r\n\005layer\030"
    "\017 \001(\t\022\016\n\006height\030\020 \001(\001\022\021\n\ttoplinked\030\021 \001(\010"
    "\022\032\n\022mainpanelthickness\030\022 \001(\001\022\037\n\027secondar"
    "ypanelthickness\030\023 \001(\001\022\023\n\013bframewidth\030\024 \001"
    "(\001\022\023\n\013bframedepth\030\025 \001(\001\022\024\n\014bframeoffset\030"
    "\026 \001(\001\022\023\n\013mframewidth\030\027 \001(\001\022\023\n\013mframedept"
    "h\030\030 \001(\001\022\024\n\014mframeoffset\030\031 \001(\001\022\023\n\013tframew"
    "idth\030\032 \001(\001\022\023\n\013tframedepth\030\033 \001(\001\022\024\n\014tfram"
    "eoffset\030\034 \001(\001\"@\n\014translatemsg\022\n\n\002tx\030\001 \002("
    "\001\022\n\n\002ty\030\002 \002(\001\022\n\n\002tz\030\003 \002(\001\022\014\n\004guid\030\004 \002(\t\""
    "\331\001\n\013slabmessage\022\r\n\005level\030\001 \002(\001\022\020\n\010materi"
    "al\030\002 \002(\t\022\021\n\tthickness\030\003 \002(\001\022\014\n\004type\030\004 \002("
    "\t\022\023\n\013bottomlevel\030\005 \002(\005\022\023\n\013subpolygons\030\006 "
    "\003(\005\022\033\n\003pts\030\007 \002(\0132\016.pointsmessage\022\037\n\005parc"
    "s\030\010 \002(\0132\020.polyarcsmessage\022\r\n\005layer\030\t \001(\t"
    "\022\021\n\treference\030\n \001(\t\"l\n\013meshmessage\022\r\n\005le"
    "vel\030\001 \002(\001\022\020\n\010material\030\002 \002(\t\022\023\n\013bottomlev"
    "el\030\003 \002(\005\022\030\n\020overridematerial\030\004 \001(\t\022\r\n\005la"
    "yer\030\005 \001(\t\"D\n\trotatemsg\022\014\n\004guid\030\001 \003(\t\022\014\n\004"
    "axis\030\002 \002(\t\022\r\n\005angle\030\003 \002(\001\022\014\n\004copy\030\004 \002(\010\""
    "(\n\007trimmsg\022\r\n\005guids\030\001 \003(\t\022\016\n\006guids2\030\002 \003("
    "\t\",\n\014intersectmsg\022\r\n\005guid1\030\001 \002(\t\022\r\n\005guid"
    "2\030\002 \002(\t\"\253\002\n\tcolumnmsg\022\014\n\004posx\030\001 \002(\001\022\014\n\004p"
    "osy\030\002 \002(\001\022\016\n\006bottom\030\003 \002(\001\022\016\n\006height\030\004 \001("
    "\001\022\023\n\013circlebased\030\005 \002(\010\022\r\n\005angle\030\006 \002(\001\022\r\n"
    "\005depth\030\007 \002(\001\022\r\n\005width\030\010 \002(\001\022\023\n\013bottomind"
    "ex\030\t \001(\005\022\022\n\nupperindex\030\n \001(\005\022\022\n\nslantang"
    "le\030\013 \002(\001\022\026\n\016slantdirection\030\014 \002(\001\022\023\n\013prof"
    "ilename\030\r \002(\t\022\024\n\014bottomoffset\030\016 \001(\001\022\r\n\005l"
    "ayer\030\017 \001(\t\022\021\n\ttoplinked\030\020 \001(\010\"(\n\010storyms"
    "g\022\016\n\006height\030\001 \002(\001\022\014\n\004name\030\002 \002(\t\"G\n\tstory"
    "info\022\016\n\006exists\030\001 \002(\010\022\r\n\005index\030\002 \002(\005\022\r\n\005l"
    "evel\030\003 \002(\001\022\014\n\004name\030\004 \002(\t\".\n\rupperlevelms"
    "g\022\r\n\005index\030\001 \002(\005\022\016\n\006height\030\002 \002(\001\"\206\001\n\rwal"
    "lsfromslab\022\014\n\004guid\030\001 \002(\t\022\016\n\006height\030\002 \002(\001"
    "\022\020\n\010material\030\003 \002(\t\022\014\n\004type\030\004 \002(\t\022\025\n\rrefe"
    "renceline\030\005 \002(\t\022\021\n\tthickness\030\006 \002(\001\022\r\n\005la"
    "yer\030\007 \001(\t\"\203\001\n\017columnsfromslab\022\014\n\004guid\030\001 "
    "\002(\t\022\016\n\006height\030\002 \002(\001\022\020\n\010material\030\003 \002(\t\022\r\n"
    "\005depth\030\004 \002(\001\022\r\n\005width\030\005 \002(\001\022\023\n\013circlebas"
    "ed\030\006 \002(\010\022\r\n\005layer\030\007 \001(\t\"\210\002\n\tstairsmsg\022\014\n"
    "\004name\030\001 \002(\t\022\014\n\004posx\030\002 \002(\001\022\014\n\004posy\030\003 \002(\001\022"
    "\016\n\006xratio\030\004 \002(\001\022\016\n\006yratio\030\005 \002(\001\022\016\n\006botto"
    "m\030\006 \002(\001\022\r\n\005angle\030\007 \002(\001\022\023\n\013bottomindex\030\010 "
    "\002(\005\022\024\n\014usexyfixsize\030\t \002(\010\022!\n\006params\030\n \002("
    "\0132\021.additionalparams\022\r\n\005layer\030\013 \001(\t\022\016\n\006h"
    "eight\030\014 \001(\001\022\022\n\nupperindex\030\r \001(\005\022\021\n\ttopli"
    "nked\030\016 \001(\010\"p\n\007roofmsg\022\016\n\006height\030\001 \002(\001\022\020\n"
    "\010material\030\002 \002(\t\022\021\n\tthickness\030\003 \002(\001\022\014\n\004ty"
    "pe\030\004 \002(\t\022\023\n\013bottomlevel\030\005 \002(\005\022\r\n\005layer\030\006"
    " \001(\t\"b\n\007holemsg\022\014\n\004guid\030\001 \002(\t\022\033\n\003pts\030\002 \001"
    "(\0132\016.pointsmessage\022\036\n\004arcs\030\003 \001(\0132\020.polya"
    "rcsmessage\022\014\n\004type\030\004 \001(\005\"5\n\tmirrormsg\022\014\n"
    "\004guid\030\001 \002(\t\022\014\n\004axis\030\002 \002(\t\022\014\n\004copy\030\003 \002(\010\""
    "\327\001\n\010morphmsg\022\014\n\004refx\030\001 \002(\001\022\014\n\004refy\030\002 \002(\001"
    "\022\014\n\004refz\030\003 \002(\001\022\033\n\003pts\030\004 \001(\0132\016.pointsmess"
    "age\022\035\n\005edges\030\005 \001(\0132\016.pointsmessage\022 \n\010po"
    "lygons\030\006 \001(\0132\016.pointsmessage\022\"\n\rsizespol"
    "ygons\030\007 \001(\0132\013.intlistmsg\022\020\n\010material\030\010 \002"
    "(\t\022\r\n\005level\030\t \002(\005\"e\n\006boxmsg\022\n\n\002x1\030\001 \002(\001\022"
    "\n\n\002y1\030\002 \002(\001\022\n\n\002z1\030\003 \002(\001\022\n\n\002x2\030\004 \002(\001\022\n\n\002y"
    "2\030\005 \002(\001\022\n\n\002z2\030\006 \002(\001\022\023\n\013bottomlevel\030\007 \002(\005"
    "\"M\n\010wallinfo\022\021\n\tthickness\030\001 \003(\001\022\016\n\006lengt"
    "h\030\002 \003(\001\022\016\n\006height\030\003 \003(\001\022\016\n\006volume\030\004 \003(\001\""
    "\244\002\n\014wallrepeated\022\013\n\003p0x\030\001 \003(\001\022\013\n\003p0y\030\002 \003"
    "(\001\022\013\n\003p1x\030\003 \003(\001\022\013\n\003p1y\030\004 \003(\001\022\037\n\013bottomle"
    "vel\030\005 \003(\0132\n.storyinfo\022\021\n\tthickness\030\006 \003(\001"
    "\022\r\n\005angle\030\007 \003(\001\022\034\n\010toplevel\030\010 \003(\0132\n.stor"
    "yinfo\022\020\n\010material\030\t \003(\t\022\014\n\004type\030\n \003(\t\022\025\n"
    "\rreferenceline\030\013 \003(\t\022\022\n\nalphaangle\030\014 \003(\001"
    "\022\021\n\tbetaangle\030\r \003(\001\022\023\n\013typeprofile\030\016 \003(\t"
    "\022\014\n\004guid\030\017 \003(\t\"\262\001\n\014slabrepeated\022\036\n\006point"
    "s\030\001 \003(\0132\016.pointsmessage\022\037\n\013bottomlevel\030\002"
    " \003(\0132\n.storyinfo\022\021\n\tthickness\030\003 \003(\001\022\020\n\010m"
    "aterial\030\004 \003(\t\022\014\n\004type\030\005 \003(\t\022\014\n\004guid\030\006 \003("
    "\t\022 \n\013subpolygons\030\007 \003(\0132\013.intlistmsg\"\340\001\n\016"
    "columnrepeated\022\n\n\002px\030\001 \003(\001\022\n\n\002py\030\002 \003(\001\022\037"
    "\n\013bottomlevel\030\003 \003(\0132\n.storyinfo\022\034\n\010tople"
    "vel\030\004 \003(\0132\n.storyinfo\022\020\n\010circular\030\005 \003(\010\022"
    "\r\n\005angle\030\006 \003(\001\022\r\n\005depth\030\007 \003(\001\022\r\n\005width\030\010"
    " \003(\001\022\022\n\nslantangle\030\t \003(\001\022\026\n\016slantdirecti"
    "on\030\n \003(\001\022\014\n\004guid\030\013 \003(\t\"\320\001\n\016objectrepeate"
    "d\022\014\n\004name\030\001 \003(\t\022\n\n\002px\030\002 \003(\001\022\n\n\002py\030\003 \003(\001\022"
    "\r\n\005angle\030\004 \003(\001\022\016\n\006xratio\030\005 \003(\001\022\016\n\006yratio"
    "\030\006 \003(\001\022\024\n\014bottomoffset\030\007 \003(\001\022\037\n\013bottomle"
    "vel\030\010 \003(\0132\n.storyinfo\022\014\n\004guid\030\t \003(\t\022\016\n\006s"
    "tairs\030\n \003(\010\022\024\n\014usexyfixsize\030\013 \003(\010\"\302\001\n\014ro"
    "ofrepeated\022\036\n\006points\030\001 \003(\0132\016.pointsmessa"
    "ge\022\037\n\013bottomlevel\030\002 \003(\0132\n.storyinfo\022\021\n\tt"
    "hickness\030\003 \003(\001\022\020\n\010material\030\004 \003(\t\022\014\n\004type"
    "\030\005 \003(\t\022\014\n\004guid\030\006 \003(\t\022 \n\013subpolygons\030\007 \003("
    "\0132\013.intlistmsg\022\016\n\006height\030\010 \003(\001\"+\n\rlevelr"
    "epeated\022\032\n\006levels\030\001 \003(\0132\n.storyinfo\"B\n\014e"
    "xtrusionmsg\022\n\n\002vx\030\001 \002(\001\022\n\n\002vy\030\002 \002(\001\022\n\n\002v"
    "z\030\003 \002(\001\022\016\n\006height\030\004 \002(\001\".\n\013openmessage\022\014"
    "\n\004path\030\001 \002(\t\022\021\n\textension\030\002 \002(\t\"g\n\014trans"
    "formmsg\022\014\n\004guid\030\001 \002(\t\022\n\n\002op\030\002 \002(\t\022\t\n\001x\030\003"
    " \002(\001\022\t\n\001y\030\004 \002(\001\022\t\n\001z\030\005 \002(\001\022\r\n\005angle\030\006 \002("
    "\001\022\r\n\005scale\030\007 \002(\001\"+\n\013applymatrix\022\014\n\004guid\030"
    "\001 \002(\t\022\016\n\006matrix\030\002 \003(\001\"\317\001\n\007beammsg\022\n\n\002x0\030"
    "\001 \002(\001\022\n\n\002y0\030\002 \002(\001\022\n\n\002x1\030\003 \002(\001\022\n\n\002y1\030\004 \002("
    "\001\022\022\n\nbeamheight\030\005 \002(\001\022\021\n\tbeamwidth\030\006 \002(\001"
    "\022\023\n\013levelheight\030\007 \002(\001\022\023\n\013bottomlevel\030\010 \002"
    "(\005\022\r\n\005angle\030\t \002(\001\022\020\n\010material\030\n \002(\t\022\023\n\013p"
    "rofilename\030\013 \002(\t\022\r\n\005layer\030\014 \001(\t\"\027\n\010intar"
    "ray\022\013\n\003lst\030\001 \003(\005\"\032\n\013doublearray\022\013\n\003lst\030\001"
    " \003(\001\"\030\n\tboolarray\022\013\n\003lst\030\001 \003(\010\"\032\n\013string"
    "array\022\013\n\003lst\030\001 \003(\t\"\363\001\n\tobjectmsg\022\r\n\005inde"
    "x\030\001 \002(\005\022\014\n\004posx\030\002 \002(\001\022\014\n\004posy\030\003 \002(\001\022\024\n\014u"
    "sexyfixsize\030\004 \002(\010\022\016\n\006xratio\030\005 \002(\001\022\016\n\006yra"
    "tio\030\006 \002(\001\022\027\n\017useobjsectattrs\030\007 \002(\010\022\016\n\006bo"
    "ttom\030\010 \002(\001\022\r\n\005angle\030\t \002(\001\022!\n\006params\030\n \002("
    "\0132\021.additionalparams\022\014\n\004name\030\013 \001(\t\022\r\n\005le"
    "vel\030\014 \002(\005\022\r\n\005layer\030\r \001(\t\"\210\003\n\nlibpartmsg\022"
    "\014\n\004name\030\001 \002(\t\022\017\n\007twocode\030\002 \002(\t\022\021\n\tthreec"
    "ode\030\003 \002(\t\022\014\n\004type\030\004 \002(\t\022\020\n\010parentid\030\005 \002("
    "\t\022\022\n\nmastercode\030\006 \002(\t\022\025\n\rparametercode\030\007"
    " \002(\t\022\r\n\005names\030\010 \003(\t\022\017\n\007doubles\030\t \003(\001\022\017\n\007"
    "strings\030\n \003(\t\022\020\n\010integers\030\013 \003(\005\022\020\n\010boole"
    "ans\030\014 \003(\010\022\021\n\tparamtype\030\r \003(\t\022\034\n\tintarray"
    "s\030\016 \003(\0132\t.intarray\022\"\n\014doublearrays\030\017 \003(\013"
    "2\014.doublearray\022\036\n\nboolarrays\030\020 \003(\0132\n.boo"
    "larray\022\"\n\014stringarrays\030\021 \003(\0132\014.stringarr"
    "ay\022\017\n\007isarray\030\022 \003(\010\"i\n\nprofilemsg\022\033\n\003pts"
    "\030\001 \002(\0132\016.pointsmessage\022\036\n\004arcs\030\002 \002(\0132\020.p"
    "olyarcsmessage\022\020\n\010material\030\003 \002(\t\022\014\n\004name"
    "\030\004 \002(\t\",\n\010layermsg\022\014\n\004name\030\001 \002(\t\022\022\n\nconn"
    "ection\030\002 \001(\005\".\n\017layerelementmsg\022\014\n\004guid\030"
    "\001 \002(\t\022\r\n\005layer\030\002 \002(\t\";\n\tsplinemsg\022\036\n\006poi"
    "nts\030\001 \002(\0132\016.pointsmessage\022\016\n\006closed\030\002 \002("
    "\010\"&\n\007linemsg\022\033\n\003pts\030\001 \001(\0132\016.pointsmessag"
    "e\"J\n\013polylinemsg\022\033\n\003pts\030\001 \001(\0132\016.pointsme"
    "ssage\022\036\n\004arcs\030\002 \001(\0132\020.polyarcsmessage\"5\n"
    "\013getlinesmsg\022\027\n\005lines\030\001 \003(\0132\010.linemsg\022\r\n"
    "\005guids\030\002 \003(\t\"A\n\017getpolylinesmsg\022\037\n\tpolyl"
    "ines\030\001 \003(\0132\014.polylinemsg\022\r\n\005guids\030\002 \003(\t\""
    "\214\002\n\013revshellmsg\022\033\n\003pts\030\001 \001(\0132\016.pointsmes"
    "sage\022\036\n\004arcs\030\002 \001(\0132\020.polyarcsmessage\022\r\n\005"
    "level\030\003 \002(\005\022\017\n\007flipped\030\004 \002(\010\022\022\n\nslantang"
    "le\030\005 \002(\001\022\020\n\010revangle\030\006 \002(\001\022\027\n\017distortion"
    "angle\030\007 \002(\001\022\020\n\010begangle\030\010 \002(\001\022\014\n\004axis\030\t "
    "\003(\001\022\020\n\010material\030\n \002(\t\022\014\n\004type\030\013 \002(\t\022\021\n\tt"
    "hickness\030\014 \002(\001\022\016\n\006height\030\r \002(\001\"\366\001\n\013extsh"
    "ellmsg\022\033\n\003pts\030\001 \001(\0132\016.pointsmessage\022\036\n\004a"
    "rcs\030\002 \001(\0132\020.polyarcsmessage\022\r\n\005level\030\003 \002"
    "(\005\022\017\n\007flipped\030\004 \002(\010\022\r\n\005cextx\030\005 \002(\001\022\r\n\005ce"
    "xty\030\006 \002(\001\022\014\n\004extx\030\007 \002(\001\022\014\n\004exty\030\010 \002(\001\022\014\n"
    "\004extz\030\t \002(\001\022\017\n\007visible\030\n \003(\010\022\020\n\010material"
    "\030\013 \002(\t\022\014\n\004type\030\014 \002(\t\022\021\n\tthickness\030\r \002(\001\""
    "\031\n\trendermsg\022\014\n\004file\030\001 \002(\t\"\212\001\n\tcameramsg"
    "\022\n\n\002cx\030\001 \002(\001\022\n\n\002cy\030\002 \002(\001\022\n\n\002cz\030\003 \002(\001\022\n\n\002"
    "tx\030\004 \002(\001\022\n\n\002ty\030\005 \002(\001\022\n\n\002tz\030\006 \002(\001\022\014\n\004lens"
    "\030\007 \002(\001\022\022\n\nsunazimuth\030\010 \002(\001\022\023\n\013sunaltitud"
    "e\030\t \002(\001", 9407);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  namemessage::default_instance_ = new namemessage();
  elementid::default_instance_ = new elementid();
  elementidlist::default_instance_ = new elementidlist();
  pointmessage::default_instance_ = new pointmessage();
  polyarcmessage::default_instance_ = new polyarcmessage();
  doublemessage::default_instance_ = new doublemessage();
  intlistmsg::default_instance_ = new intlistmsg();
  repeateddoublemsg::default_instance_ = new repeateddoublemsg();
  additionalparams::default_instance_ = new additionalparams();
  rooflevelsmsg::default_instance_ = new rooflevelsmsg();
  transmatmessage::default_instance_ = new transmatmessage();
  wallmsg::default_instance_ = new wallmsg();
  getwallmsg::default_instance_ = new getwallmsg();
  wallmessage::default_instance_ = new wallmessage();
  doormessage::default_instance_ = new doormessage();
  windowmessage::default_instance_ = new windowmessage();
  circlemessage::default_instance_ = new circlemessage();
  arcmessage::default_instance_ = new arcmessage();
  spheremessage::default_instance_ = new spheremessage();
  cylindermsg::default_instance_ = new cylindermsg();
  shellcomplexmessage::default_instance_ = new shellcomplexmessage();
  shellsimplemessage::default_instance_ = new shellsimplemessage();
  shellmessage::default_instance_ = new shellmessage();
  pointsmessage::default_instance_ = new pointsmessage();
  polyarcsmessage::default_instance_ = new polyarcsmessage();
  rotshellmessage::default_instance_ = new rotshellmessage();
  tshellmessage::default_instance_ = new tshellmessage();
  oldholemessage::default_instance_ = new oldholemessage();
  curtainwallmsg::default_instance_ = new curtainwallmsg();
  translatemsg::default_instance_ = new translatemsg();
  slabmessage::default_instance_ = new slabmessage();
  meshmessage::default_instance_ = new meshmessage();
  rotatemsg::default_instance_ = new rotatemsg();
  trimmsg::default_instance_ = new trimmsg();
  intersectmsg::default_instance_ = new intersectmsg();
  columnmsg::default_instance_ = new columnmsg();
  storymsg::default_instance_ = new storymsg();
  storyinfo::default_instance_ = new storyinfo();
  upperlevelmsg::default_instance_ = new upperlevelmsg();
  wallsfromslab::default_instance_ = new wallsfromslab();
  columnsfromslab::default_instance_ = new columnsfromslab();
  stairsmsg::default_instance_ = new stairsmsg();
  roofmsg::default_instance_ = new roofmsg();
  holemsg::default_instance_ = new holemsg();
  mirrormsg::default_instance_ = new mirrormsg();
  morphmsg::default_instance_ = new morphmsg();
  boxmsg::default_instance_ = new boxmsg();
  wallinfo::default_instance_ = new wallinfo();
  wallrepeated::default_instance_ = new wallrepeated();
  slabrepeated::default_instance_ = new slabrepeated();
  columnrepeated::default_instance_ = new columnrepeated();
  objectrepeated::default_instance_ = new objectrepeated();
  roofrepeated::default_instance_ = new roofrepeated();
  levelrepeated::default_instance_ = new levelrepeated();
  extrusionmsg::default_instance_ = new extrusionmsg();
  openmessage::default_instance_ = new openmessage();
  transformmsg::default_instance_ = new transformmsg();
  applymatrix::default_instance_ = new applymatrix();
  beammsg::default_instance_ = new beammsg();
  intarray::default_instance_ = new intarray();
  doublearray::default_instance_ = new doublearray();
  boolarray::default_instance_ = new boolarray();
  stringarray::default_instance_ = new stringarray();
  objectmsg::default_instance_ = new objectmsg();
  libpartmsg::default_instance_ = new libpartmsg();
  profilemsg::default_instance_ = new profilemsg();
  layermsg::default_instance_ = new layermsg();
  layerelementmsg::default_instance_ = new layerelementmsg();
  splinemsg::default_instance_ = new splinemsg();
  linemsg::default_instance_ = new linemsg();
  polylinemsg::default_instance_ = new polylinemsg();
  getlinesmsg::default_instance_ = new getlinesmsg();
  getpolylinesmsg::default_instance_ = new getpolylinesmsg();
  revshellmsg::default_instance_ = new revshellmsg();
  extshellmsg::default_instance_ = new extshellmsg();
  rendermsg::default_instance_ = new rendermsg();
  cameramsg::default_instance_ = new cameramsg();
  namemessage::default_instance_->InitAsDefaultInstance();
  elementid::default_instance_->InitAsDefaultInstance();
  elementidlist::default_instance_->InitAsDefaultInstance();
  pointmessage::default_instance_->InitAsDefaultInstance();
  polyarcmessage::default_instance_->InitAsDefaultInstance();
  doublemessage::default_instance_->InitAsDefaultInstance();
  intlistmsg::default_instance_->InitAsDefaultInstance();
  repeateddoublemsg::default_instance_->InitAsDefaultInstance();
  additionalparams::default_instance_->InitAsDefaultInstance();
  rooflevelsmsg::default_instance_->InitAsDefaultInstance();
  transmatmessage::default_instance_->InitAsDefaultInstance();
  wallmsg::default_instance_->InitAsDefaultInstance();
  getwallmsg::default_instance_->InitAsDefaultInstance();
  wallmessage::default_instance_->InitAsDefaultInstance();
  doormessage::default_instance_->InitAsDefaultInstance();
  windowmessage::default_instance_->InitAsDefaultInstance();
  circlemessage::default_instance_->InitAsDefaultInstance();
  arcmessage::default_instance_->InitAsDefaultInstance();
  spheremessage::default_instance_->InitAsDefaultInstance();
  cylindermsg::default_instance_->InitAsDefaultInstance();
  shellcomplexmessage::default_instance_->InitAsDefaultInstance();
  shellsimplemessage::default_instance_->InitAsDefaultInstance();
  shellmessage::default_instance_->InitAsDefaultInstance();
  pointsmessage::default_instance_->InitAsDefaultInstance();
  polyarcsmessage::default_instance_->InitAsDefaultInstance();
  rotshellmessage::default_instance_->InitAsDefaultInstance();
  tshellmessage::default_instance_->InitAsDefaultInstance();
  oldholemessage::default_instance_->InitAsDefaultInstance();
  curtainwallmsg::default_instance_->InitAsDefaultInstance();
  translatemsg::default_instance_->InitAsDefaultInstance();
  slabmessage::default_instance_->InitAsDefaultInstance();
  meshmessage::default_instance_->InitAsDefaultInstance();
  rotatemsg::default_instance_->InitAsDefaultInstance();
  trimmsg::default_instance_->InitAsDefaultInstance();
  intersectmsg::default_instance_->InitAsDefaultInstance();
  columnmsg::default_instance_->InitAsDefaultInstance();
  storymsg::default_instance_->InitAsDefaultInstance();
  storyinfo::default_instance_->InitAsDefaultInstance();
  upperlevelmsg::default_instance_->InitAsDefaultInstance();
  wallsfromslab::default_instance_->InitAsDefaultInstance();
  columnsfromslab::default_instance_->InitAsDefaultInstance();
  stairsmsg::default_instance_->InitAsDefaultInstance();
  roofmsg::default_instance_->InitAsDefaultInstance();
  holemsg::default_instance_->InitAsDefaultInstance();
  mirrormsg::default_instance_->InitAsDefaultInstance();
  morphmsg::default_instance_->InitAsDefaultInstance();
  boxmsg::default_instance_->InitAsDefaultInstance();
  wallinfo::default_instance_->InitAsDefaultInstance();
  wallrepeated::default_instance_->InitAsDefaultInstance();
  slabrepeated::default_instance_->InitAsDefaultInstance();
  columnrepeated::default_instance_->InitAsDefaultInstance();
  objectrepeated::default_instance_->InitAsDefaultInstance();
  roofrepeated::default_instance_->InitAsDefaultInstance();
  levelrepeated::default_instance_->InitAsDefaultInstance();
  extrusionmsg::default_instance_->InitAsDefaultInstance();
  openmessage::default_instance_->InitAsDefaultInstance();
  transformmsg::default_instance_->InitAsDefaultInstance();
  applymatrix::default_instance_->InitAsDefaultInstance();
  beammsg::default_instance_->InitAsDefaultInstance();
  intarray::default_instance_->InitAsDefaultInstance();
  doublearray::default_instance_->InitAsDefaultInstance();
  boolarray::default_instance_->InitAsDefaultInstance();
  stringarray::default_instance_->InitAsDefaultInstance();
  objectmsg::default_instance_->InitAsDefaultInstance();
  libpartmsg::default_instance_->InitAsDefaultInstance();
  profilemsg::default_instance_->InitAsDefaultInstance();
  layermsg::default_instance_->InitAsDefaultInstance();
  layerelementmsg::default_instance_->InitAsDefaultInstance();
  splinemsg::default_instance_->InitAsDefaultInstance();
  linemsg::default_instance_->InitAsDefaultInstance();
  polylinemsg::default_instance_->InitAsDefaultInstance();
  getlinesmsg::default_instance_->InitAsDefaultInstance();
  getpolylinesmsg::default_instance_->InitAsDefaultInstance();
  revshellmsg::default_instance_->InitAsDefaultInstance();
  extshellmsg::default_instance_->InitAsDefaultInstance();
  rendermsg::default_instance_->InitAsDefaultInstance();
  cameramsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int namemessage::kNameFieldNumber;
#endif  // !_MSC_VER

namemessage::namemessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:namemessage)
}

void namemessage::InitAsDefaultInstance() {
}

namemessage::namemessage(const namemessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:namemessage)
}

void namemessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

namemessage::~namemessage() {
  // @@protoc_insertion_point(destructor:namemessage)
  SharedDtor();
}

void namemessage::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void namemessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* namemessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return namemessage_descriptor_;
}

const namemessage& namemessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

namemessage* namemessage::default_instance_ = NULL;

namemessage* namemessage::New() const {
  return new namemessage;
}

void namemessage::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool namemessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namemessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namemessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namemessage)
  return false;
#undef DO_
}

void namemessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namemessage)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:namemessage)
}

::google::protobuf::uint8* namemessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:namemessage)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namemessage)
  return target;
}

int namemessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void namemessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const namemessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const namemessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void namemessage::MergeFrom(const namemessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void namemessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void namemessage::CopyFrom(const namemessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool namemessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void namemessage::Swap(namemessage* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata namemessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = namemessage_descriptor_;
  metadata.reflection = namemessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int elementid::kGuidFieldNumber;
const int elementid::kCrashmaterialFieldNumber;
#endif  // !_MSC_VER

elementid::elementid()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:elementid)
}

void elementid::InitAsDefaultInstance() {
}

elementid::elementid(const elementid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:elementid)
}

void elementid::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crashmaterial_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

elementid::~elementid() {
  // @@protoc_insertion_point(destructor:elementid)
  SharedDtor();
}

void elementid::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void elementid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* elementid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return elementid_descriptor_;
}

const elementid& elementid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

elementid* elementid::default_instance_ = NULL;

elementid* elementid::New() const {
  return new elementid;
}

void elementid::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    crashmaterial_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool elementid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elementid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_crashmaterial;
        break;
      }

      // required bool crashmaterial = 2;
      case 2: {
        if (tag == 16) {
         parse_crashmaterial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &crashmaterial_)));
          set_has_crashmaterial();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elementid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elementid)
  return false;
#undef DO_
}

void elementid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elementid)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required bool crashmaterial = 2;
  if (has_crashmaterial()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->crashmaterial(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elementid)
}

::google::protobuf::uint8* elementid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:elementid)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required bool crashmaterial = 2;
  if (has_crashmaterial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->crashmaterial(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elementid)
  return target;
}

int elementid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required bool crashmaterial = 2;
    if (has_crashmaterial()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void elementid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const elementid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const elementid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void elementid::MergeFrom(const elementid& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_crashmaterial()) {
      set_crashmaterial(from.crashmaterial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void elementid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void elementid::CopyFrom(const elementid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool elementid::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void elementid::Swap(elementid* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(crashmaterial_, other->crashmaterial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata elementid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = elementid_descriptor_;
  metadata.reflection = elementid_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int elementidlist::kGuidFieldNumber;
const int elementidlist::kCrashmaterialFieldNumber;
#endif  // !_MSC_VER

elementidlist::elementidlist()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:elementidlist)
}

void elementidlist::InitAsDefaultInstance() {
}

elementidlist::elementidlist(const elementidlist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:elementidlist)
}

void elementidlist::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  crashmaterial_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

elementidlist::~elementidlist() {
  // @@protoc_insertion_point(destructor:elementidlist)
  SharedDtor();
}

void elementidlist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void elementidlist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* elementidlist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return elementidlist_descriptor_;
}

const elementidlist& elementidlist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

elementidlist* elementidlist::default_instance_ = NULL;

elementidlist* elementidlist::New() const {
  return new elementidlist;
}

void elementidlist::Clear() {
  crashmaterial_ = false;
  guid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool elementidlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elementidlist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string guid = 1;
      case 1: {
        if (tag == 10) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_guid;
        if (input->ExpectTag(16)) goto parse_crashmaterial;
        break;
      }

      // required bool crashmaterial = 2;
      case 2: {
        if (tag == 16) {
         parse_crashmaterial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &crashmaterial_)));
          set_has_crashmaterial();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elementidlist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elementidlist)
  return false;
#undef DO_
}

void elementidlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elementidlist)
  // repeated string guid = 1;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->guid(i), output);
  }

  // required bool crashmaterial = 2;
  if (has_crashmaterial()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->crashmaterial(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:elementidlist)
}

::google::protobuf::uint8* elementidlist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:elementidlist)
  // repeated string guid = 1;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->guid(i), target);
  }

  // required bool crashmaterial = 2;
  if (has_crashmaterial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->crashmaterial(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elementidlist)
  return target;
}

int elementidlist::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required bool crashmaterial = 2;
    if (has_crashmaterial()) {
      total_size += 1 + 1;
    }

  }
  // repeated string guid = 1;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void elementidlist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const elementidlist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const elementidlist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void elementidlist::MergeFrom(const elementidlist& from) {
  GOOGLE_CHECK_NE(&from, this);
  guid_.MergeFrom(from.guid_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_crashmaterial()) {
      set_crashmaterial(from.crashmaterial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void elementidlist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void elementidlist::CopyFrom(const elementidlist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool elementidlist::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void elementidlist::Swap(elementidlist* other) {
  if (other != this) {
    guid_.Swap(&other->guid_);
    std::swap(crashmaterial_, other->crashmaterial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata elementidlist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = elementidlist_descriptor_;
  metadata.reflection = elementidlist_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pointmessage::kP0XFieldNumber;
const int pointmessage::kP0YFieldNumber;
#endif  // !_MSC_VER

pointmessage::pointmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pointmessage)
}

void pointmessage::InitAsDefaultInstance() {
}

pointmessage::pointmessage(const pointmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pointmessage)
}

void pointmessage::SharedCtor() {
  _cached_size_ = 0;
  p0x_ = 0;
  p0y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pointmessage::~pointmessage() {
  // @@protoc_insertion_point(destructor:pointmessage)
  SharedDtor();
}

void pointmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void pointmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pointmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pointmessage_descriptor_;
}

const pointmessage& pointmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

pointmessage* pointmessage::default_instance_ = NULL;

pointmessage* pointmessage::New() const {
  return new pointmessage;
}

void pointmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<pointmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(p0x_, p0y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pointmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pointmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double p0x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0x_)));
          set_has_p0x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p0y;
        break;
      }

      // required double p0y = 2;
      case 2: {
        if (tag == 17) {
         parse_p0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0y_)));
          set_has_p0y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pointmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pointmessage)
  return false;
#undef DO_
}

void pointmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pointmessage)
  // required double p0x = 1;
  if (has_p0x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->p0x(), output);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->p0y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pointmessage)
}

::google::protobuf::uint8* pointmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pointmessage)
  // required double p0x = 1;
  if (has_p0x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->p0x(), target);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->p0y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pointmessage)
  return target;
}

int pointmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double p0x = 1;
    if (has_p0x()) {
      total_size += 1 + 8;
    }

    // required double p0y = 2;
    if (has_p0y()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pointmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pointmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pointmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pointmessage::MergeFrom(const pointmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_p0x()) {
      set_p0x(from.p0x());
    }
    if (from.has_p0y()) {
      set_p0y(from.p0y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pointmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pointmessage::CopyFrom(const pointmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pointmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void pointmessage::Swap(pointmessage* other) {
  if (other != this) {
    std::swap(p0x_, other->p0x_);
    std::swap(p0y_, other->p0y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pointmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pointmessage_descriptor_;
  metadata.reflection = pointmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int polyarcmessage::kBegindexFieldNumber;
const int polyarcmessage::kEndindexFieldNumber;
const int polyarcmessage::kArcangleFieldNumber;
#endif  // !_MSC_VER

polyarcmessage::polyarcmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polyarcmessage)
}

void polyarcmessage::InitAsDefaultInstance() {
}

polyarcmessage::polyarcmessage(const polyarcmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polyarcmessage)
}

void polyarcmessage::SharedCtor() {
  _cached_size_ = 0;
  begindex_ = 0;
  endindex_ = 0;
  arcangle_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

polyarcmessage::~polyarcmessage() {
  // @@protoc_insertion_point(destructor:polyarcmessage)
  SharedDtor();
}

void polyarcmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void polyarcmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* polyarcmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return polyarcmessage_descriptor_;
}

const polyarcmessage& polyarcmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

polyarcmessage* polyarcmessage::default_instance_ = NULL;

polyarcmessage* polyarcmessage::New() const {
  return new polyarcmessage;
}

void polyarcmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<polyarcmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(begindex_, arcangle_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool polyarcmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polyarcmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 begindex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begindex_)));
          set_has_begindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_endindex;
        break;
      }

      // required int32 endindex = 2;
      case 2: {
        if (tag == 16) {
         parse_endindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endindex_)));
          set_has_endindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_arcangle;
        break;
      }

      // required double arcangle = 3;
      case 3: {
        if (tag == 25) {
         parse_arcangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arcangle_)));
          set_has_arcangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polyarcmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polyarcmessage)
  return false;
#undef DO_
}

void polyarcmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polyarcmessage)
  // required int32 begindex = 1;
  if (has_begindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->begindex(), output);
  }

  // required int32 endindex = 2;
  if (has_endindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->endindex(), output);
  }

  // required double arcangle = 3;
  if (has_arcangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->arcangle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polyarcmessage)
}

::google::protobuf::uint8* polyarcmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polyarcmessage)
  // required int32 begindex = 1;
  if (has_begindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->begindex(), target);
  }

  // required int32 endindex = 2;
  if (has_endindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->endindex(), target);
  }

  // required double arcangle = 3;
  if (has_arcangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->arcangle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polyarcmessage)
  return target;
}

int polyarcmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 begindex = 1;
    if (has_begindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begindex());
    }

    // required int32 endindex = 2;
    if (has_endindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endindex());
    }

    // required double arcangle = 3;
    if (has_arcangle()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void polyarcmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const polyarcmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const polyarcmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void polyarcmessage::MergeFrom(const polyarcmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begindex()) {
      set_begindex(from.begindex());
    }
    if (from.has_endindex()) {
      set_endindex(from.endindex());
    }
    if (from.has_arcangle()) {
      set_arcangle(from.arcangle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void polyarcmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void polyarcmessage::CopyFrom(const polyarcmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool polyarcmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void polyarcmessage::Swap(polyarcmessage* other) {
  if (other != this) {
    std::swap(begindex_, other->begindex_);
    std::swap(endindex_, other->endindex_);
    std::swap(arcangle_, other->arcangle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata polyarcmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = polyarcmessage_descriptor_;
  metadata.reflection = polyarcmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int doublemessage::kDFieldNumber;
#endif  // !_MSC_VER

doublemessage::doublemessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:doublemessage)
}

void doublemessage::InitAsDefaultInstance() {
}

doublemessage::doublemessage(const doublemessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:doublemessage)
}

void doublemessage::SharedCtor() {
  _cached_size_ = 0;
  d_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

doublemessage::~doublemessage() {
  // @@protoc_insertion_point(destructor:doublemessage)
  SharedDtor();
}

void doublemessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void doublemessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* doublemessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return doublemessage_descriptor_;
}

const doublemessage& doublemessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

doublemessage* doublemessage::default_instance_ = NULL;

doublemessage* doublemessage::New() const {
  return new doublemessage;
}

void doublemessage::Clear() {
  d_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool doublemessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:doublemessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double d = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d_)));
          set_has_d();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:doublemessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:doublemessage)
  return false;
#undef DO_
}

void doublemessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:doublemessage)
  // required double d = 1;
  if (has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->d(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:doublemessage)
}

::google::protobuf::uint8* doublemessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:doublemessage)
  // required double d = 1;
  if (has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->d(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:doublemessage)
  return target;
}

int doublemessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double d = 1;
    if (has_d()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void doublemessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const doublemessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const doublemessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void doublemessage::MergeFrom(const doublemessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_d()) {
      set_d(from.d());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void doublemessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void doublemessage::CopyFrom(const doublemessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool doublemessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void doublemessage::Swap(doublemessage* other) {
  if (other != this) {
    std::swap(d_, other->d_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata doublemessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = doublemessage_descriptor_;
  metadata.reflection = doublemessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int intlistmsg::kIlistFieldNumber;
#endif  // !_MSC_VER

intlistmsg::intlistmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:intlistmsg)
}

void intlistmsg::InitAsDefaultInstance() {
}

intlistmsg::intlistmsg(const intlistmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:intlistmsg)
}

void intlistmsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intlistmsg::~intlistmsg() {
  // @@protoc_insertion_point(destructor:intlistmsg)
  SharedDtor();
}

void intlistmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void intlistmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intlistmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intlistmsg_descriptor_;
}

const intlistmsg& intlistmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

intlistmsg* intlistmsg::default_instance_ = NULL;

intlistmsg* intlistmsg::New() const {
  return new intlistmsg;
}

void intlistmsg::Clear() {
  ilist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool intlistmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intlistmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 ilist = 1;
      case 1: {
        if (tag == 8) {
         parse_ilist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_ilist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ilist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ilist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intlistmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intlistmsg)
  return false;
#undef DO_
}

void intlistmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intlistmsg)
  // repeated int32 ilist = 1;
  for (int i = 0; i < this->ilist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->ilist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:intlistmsg)
}

::google::protobuf::uint8* intlistmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:intlistmsg)
  // repeated int32 ilist = 1;
  for (int i = 0; i < this->ilist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->ilist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intlistmsg)
  return target;
}

int intlistmsg::ByteSize() const {
  int total_size = 0;

  // repeated int32 ilist = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ilist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ilist(i));
    }
    total_size += 1 * this->ilist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intlistmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const intlistmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intlistmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intlistmsg::MergeFrom(const intlistmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  ilist_.MergeFrom(from.ilist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void intlistmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intlistmsg::CopyFrom(const intlistmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intlistmsg::IsInitialized() const {

  return true;
}

void intlistmsg::Swap(intlistmsg* other) {
  if (other != this) {
    ilist_.Swap(&other->ilist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata intlistmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intlistmsg_descriptor_;
  metadata.reflection = intlistmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int repeateddoublemsg::kDlistFieldNumber;
#endif  // !_MSC_VER

repeateddoublemsg::repeateddoublemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:repeateddoublemsg)
}

void repeateddoublemsg::InitAsDefaultInstance() {
}

repeateddoublemsg::repeateddoublemsg(const repeateddoublemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:repeateddoublemsg)
}

void repeateddoublemsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

repeateddoublemsg::~repeateddoublemsg() {
  // @@protoc_insertion_point(destructor:repeateddoublemsg)
  SharedDtor();
}

void repeateddoublemsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void repeateddoublemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* repeateddoublemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return repeateddoublemsg_descriptor_;
}

const repeateddoublemsg& repeateddoublemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

repeateddoublemsg* repeateddoublemsg::default_instance_ = NULL;

repeateddoublemsg* repeateddoublemsg::New() const {
  return new repeateddoublemsg;
}

void repeateddoublemsg::Clear() {
  dlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool repeateddoublemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:repeateddoublemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double dlist = 1;
      case 1: {
        if (tag == 9) {
         parse_dlist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_dlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_dlist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:repeateddoublemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:repeateddoublemsg)
  return false;
#undef DO_
}

void repeateddoublemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:repeateddoublemsg)
  // repeated double dlist = 1;
  for (int i = 0; i < this->dlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->dlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:repeateddoublemsg)
}

::google::protobuf::uint8* repeateddoublemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:repeateddoublemsg)
  // repeated double dlist = 1;
  for (int i = 0; i < this->dlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->dlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:repeateddoublemsg)
  return target;
}

int repeateddoublemsg::ByteSize() const {
  int total_size = 0;

  // repeated double dlist = 1;
  {
    int data_size = 0;
    data_size = 8 * this->dlist_size();
    total_size += 1 * this->dlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void repeateddoublemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const repeateddoublemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const repeateddoublemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void repeateddoublemsg::MergeFrom(const repeateddoublemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  dlist_.MergeFrom(from.dlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void repeateddoublemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void repeateddoublemsg::CopyFrom(const repeateddoublemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool repeateddoublemsg::IsInitialized() const {

  return true;
}

void repeateddoublemsg::Swap(repeateddoublemsg* other) {
  if (other != this) {
    dlist_.Swap(&other->dlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata repeateddoublemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = repeateddoublemsg_descriptor_;
  metadata.reflection = repeateddoublemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int additionalparams::kNamesFieldNumber;
const int additionalparams::kDoublesFieldNumber;
const int additionalparams::kStringsFieldNumber;
const int additionalparams::kIntegersFieldNumber;
const int additionalparams::kBooleansFieldNumber;
const int additionalparams::kParamtypeFieldNumber;
const int additionalparams::kIntarraysFieldNumber;
const int additionalparams::kDoublearraysFieldNumber;
const int additionalparams::kBoolarraysFieldNumber;
const int additionalparams::kStringarraysFieldNumber;
const int additionalparams::kIsarrayFieldNumber;
#endif  // !_MSC_VER

additionalparams::additionalparams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:additionalparams)
}

void additionalparams::InitAsDefaultInstance() {
}

additionalparams::additionalparams(const additionalparams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:additionalparams)
}

void additionalparams::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

additionalparams::~additionalparams() {
  // @@protoc_insertion_point(destructor:additionalparams)
  SharedDtor();
}

void additionalparams::SharedDtor() {
  if (this != default_instance_) {
  }
}

void additionalparams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* additionalparams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return additionalparams_descriptor_;
}

const additionalparams& additionalparams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

additionalparams* additionalparams::default_instance_ = NULL;

additionalparams* additionalparams::New() const {
  return new additionalparams;
}

void additionalparams::Clear() {
  names_.Clear();
  doubles_.Clear();
  strings_.Clear();
  integers_.Clear();
  booleans_.Clear();
  paramtype_.Clear();
  intarrays_.Clear();
  doublearrays_.Clear();
  boolarrays_.Clear();
  stringarrays_.Clear();
  isarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool additionalparams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:additionalparams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (tag == 10) {
         parse_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->names(this->names_size() - 1).data(),
            this->names(this->names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "names");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_names;
        if (input->ExpectTag(17)) goto parse_doubles;
        break;
      }

      // repeated double doubles = 2;
      case 2: {
        if (tag == 17) {
         parse_doubles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_doubles())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_doubles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_doubles;
        if (input->ExpectTag(26)) goto parse_strings;
        break;
      }

      // repeated string strings = 3;
      case 3: {
        if (tag == 26) {
         parse_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strings(this->strings_size() - 1).data(),
            this->strings(this->strings_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strings");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_strings;
        if (input->ExpectTag(32)) goto parse_integers;
        break;
      }

      // repeated int32 integers = 4;
      case 4: {
        if (tag == 32) {
         parse_integers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_integers())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_integers())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_integers;
        if (input->ExpectTag(40)) goto parse_booleans;
        break;
      }

      // repeated bool booleans = 5;
      case 5: {
        if (tag == 40) {
         parse_booleans:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 40, input, this->mutable_booleans())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_booleans())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_booleans;
        if (input->ExpectTag(50)) goto parse_paramtype;
        break;
      }

      // repeated string paramtype = 6;
      case 6: {
        if (tag == 50) {
         parse_paramtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_paramtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paramtype(this->paramtype_size() - 1).data(),
            this->paramtype(this->paramtype_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paramtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_paramtype;
        if (input->ExpectTag(58)) goto parse_intarrays;
        break;
      }

      // repeated .intarray intarrays = 7;
      case 7: {
        if (tag == 58) {
         parse_intarrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_intarrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_intarrays;
        if (input->ExpectTag(66)) goto parse_doublearrays;
        break;
      }

      // repeated .doublearray doublearrays = 8;
      case 8: {
        if (tag == 66) {
         parse_doublearrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_doublearrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_doublearrays;
        if (input->ExpectTag(74)) goto parse_boolarrays;
        break;
      }

      // repeated .boolarray boolarrays = 9;
      case 9: {
        if (tag == 74) {
         parse_boolarrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_boolarrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_boolarrays;
        if (input->ExpectTag(82)) goto parse_stringarrays;
        break;
      }

      // repeated .stringarray stringarrays = 10;
      case 10: {
        if (tag == 82) {
         parse_stringarrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stringarrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_stringarrays;
        if (input->ExpectTag(88)) goto parse_isarray;
        break;
      }

      // repeated bool isarray = 11;
      case 11: {
        if (tag == 88) {
         parse_isarray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 88, input, this->mutable_isarray())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_isarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_isarray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:additionalparams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:additionalparams)
  return false;
#undef DO_
}

void additionalparams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:additionalparams)
  // repeated string names = 1;
  for (int i = 0; i < this->names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->names(i).data(), this->names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  // repeated double doubles = 2;
  for (int i = 0; i < this->doubles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->doubles(i), output);
  }

  // repeated string strings = 3;
  for (int i = 0; i < this->strings_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->strings(i).data(), this->strings(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strings(i), output);
  }

  // repeated int32 integers = 4;
  for (int i = 0; i < this->integers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->integers(i), output);
  }

  // repeated bool booleans = 5;
  for (int i = 0; i < this->booleans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      5, this->booleans(i), output);
  }

  // repeated string paramtype = 6;
  for (int i = 0; i < this->paramtype_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->paramtype(i).data(), this->paramtype(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "paramtype");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->paramtype(i), output);
  }

  // repeated .intarray intarrays = 7;
  for (int i = 0; i < this->intarrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->intarrays(i), output);
  }

  // repeated .doublearray doublearrays = 8;
  for (int i = 0; i < this->doublearrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->doublearrays(i), output);
  }

  // repeated .boolarray boolarrays = 9;
  for (int i = 0; i < this->boolarrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->boolarrays(i), output);
  }

  // repeated .stringarray stringarrays = 10;
  for (int i = 0; i < this->stringarrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->stringarrays(i), output);
  }

  // repeated bool isarray = 11;
  for (int i = 0; i < this->isarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      11, this->isarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:additionalparams)
}

::google::protobuf::uint8* additionalparams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:additionalparams)
  // repeated string names = 1;
  for (int i = 0; i < this->names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->names(i).data(), this->names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  // repeated double doubles = 2;
  for (int i = 0; i < this->doubles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->doubles(i), target);
  }

  // repeated string strings = 3;
  for (int i = 0; i < this->strings_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strings(i).data(), this->strings(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->strings(i), target);
  }

  // repeated int32 integers = 4;
  for (int i = 0; i < this->integers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->integers(i), target);
  }

  // repeated bool booleans = 5;
  for (int i = 0; i < this->booleans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(5, this->booleans(i), target);
  }

  // repeated string paramtype = 6;
  for (int i = 0; i < this->paramtype_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paramtype(i).data(), this->paramtype(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paramtype");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->paramtype(i), target);
  }

  // repeated .intarray intarrays = 7;
  for (int i = 0; i < this->intarrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->intarrays(i), target);
  }

  // repeated .doublearray doublearrays = 8;
  for (int i = 0; i < this->doublearrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->doublearrays(i), target);
  }

  // repeated .boolarray boolarrays = 9;
  for (int i = 0; i < this->boolarrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->boolarrays(i), target);
  }

  // repeated .stringarray stringarrays = 10;
  for (int i = 0; i < this->stringarrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->stringarrays(i), target);
  }

  // repeated bool isarray = 11;
  for (int i = 0; i < this->isarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(11, this->isarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:additionalparams)
  return target;
}

int additionalparams::ByteSize() const {
  int total_size = 0;

  // repeated string names = 1;
  total_size += 1 * this->names_size();
  for (int i = 0; i < this->names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // repeated double doubles = 2;
  {
    int data_size = 0;
    data_size = 8 * this->doubles_size();
    total_size += 1 * this->doubles_size() + data_size;
  }

  // repeated string strings = 3;
  total_size += 1 * this->strings_size();
  for (int i = 0; i < this->strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strings(i));
  }

  // repeated int32 integers = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->integers_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->integers(i));
    }
    total_size += 1 * this->integers_size() + data_size;
  }

  // repeated bool booleans = 5;
  {
    int data_size = 0;
    data_size = 1 * this->booleans_size();
    total_size += 1 * this->booleans_size() + data_size;
  }

  // repeated string paramtype = 6;
  total_size += 1 * this->paramtype_size();
  for (int i = 0; i < this->paramtype_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->paramtype(i));
  }

  // repeated .intarray intarrays = 7;
  total_size += 1 * this->intarrays_size();
  for (int i = 0; i < this->intarrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->intarrays(i));
  }

  // repeated .doublearray doublearrays = 8;
  total_size += 1 * this->doublearrays_size();
  for (int i = 0; i < this->doublearrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->doublearrays(i));
  }

  // repeated .boolarray boolarrays = 9;
  total_size += 1 * this->boolarrays_size();
  for (int i = 0; i < this->boolarrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boolarrays(i));
  }

  // repeated .stringarray stringarrays = 10;
  total_size += 1 * this->stringarrays_size();
  for (int i = 0; i < this->stringarrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stringarrays(i));
  }

  // repeated bool isarray = 11;
  {
    int data_size = 0;
    data_size = 1 * this->isarray_size();
    total_size += 1 * this->isarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void additionalparams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const additionalparams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const additionalparams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void additionalparams::MergeFrom(const additionalparams& from) {
  GOOGLE_CHECK_NE(&from, this);
  names_.MergeFrom(from.names_);
  doubles_.MergeFrom(from.doubles_);
  strings_.MergeFrom(from.strings_);
  integers_.MergeFrom(from.integers_);
  booleans_.MergeFrom(from.booleans_);
  paramtype_.MergeFrom(from.paramtype_);
  intarrays_.MergeFrom(from.intarrays_);
  doublearrays_.MergeFrom(from.doublearrays_);
  boolarrays_.MergeFrom(from.boolarrays_);
  stringarrays_.MergeFrom(from.stringarrays_);
  isarray_.MergeFrom(from.isarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void additionalparams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void additionalparams::CopyFrom(const additionalparams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool additionalparams::IsInitialized() const {

  return true;
}

void additionalparams::Swap(additionalparams* other) {
  if (other != this) {
    names_.Swap(&other->names_);
    doubles_.Swap(&other->doubles_);
    strings_.Swap(&other->strings_);
    integers_.Swap(&other->integers_);
    booleans_.Swap(&other->booleans_);
    paramtype_.Swap(&other->paramtype_);
    intarrays_.Swap(&other->intarrays_);
    doublearrays_.Swap(&other->doublearrays_);
    boolarrays_.Swap(&other->boolarrays_);
    stringarrays_.Swap(&other->stringarrays_);
    isarray_.Swap(&other->isarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata additionalparams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = additionalparams_descriptor_;
  metadata.reflection = additionalparams_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rooflevelsmsg::kAngleFieldNumber;
const int rooflevelsmsg::kHeightFieldNumber;
#endif  // !_MSC_VER

rooflevelsmsg::rooflevelsmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rooflevelsmsg)
}

void rooflevelsmsg::InitAsDefaultInstance() {
}

rooflevelsmsg::rooflevelsmsg(const rooflevelsmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rooflevelsmsg)
}

void rooflevelsmsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rooflevelsmsg::~rooflevelsmsg() {
  // @@protoc_insertion_point(destructor:rooflevelsmsg)
  SharedDtor();
}

void rooflevelsmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rooflevelsmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rooflevelsmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rooflevelsmsg_descriptor_;
}

const rooflevelsmsg& rooflevelsmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

rooflevelsmsg* rooflevelsmsg::default_instance_ = NULL;

rooflevelsmsg* rooflevelsmsg::New() const {
  return new rooflevelsmsg;
}

void rooflevelsmsg::Clear() {
  angle_.Clear();
  height_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rooflevelsmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rooflevelsmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double angle = 1;
      case 1: {
        if (tag == 9) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_angle())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_angle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_angle;
        if (input->ExpectTag(17)) goto parse_height;
        break;
      }

      // repeated double height = 2;
      case 2: {
        if (tag == 17) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_height())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_height())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_height;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rooflevelsmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rooflevelsmsg)
  return false;
#undef DO_
}

void rooflevelsmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rooflevelsmsg)
  // repeated double angle = 1;
  for (int i = 0; i < this->angle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->angle(i), output);
  }

  // repeated double height = 2;
  for (int i = 0; i < this->height_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->height(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rooflevelsmsg)
}

::google::protobuf::uint8* rooflevelsmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rooflevelsmsg)
  // repeated double angle = 1;
  for (int i = 0; i < this->angle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->angle(i), target);
  }

  // repeated double height = 2;
  for (int i = 0; i < this->height_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->height(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rooflevelsmsg)
  return target;
}

int rooflevelsmsg::ByteSize() const {
  int total_size = 0;

  // repeated double angle = 1;
  {
    int data_size = 0;
    data_size = 8 * this->angle_size();
    total_size += 1 * this->angle_size() + data_size;
  }

  // repeated double height = 2;
  {
    int data_size = 0;
    data_size = 8 * this->height_size();
    total_size += 1 * this->height_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rooflevelsmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rooflevelsmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rooflevelsmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rooflevelsmsg::MergeFrom(const rooflevelsmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  angle_.MergeFrom(from.angle_);
  height_.MergeFrom(from.height_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rooflevelsmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rooflevelsmsg::CopyFrom(const rooflevelsmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rooflevelsmsg::IsInitialized() const {

  return true;
}

void rooflevelsmsg::Swap(rooflevelsmsg* other) {
  if (other != this) {
    angle_.Swap(&other->angle_);
    height_.Swap(&other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rooflevelsmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rooflevelsmsg_descriptor_;
  metadata.reflection = rooflevelsmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int transmatmessage::kP0FieldNumber;
const int transmatmessage::kP1FieldNumber;
const int transmatmessage::kP2FieldNumber;
const int transmatmessage::kP3FieldNumber;
const int transmatmessage::kP4FieldNumber;
const int transmatmessage::kP5FieldNumber;
const int transmatmessage::kP6FieldNumber;
const int transmatmessage::kP7FieldNumber;
const int transmatmessage::kP8FieldNumber;
const int transmatmessage::kP9FieldNumber;
const int transmatmessage::kP10FieldNumber;
const int transmatmessage::kP11FieldNumber;
#endif  // !_MSC_VER

transmatmessage::transmatmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transmatmessage)
}

void transmatmessage::InitAsDefaultInstance() {
}

transmatmessage::transmatmessage(const transmatmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transmatmessage)
}

void transmatmessage::SharedCtor() {
  _cached_size_ = 0;
  p0_ = 0;
  p1_ = 0;
  p2_ = 0;
  p3_ = 0;
  p4_ = 0;
  p5_ = 0;
  p6_ = 0;
  p7_ = 0;
  p8_ = 0;
  p9_ = 0;
  p10_ = 0;
  p11_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

transmatmessage::~transmatmessage() {
  // @@protoc_insertion_point(destructor:transmatmessage)
  SharedDtor();
}

void transmatmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void transmatmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* transmatmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return transmatmessage_descriptor_;
}

const transmatmessage& transmatmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

transmatmessage* transmatmessage::default_instance_ = NULL;

transmatmessage* transmatmessage::New() const {
  return new transmatmessage;
}

void transmatmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<transmatmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(p0_, p7_);
  }
  ZR_(p8_, p11_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool transmatmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transmatmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double p0 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0_)));
          set_has_p0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p1;
        break;
      }

      // required double p1 = 2;
      case 2: {
        if (tag == 17) {
         parse_p1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1_)));
          set_has_p1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_p2;
        break;
      }

      // required double p2 = 3;
      case 3: {
        if (tag == 25) {
         parse_p2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p2_)));
          set_has_p2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_p3;
        break;
      }

      // required double p3 = 4;
      case 4: {
        if (tag == 33) {
         parse_p3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p3_)));
          set_has_p3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_p4;
        break;
      }

      // required double p4 = 5;
      case 5: {
        if (tag == 41) {
         parse_p4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p4_)));
          set_has_p4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_p5;
        break;
      }

      // required double p5 = 6;
      case 6: {
        if (tag == 49) {
         parse_p5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p5_)));
          set_has_p5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_p6;
        break;
      }

      // required double p6 = 7;
      case 7: {
        if (tag == 57) {
         parse_p6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p6_)));
          set_has_p6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_p7;
        break;
      }

      // required double p7 = 8;
      case 8: {
        if (tag == 65) {
         parse_p7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p7_)));
          set_has_p7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_p8;
        break;
      }

      // required double p8 = 9;
      case 9: {
        if (tag == 73) {
         parse_p8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p8_)));
          set_has_p8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_p9;
        break;
      }

      // required double p9 = 10;
      case 10: {
        if (tag == 81) {
         parse_p9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p9_)));
          set_has_p9();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_p10;
        break;
      }

      // required double p10 = 11;
      case 11: {
        if (tag == 89) {
         parse_p10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p10_)));
          set_has_p10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_p11;
        break;
      }

      // required double p11 = 12;
      case 12: {
        if (tag == 97) {
         parse_p11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p11_)));
          set_has_p11();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transmatmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transmatmessage)
  return false;
#undef DO_
}

void transmatmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transmatmessage)
  // required double p0 = 1;
  if (has_p0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->p0(), output);
  }

  // required double p1 = 2;
  if (has_p1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->p1(), output);
  }

  // required double p2 = 3;
  if (has_p2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->p2(), output);
  }

  // required double p3 = 4;
  if (has_p3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->p3(), output);
  }

  // required double p4 = 5;
  if (has_p4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->p4(), output);
  }

  // required double p5 = 6;
  if (has_p5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->p5(), output);
  }

  // required double p6 = 7;
  if (has_p6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->p6(), output);
  }

  // required double p7 = 8;
  if (has_p7()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->p7(), output);
  }

  // required double p8 = 9;
  if (has_p8()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->p8(), output);
  }

  // required double p9 = 10;
  if (has_p9()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->p9(), output);
  }

  // required double p10 = 11;
  if (has_p10()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->p10(), output);
  }

  // required double p11 = 12;
  if (has_p11()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->p11(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transmatmessage)
}

::google::protobuf::uint8* transmatmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmatmessage)
  // required double p0 = 1;
  if (has_p0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->p0(), target);
  }

  // required double p1 = 2;
  if (has_p1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->p1(), target);
  }

  // required double p2 = 3;
  if (has_p2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->p2(), target);
  }

  // required double p3 = 4;
  if (has_p3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->p3(), target);
  }

  // required double p4 = 5;
  if (has_p4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->p4(), target);
  }

  // required double p5 = 6;
  if (has_p5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->p5(), target);
  }

  // required double p6 = 7;
  if (has_p6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->p6(), target);
  }

  // required double p7 = 8;
  if (has_p7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->p7(), target);
  }

  // required double p8 = 9;
  if (has_p8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->p8(), target);
  }

  // required double p9 = 10;
  if (has_p9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->p9(), target);
  }

  // required double p10 = 11;
  if (has_p10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->p10(), target);
  }

  // required double p11 = 12;
  if (has_p11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->p11(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmatmessage)
  return target;
}

int transmatmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double p0 = 1;
    if (has_p0()) {
      total_size += 1 + 8;
    }

    // required double p1 = 2;
    if (has_p1()) {
      total_size += 1 + 8;
    }

    // required double p2 = 3;
    if (has_p2()) {
      total_size += 1 + 8;
    }

    // required double p3 = 4;
    if (has_p3()) {
      total_size += 1 + 8;
    }

    // required double p4 = 5;
    if (has_p4()) {
      total_size += 1 + 8;
    }

    // required double p5 = 6;
    if (has_p5()) {
      total_size += 1 + 8;
    }

    // required double p6 = 7;
    if (has_p6()) {
      total_size += 1 + 8;
    }

    // required double p7 = 8;
    if (has_p7()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double p8 = 9;
    if (has_p8()) {
      total_size += 1 + 8;
    }

    // required double p9 = 10;
    if (has_p9()) {
      total_size += 1 + 8;
    }

    // required double p10 = 11;
    if (has_p10()) {
      total_size += 1 + 8;
    }

    // required double p11 = 12;
    if (has_p11()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void transmatmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const transmatmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const transmatmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void transmatmessage::MergeFrom(const transmatmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_p0()) {
      set_p0(from.p0());
    }
    if (from.has_p1()) {
      set_p1(from.p1());
    }
    if (from.has_p2()) {
      set_p2(from.p2());
    }
    if (from.has_p3()) {
      set_p3(from.p3());
    }
    if (from.has_p4()) {
      set_p4(from.p4());
    }
    if (from.has_p5()) {
      set_p5(from.p5());
    }
    if (from.has_p6()) {
      set_p6(from.p6());
    }
    if (from.has_p7()) {
      set_p7(from.p7());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_p8()) {
      set_p8(from.p8());
    }
    if (from.has_p9()) {
      set_p9(from.p9());
    }
    if (from.has_p10()) {
      set_p10(from.p10());
    }
    if (from.has_p11()) {
      set_p11(from.p11());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void transmatmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void transmatmessage::CopyFrom(const transmatmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool transmatmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;

  return true;
}

void transmatmessage::Swap(transmatmessage* other) {
  if (other != this) {
    std::swap(p0_, other->p0_);
    std::swap(p1_, other->p1_);
    std::swap(p2_, other->p2_);
    std::swap(p3_, other->p3_);
    std::swap(p4_, other->p4_);
    std::swap(p5_, other->p5_);
    std::swap(p6_, other->p6_);
    std::swap(p7_, other->p7_);
    std::swap(p8_, other->p8_);
    std::swap(p9_, other->p9_);
    std::swap(p10_, other->p10_);
    std::swap(p11_, other->p11_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata transmatmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = transmatmessage_descriptor_;
  metadata.reflection = transmatmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int wallmsg::kBottomindexFieldNumber;
const int wallmsg::kThicknessFieldNumber;
const int wallmsg::kArcsFieldNumber;
const int wallmsg::kUpperindexFieldNumber;
const int wallmsg::kMaterialFieldNumber;
const int wallmsg::kTypeFieldNumber;
const int wallmsg::kReferencelineFieldNumber;
const int wallmsg::kAlphaangleFieldNumber;
const int wallmsg::kBetaangleFieldNumber;
const int wallmsg::kTypeprofileFieldNumber;
const int wallmsg::kPtsFieldNumber;
const int wallmsg::kProfilenameFieldNumber;
const int wallmsg::kHeightFieldNumber;
const int wallmsg::kFlippedFieldNumber;
const int wallmsg::kBottomoffsetFieldNumber;
const int wallmsg::kLayerFieldNumber;
const int wallmsg::kWindowsFieldNumber;
const int wallmsg::kWindoworderFieldNumber;
const int wallmsg::kRefoffsetFieldNumber;
const int wallmsg::kRefmatFieldNumber;
const int wallmsg::kOppmatFieldNumber;
const int wallmsg::kSidmatFieldNumber;
#endif  // !_MSC_VER

wallmsg::wallmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wallmsg)
}

void wallmsg::InitAsDefaultInstance() {
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
}

wallmsg::wallmsg(const wallmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:wallmsg)
}

void wallmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bottomindex_ = 0;
  thickness_ = 0;
  arcs_ = NULL;
  upperindex_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referenceline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alphaangle_ = 0;
  betaangle_ = 0;
  typeprofile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pts_ = NULL;
  profilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = 0;
  flipped_ = false;
  bottomoffset_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  refoffset_ = 0;
  refmat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oppmat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sidmat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

wallmsg::~wallmsg() {
  // @@protoc_insertion_point(destructor:wallmsg)
  SharedDtor();
}

void wallmsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (referenceline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referenceline_;
  }
  if (typeprofile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete typeprofile_;
  }
  if (profilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profilename_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (refmat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete refmat_;
  }
  if (oppmat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oppmat_;
  }
  if (sidmat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sidmat_;
  }
  if (this != default_instance_) {
    delete arcs_;
    delete pts_;
  }
}

void wallmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wallmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return wallmsg_descriptor_;
}

const wallmsg& wallmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

wallmsg* wallmsg::default_instance_ = NULL;

wallmsg* wallmsg::New() const {
  return new wallmsg;
}

void wallmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<wallmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(thickness_, upperindex_);
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_referenceline()) {
      if (referenceline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        referenceline_->clear();
      }
    }
    alphaangle_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(height_, bottomoffset_);
    betaangle_ = 0;
    if (has_typeprofile()) {
      if (typeprofile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        typeprofile_->clear();
      }
    }
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_profilename()) {
      if (profilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        profilename_->clear();
      }
    }
    flipped_ = false;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 3932160) {
    refoffset_ = 0;
    if (has_refmat()) {
      if (refmat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        refmat_->clear();
      }
    }
    if (has_oppmat()) {
      if (oppmat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        oppmat_->clear();
      }
    }
    if (has_sidmat()) {
      if (sidmat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sidmat_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  windows_.Clear();
  windoworder_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool wallmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wallmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bottomindex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomindex_)));
          set_has_bottomindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_thickness;
        break;
      }

      // required double thickness = 2;
      case 2: {
        if (tag == 17) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_arcs;
        break;
      }

      // optional .polyarcsmessage arcs = 3;
      case 3: {
        if (tag == 26) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_upperindex;
        break;
      }

      // required int32 upperindex = 4;
      case 4: {
        if (tag == 32) {
         parse_upperindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upperindex_)));
          set_has_upperindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_material;
        break;
      }

      // required string material = 5;
      case 5: {
        if (tag == 42) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_type;
        break;
      }

      // required string type = 6;
      case 6: {
        if (tag == 50) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_referenceline;
        break;
      }

      // required string referenceline = 7;
      case 7: {
        if (tag == 58) {
         parse_referenceline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referenceline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referenceline().data(), this->referenceline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referenceline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_alphaangle;
        break;
      }

      // required double alphaangle = 8;
      case 8: {
        if (tag == 65) {
         parse_alphaangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alphaangle_)));
          set_has_alphaangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_betaangle;
        break;
      }

      // required double betaangle = 9;
      case 9: {
        if (tag == 73) {
         parse_betaangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &betaangle_)));
          set_has_betaangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_typeprofile;
        break;
      }

      // required string typeprofile = 10;
      case 10: {
        if (tag == 82) {
         parse_typeprofile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_typeprofile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->typeprofile().data(), this->typeprofile().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "typeprofile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_pts;
        break;
      }

      // optional .pointsmessage pts = 11;
      case 11: {
        if (tag == 90) {
         parse_pts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_profilename;
        break;
      }

      // optional string profilename = 12;
      case 12: {
        if (tag == 98) {
         parse_profilename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->profilename().data(), this->profilename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "profilename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_height;
        break;
      }

      // optional double height = 13;
      case 13: {
        if (tag == 105) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_flipped;
        break;
      }

      // optional bool flipped = 14;
      case 14: {
        if (tag == 112) {
         parse_flipped:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipped_)));
          set_has_flipped();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_bottomoffset;
        break;
      }

      // optional double bottomoffset = 15;
      case 15: {
        if (tag == 121) {
         parse_bottomoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bottomoffset_)));
          set_has_bottomoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_layer;
        break;
      }

      // optional string layer = 16;
      case 16: {
        if (tag == 130) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_windows;
        break;
      }

      // repeated .windowmessage windows = 17;
      case 17: {
        if (tag == 138) {
         parse_windows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_windows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_windows;
        if (input->ExpectTag(145)) goto parse_windoworder;
        break;
      }

      // repeated double windoworder = 18;
      case 18: {
        if (tag == 145) {
         parse_windoworder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 145, input, this->mutable_windoworder())));
        } else if (tag == 146) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_windoworder())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_windoworder;
        if (input->ExpectTag(153)) goto parse_refoffset;
        break;
      }

      // required double refoffset = 19;
      case 19: {
        if (tag == 153) {
         parse_refoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &refoffset_)));
          set_has_refoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_refmat;
        break;
      }

      // required string refmat = 20;
      case 20: {
        if (tag == 162) {
         parse_refmat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refmat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->refmat().data(), this->refmat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "refmat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_oppmat;
        break;
      }

      // required string oppmat = 21;
      case 21: {
        if (tag == 170) {
         parse_oppmat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oppmat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oppmat().data(), this->oppmat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "oppmat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_sidmat;
        break;
      }

      // required string sidmat = 22;
      case 22: {
        if (tag == 178) {
         parse_sidmat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sidmat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sidmat().data(), this->sidmat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sidmat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wallmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wallmsg)
  return false;
#undef DO_
}

void wallmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wallmsg)
  // required int32 bottomindex = 1;
  if (has_bottomindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bottomindex(), output);
  }

  // required double thickness = 2;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->thickness(), output);
  }

  // optional .polyarcsmessage arcs = 3;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arcs(), output);
  }

  // required int32 upperindex = 4;
  if (has_upperindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->upperindex(), output);
  }

  // required string material = 5;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->material(), output);
  }

  // required string type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type(), output);
  }

  // required string referenceline = 7;
  if (has_referenceline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline().data(), this->referenceline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->referenceline(), output);
  }

  // required double alphaangle = 8;
  if (has_alphaangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->alphaangle(), output);
  }

  // required double betaangle = 9;
  if (has_betaangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->betaangle(), output);
  }

  // required string typeprofile = 10;
  if (has_typeprofile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typeprofile().data(), this->typeprofile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "typeprofile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->typeprofile(), output);
  }

  // optional .pointsmessage pts = 11;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->pts(), output);
  }

  // optional string profilename = 12;
  if (has_profilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->profilename().data(), this->profilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "profilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->profilename(), output);
  }

  // optional double height = 13;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->height(), output);
  }

  // optional bool flipped = 14;
  if (has_flipped()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->flipped(), output);
  }

  // optional double bottomoffset = 15;
  if (has_bottomoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->bottomoffset(), output);
  }

  // optional string layer = 16;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->layer(), output);
  }

  // repeated .windowmessage windows = 17;
  for (int i = 0; i < this->windows_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->windows(i), output);
  }

  // repeated double windoworder = 18;
  for (int i = 0; i < this->windoworder_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      18, this->windoworder(i), output);
  }

  // required double refoffset = 19;
  if (has_refoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->refoffset(), output);
  }

  // required string refmat = 20;
  if (has_refmat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->refmat().data(), this->refmat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "refmat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->refmat(), output);
  }

  // required string oppmat = 21;
  if (has_oppmat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oppmat().data(), this->oppmat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "oppmat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->oppmat(), output);
  }

  // required string sidmat = 22;
  if (has_sidmat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sidmat().data(), this->sidmat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sidmat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->sidmat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wallmsg)
}

::google::protobuf::uint8* wallmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wallmsg)
  // required int32 bottomindex = 1;
  if (has_bottomindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bottomindex(), target);
  }

  // required double thickness = 2;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->thickness(), target);
  }

  // optional .polyarcsmessage arcs = 3;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arcs(), target);
  }

  // required int32 upperindex = 4;
  if (has_upperindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->upperindex(), target);
  }

  // required string material = 5;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->material(), target);
  }

  // required string type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // required string referenceline = 7;
  if (has_referenceline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline().data(), this->referenceline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->referenceline(), target);
  }

  // required double alphaangle = 8;
  if (has_alphaangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->alphaangle(), target);
  }

  // required double betaangle = 9;
  if (has_betaangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->betaangle(), target);
  }

  // required string typeprofile = 10;
  if (has_typeprofile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typeprofile().data(), this->typeprofile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "typeprofile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->typeprofile(), target);
  }

  // optional .pointsmessage pts = 11;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->pts(), target);
  }

  // optional string profilename = 12;
  if (has_profilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->profilename().data(), this->profilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "profilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->profilename(), target);
  }

  // optional double height = 13;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->height(), target);
  }

  // optional bool flipped = 14;
  if (has_flipped()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->flipped(), target);
  }

  // optional double bottomoffset = 15;
  if (has_bottomoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->bottomoffset(), target);
  }

  // optional string layer = 16;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->layer(), target);
  }

  // repeated .windowmessage windows = 17;
  for (int i = 0; i < this->windows_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->windows(i), target);
  }

  // repeated double windoworder = 18;
  for (int i = 0; i < this->windoworder_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(18, this->windoworder(i), target);
  }

  // required double refoffset = 19;
  if (has_refoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->refoffset(), target);
  }

  // required string refmat = 20;
  if (has_refmat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->refmat().data(), this->refmat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "refmat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->refmat(), target);
  }

  // required string oppmat = 21;
  if (has_oppmat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oppmat().data(), this->oppmat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "oppmat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->oppmat(), target);
  }

  // required string sidmat = 22;
  if (has_sidmat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sidmat().data(), this->sidmat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sidmat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->sidmat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wallmsg)
  return target;
}

int wallmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bottomindex = 1;
    if (has_bottomindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomindex());
    }

    // required double thickness = 2;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

    // optional .polyarcsmessage arcs = 3;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

    // required int32 upperindex = 4;
    if (has_upperindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upperindex());
    }

    // required string material = 5;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required string referenceline = 7;
    if (has_referenceline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referenceline());
    }

    // required double alphaangle = 8;
    if (has_alphaangle()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double betaangle = 9;
    if (has_betaangle()) {
      total_size += 1 + 8;
    }

    // required string typeprofile = 10;
    if (has_typeprofile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->typeprofile());
    }

    // optional .pointsmessage pts = 11;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // optional string profilename = 12;
    if (has_profilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->profilename());
    }

    // optional double height = 13;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // optional bool flipped = 14;
    if (has_flipped()) {
      total_size += 1 + 1;
    }

    // optional double bottomoffset = 15;
    if (has_bottomoffset()) {
      total_size += 1 + 8;
    }

    // optional string layer = 16;
    if (has_layer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (_has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    // required double refoffset = 19;
    if (has_refoffset()) {
      total_size += 2 + 8;
    }

    // required string refmat = 20;
    if (has_refmat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->refmat());
    }

    // required string oppmat = 21;
    if (has_oppmat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oppmat());
    }

    // required string sidmat = 22;
    if (has_sidmat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sidmat());
    }

  }
  // repeated .windowmessage windows = 17;
  total_size += 2 * this->windows_size();
  for (int i = 0; i < this->windows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->windows(i));
  }

  // repeated double windoworder = 18;
  {
    int data_size = 0;
    data_size = 8 * this->windoworder_size();
    total_size += 2 * this->windoworder_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wallmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const wallmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const wallmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void wallmsg::MergeFrom(const wallmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  windows_.MergeFrom(from.windows_);
  windoworder_.MergeFrom(from.windoworder_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bottomindex()) {
      set_bottomindex(from.bottomindex());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
    if (from.has_upperindex()) {
      set_upperindex(from.upperindex());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_referenceline()) {
      set_referenceline(from.referenceline());
    }
    if (from.has_alphaangle()) {
      set_alphaangle(from.alphaangle());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_betaangle()) {
      set_betaangle(from.betaangle());
    }
    if (from.has_typeprofile()) {
      set_typeprofile(from.typeprofile());
    }
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_profilename()) {
      set_profilename(from.profilename());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_flipped()) {
      set_flipped(from.flipped());
    }
    if (from.has_bottomoffset()) {
      set_bottomoffset(from.bottomoffset());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  if (from._has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    if (from.has_refoffset()) {
      set_refoffset(from.refoffset());
    }
    if (from.has_refmat()) {
      set_refmat(from.refmat());
    }
    if (from.has_oppmat()) {
      set_oppmat(from.oppmat());
    }
    if (from.has_sidmat()) {
      set_sidmat(from.sidmat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void wallmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wallmsg::CopyFrom(const wallmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wallmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x003c03fb) != 0x003c03fb) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->windows())) return false;
  return true;
}

void wallmsg::Swap(wallmsg* other) {
  if (other != this) {
    std::swap(bottomindex_, other->bottomindex_);
    std::swap(thickness_, other->thickness_);
    std::swap(arcs_, other->arcs_);
    std::swap(upperindex_, other->upperindex_);
    std::swap(material_, other->material_);
    std::swap(type_, other->type_);
    std::swap(referenceline_, other->referenceline_);
    std::swap(alphaangle_, other->alphaangle_);
    std::swap(betaangle_, other->betaangle_);
    std::swap(typeprofile_, other->typeprofile_);
    std::swap(pts_, other->pts_);
    std::swap(profilename_, other->profilename_);
    std::swap(height_, other->height_);
    std::swap(flipped_, other->flipped_);
    std::swap(bottomoffset_, other->bottomoffset_);
    std::swap(layer_, other->layer_);
    windows_.Swap(&other->windows_);
    windoworder_.Swap(&other->windoworder_);
    std::swap(refoffset_, other->refoffset_);
    std::swap(refmat_, other->refmat_);
    std::swap(oppmat_, other->oppmat_);
    std::swap(sidmat_, other->sidmat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata wallmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = wallmsg_descriptor_;
  metadata.reflection = wallmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getwallmsg::kWallsFieldNumber;
const int getwallmsg::kGuidFieldNumber;
#endif  // !_MSC_VER

getwallmsg::getwallmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:getwallmsg)
}

void getwallmsg::InitAsDefaultInstance() {
}

getwallmsg::getwallmsg(const getwallmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:getwallmsg)
}

void getwallmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getwallmsg::~getwallmsg() {
  // @@protoc_insertion_point(destructor:getwallmsg)
  SharedDtor();
}

void getwallmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getwallmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getwallmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getwallmsg_descriptor_;
}

const getwallmsg& getwallmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

getwallmsg* getwallmsg::default_instance_ = NULL;

getwallmsg* getwallmsg::New() const {
  return new getwallmsg;
}

void getwallmsg::Clear() {
  walls_.Clear();
  guid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getwallmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:getwallmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .wallmsg walls = 1;
      case 1: {
        if (tag == 10) {
         parse_walls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_walls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_walls;
        if (input->ExpectTag(18)) goto parse_guid;
        break;
      }

      // repeated string guid = 2;
      case 2: {
        if (tag == 18) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:getwallmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:getwallmsg)
  return false;
#undef DO_
}

void getwallmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:getwallmsg)
  // repeated .wallmsg walls = 1;
  for (int i = 0; i < this->walls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->walls(i), output);
  }

  // repeated string guid = 2;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->guid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:getwallmsg)
}

::google::protobuf::uint8* getwallmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:getwallmsg)
  // repeated .wallmsg walls = 1;
  for (int i = 0; i < this->walls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->walls(i), target);
  }

  // repeated string guid = 2;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->guid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:getwallmsg)
  return target;
}

int getwallmsg::ByteSize() const {
  int total_size = 0;

  // repeated .wallmsg walls = 1;
  total_size += 1 * this->walls_size();
  for (int i = 0; i < this->walls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->walls(i));
  }

  // repeated string guid = 2;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getwallmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getwallmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getwallmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getwallmsg::MergeFrom(const getwallmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  walls_.MergeFrom(from.walls_);
  guid_.MergeFrom(from.guid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getwallmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getwallmsg::CopyFrom(const getwallmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getwallmsg::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->walls())) return false;
  return true;
}

void getwallmsg::Swap(getwallmsg* other) {
  if (other != this) {
    walls_.Swap(&other->walls_);
    guid_.Swap(&other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getwallmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getwallmsg_descriptor_;
  metadata.reflection = getwallmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int wallmessage::kP0XFieldNumber;
const int wallmessage::kP0YFieldNumber;
const int wallmessage::kP1XFieldNumber;
const int wallmessage::kP1YFieldNumber;
const int wallmessage::kHeightFieldNumber;
const int wallmessage::kThicknessFieldNumber;
const int wallmessage::kAngleFieldNumber;
const int wallmessage::kBottomFieldNumber;
const int wallmessage::kMaterialFieldNumber;
const int wallmessage::kTypeFieldNumber;
const int wallmessage::kReferencelineFieldNumber;
const int wallmessage::kBottomstoryFieldNumber;
const int wallmessage::kTopstoryFieldNumber;
#endif  // !_MSC_VER

wallmessage::wallmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wallmessage)
}

void wallmessage::InitAsDefaultInstance() {
}

wallmessage::wallmessage(const wallmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:wallmessage)
}

void wallmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  p0x_ = 0;
  p0y_ = 0;
  p1x_ = 0;
  p1y_ = 0;
  height_ = 0;
  thickness_ = 0;
  angle_ = 0;
  bottom_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referenceline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bottomstory_ = 0;
  topstory_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

wallmessage::~wallmessage() {
  // @@protoc_insertion_point(destructor:wallmessage)
  SharedDtor();
}

void wallmessage::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (referenceline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referenceline_;
  }
  if (this != default_instance_) {
  }
}

void wallmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wallmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return wallmessage_descriptor_;
}

const wallmessage& wallmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

wallmessage* wallmessage::default_instance_ = NULL;

wallmessage* wallmessage::New() const {
  return new wallmessage;
}

void wallmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<wallmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(p0x_, bottom_);
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(bottomstory_, topstory_);
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_referenceline()) {
      if (referenceline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        referenceline_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool wallmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wallmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double p0x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0x_)));
          set_has_p0x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p0y;
        break;
      }

      // required double p0y = 2;
      case 2: {
        if (tag == 17) {
         parse_p0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0y_)));
          set_has_p0y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_p1x;
        break;
      }

      // required double p1x = 3;
      case 3: {
        if (tag == 25) {
         parse_p1x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1x_)));
          set_has_p1x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_p1y;
        break;
      }

      // required double p1y = 4;
      case 4: {
        if (tag == 33) {
         parse_p1y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1y_)));
          set_has_p1y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_height;
        break;
      }

      // required double height = 5;
      case 5: {
        if (tag == 41) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_thickness;
        break;
      }

      // required double thickness = 6;
      case 6: {
        if (tag == 49) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_angle;
        break;
      }

      // required double angle = 7;
      case 7: {
        if (tag == 57) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_bottom;
        break;
      }

      // required double bottom = 8;
      case 8: {
        if (tag == 65) {
         parse_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_material;
        break;
      }

      // required string material = 9;
      case 9: {
        if (tag == 74) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_type;
        break;
      }

      // required string type = 10;
      case 10: {
        if (tag == 82) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_referenceline;
        break;
      }

      // required string referenceline = 11;
      case 11: {
        if (tag == 90) {
         parse_referenceline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referenceline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referenceline().data(), this->referenceline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referenceline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bottomstory;
        break;
      }

      // optional int32 bottomstory = 12;
      case 12: {
        if (tag == 96) {
         parse_bottomstory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomstory_)));
          set_has_bottomstory();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_topstory;
        break;
      }

      // optional int32 topstory = 13;
      case 13: {
        if (tag == 104) {
         parse_topstory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topstory_)));
          set_has_topstory();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wallmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wallmessage)
  return false;
#undef DO_
}

void wallmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wallmessage)
  // required double p0x = 1;
  if (has_p0x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->p0x(), output);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->p0y(), output);
  }

  // required double p1x = 3;
  if (has_p1x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->p1x(), output);
  }

  // required double p1y = 4;
  if (has_p1y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->p1y(), output);
  }

  // required double height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->height(), output);
  }

  // required double thickness = 6;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->thickness(), output);
  }

  // required double angle = 7;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->angle(), output);
  }

  // required double bottom = 8;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->bottom(), output);
  }

  // required string material = 9;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->material(), output);
  }

  // required string type = 10;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->type(), output);
  }

  // required string referenceline = 11;
  if (has_referenceline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline().data(), this->referenceline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->referenceline(), output);
  }

  // optional int32 bottomstory = 12;
  if (has_bottomstory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->bottomstory(), output);
  }

  // optional int32 topstory = 13;
  if (has_topstory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->topstory(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wallmessage)
}

::google::protobuf::uint8* wallmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wallmessage)
  // required double p0x = 1;
  if (has_p0x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->p0x(), target);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->p0y(), target);
  }

  // required double p1x = 3;
  if (has_p1x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->p1x(), target);
  }

  // required double p1y = 4;
  if (has_p1y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->p1y(), target);
  }

  // required double height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->height(), target);
  }

  // required double thickness = 6;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->thickness(), target);
  }

  // required double angle = 7;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->angle(), target);
  }

  // required double bottom = 8;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->bottom(), target);
  }

  // required string material = 9;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->material(), target);
  }

  // required string type = 10;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->type(), target);
  }

  // required string referenceline = 11;
  if (has_referenceline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline().data(), this->referenceline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->referenceline(), target);
  }

  // optional int32 bottomstory = 12;
  if (has_bottomstory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->bottomstory(), target);
  }

  // optional int32 topstory = 13;
  if (has_topstory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->topstory(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wallmessage)
  return target;
}

int wallmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double p0x = 1;
    if (has_p0x()) {
      total_size += 1 + 8;
    }

    // required double p0y = 2;
    if (has_p0y()) {
      total_size += 1 + 8;
    }

    // required double p1x = 3;
    if (has_p1x()) {
      total_size += 1 + 8;
    }

    // required double p1y = 4;
    if (has_p1y()) {
      total_size += 1 + 8;
    }

    // required double height = 5;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required double thickness = 6;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

    // required double angle = 7;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required double bottom = 8;
    if (has_bottom()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string material = 9;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string type = 10;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required string referenceline = 11;
    if (has_referenceline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referenceline());
    }

    // optional int32 bottomstory = 12;
    if (has_bottomstory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomstory());
    }

    // optional int32 topstory = 13;
    if (has_topstory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->topstory());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wallmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const wallmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const wallmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void wallmessage::MergeFrom(const wallmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_p0x()) {
      set_p0x(from.p0x());
    }
    if (from.has_p0y()) {
      set_p0y(from.p0y());
    }
    if (from.has_p1x()) {
      set_p1x(from.p1x());
    }
    if (from.has_p1y()) {
      set_p1y(from.p1y());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_referenceline()) {
      set_referenceline(from.referenceline());
    }
    if (from.has_bottomstory()) {
      set_bottomstory(from.bottomstory());
    }
    if (from.has_topstory()) {
      set_topstory(from.topstory());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void wallmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wallmessage::CopyFrom(const wallmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wallmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void wallmessage::Swap(wallmessage* other) {
  if (other != this) {
    std::swap(p0x_, other->p0x_);
    std::swap(p0y_, other->p0y_);
    std::swap(p1x_, other->p1x_);
    std::swap(p1y_, other->p1y_);
    std::swap(height_, other->height_);
    std::swap(thickness_, other->thickness_);
    std::swap(angle_, other->angle_);
    std::swap(bottom_, other->bottom_);
    std::swap(material_, other->material_);
    std::swap(type_, other->type_);
    std::swap(referenceline_, other->referenceline_);
    std::swap(bottomstory_, other->bottomstory_);
    std::swap(topstory_, other->topstory_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata wallmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = wallmessage_descriptor_;
  metadata.reflection = wallmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int doormessage::kGuidFieldNumber;
const int doormessage::kObjlocFieldNumber;
const int doormessage::kZposFieldNumber;
const int doormessage::kHeightFieldNumber;
const int doormessage::kWidthFieldNumber;
const int doormessage::kHoleFieldNumber;
const int doormessage::kNameFieldNumber;
const int doormessage::kFlipxFieldNumber;
const int doormessage::kFlipyFieldNumber;
const int doormessage::kParamsFieldNumber;
const int doormessage::kDepthoffsetFieldNumber;
const int doormessage::kLayerFieldNumber;
#endif  // !_MSC_VER

doormessage::doormessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:doormessage)
}

void doormessage::InitAsDefaultInstance() {
  params_ = const_cast< ::additionalparams*>(&::additionalparams::default_instance());
}

doormessage::doormessage(const doormessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:doormessage)
}

void doormessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objloc_ = 0;
  zpos_ = 0;
  height_ = 0;
  width_ = 0;
  hole_ = false;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flipx_ = false;
  flipy_ = false;
  params_ = NULL;
  depthoffset_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

doormessage::~doormessage() {
  // @@protoc_insertion_point(destructor:doormessage)
  SharedDtor();
}

void doormessage::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
    delete params_;
  }
}

void doormessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* doormessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return doormessage_descriptor_;
}

const doormessage& doormessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

doormessage* doormessage::default_instance_ = NULL;

doormessage* doormessage::New() const {
  return new doormessage;
}

void doormessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<doormessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objloc_, width_);
    ZR_(hole_, flipx_);
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    flipy_ = false;
    if (has_params()) {
      if (params_ != NULL) params_->::additionalparams::Clear();
    }
    depthoffset_ = 0;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool doormessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:doormessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_objloc;
        break;
      }

      // required double objloc = 2;
      case 2: {
        if (tag == 17) {
         parse_objloc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objloc_)));
          set_has_objloc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_zpos;
        break;
      }

      // required double zpos = 3;
      case 3: {
        if (tag == 25) {
         parse_zpos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zpos_)));
          set_has_zpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_height;
        break;
      }

      // required double height = 4;
      case 4: {
        if (tag == 33) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_width;
        break;
      }

      // required double width = 5;
      case 5: {
        if (tag == 41) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hole;
        break;
      }

      // required bool hole = 6;
      case 6: {
        if (tag == 48) {
         parse_hole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hole_)));
          set_has_hole();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_name;
        break;
      }

      // required string name = 7;
      case 7: {
        if (tag == 58) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_flipx;
        break;
      }

      // required bool flipx = 8;
      case 8: {
        if (tag == 64) {
         parse_flipx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipx_)));
          set_has_flipx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_flipy;
        break;
      }

      // required bool flipy = 9;
      case 9: {
        if (tag == 72) {
         parse_flipy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipy_)));
          set_has_flipy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_params;
        break;
      }

      // required .additionalparams params = 10;
      case 10: {
        if (tag == 82) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_depthoffset;
        break;
      }

      // required double depthoffset = 11;
      case 11: {
        if (tag == 89) {
         parse_depthoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &depthoffset_)));
          set_has_depthoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_layer;
        break;
      }

      // optional string layer = 12;
      case 12: {
        if (tag == 98) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:doormessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:doormessage)
  return false;
#undef DO_
}

void doormessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:doormessage)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required double objloc = 2;
  if (has_objloc()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->objloc(), output);
  }

  // required double zpos = 3;
  if (has_zpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->zpos(), output);
  }

  // required double height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->height(), output);
  }

  // required double width = 5;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->width(), output);
  }

  // required bool hole = 6;
  if (has_hole()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->hole(), output);
  }

  // required string name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // required bool flipx = 8;
  if (has_flipx()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->flipx(), output);
  }

  // required bool flipy = 9;
  if (has_flipy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->flipy(), output);
  }

  // required .additionalparams params = 10;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->params(), output);
  }

  // required double depthoffset = 11;
  if (has_depthoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->depthoffset(), output);
  }

  // optional string layer = 12;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:doormessage)
}

::google::protobuf::uint8* doormessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:doormessage)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required double objloc = 2;
  if (has_objloc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->objloc(), target);
  }

  // required double zpos = 3;
  if (has_zpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->zpos(), target);
  }

  // required double height = 4;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->height(), target);
  }

  // required double width = 5;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->width(), target);
  }

  // required bool hole = 6;
  if (has_hole()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->hole(), target);
  }

  // required string name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // required bool flipx = 8;
  if (has_flipx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->flipx(), target);
  }

  // required bool flipy = 9;
  if (has_flipy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->flipy(), target);
  }

  // required .additionalparams params = 10;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->params(), target);
  }

  // required double depthoffset = 11;
  if (has_depthoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->depthoffset(), target);
  }

  // optional string layer = 12;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:doormessage)
  return target;
}

int doormessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required double objloc = 2;
    if (has_objloc()) {
      total_size += 1 + 8;
    }

    // required double zpos = 3;
    if (has_zpos()) {
      total_size += 1 + 8;
    }

    // required double height = 4;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required double width = 5;
    if (has_width()) {
      total_size += 1 + 8;
    }

    // required bool hole = 6;
    if (has_hole()) {
      total_size += 1 + 1;
    }

    // required string name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required bool flipx = 8;
    if (has_flipx()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required bool flipy = 9;
    if (has_flipy()) {
      total_size += 1 + 1;
    }

    // required .additionalparams params = 10;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params());
    }

    // required double depthoffset = 11;
    if (has_depthoffset()) {
      total_size += 1 + 8;
    }

    // optional string layer = 12;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void doormessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const doormessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const doormessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void doormessage::MergeFrom(const doormessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_objloc()) {
      set_objloc(from.objloc());
    }
    if (from.has_zpos()) {
      set_zpos(from.zpos());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_hole()) {
      set_hole(from.hole());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_flipx()) {
      set_flipx(from.flipx());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_flipy()) {
      set_flipy(from.flipy());
    }
    if (from.has_params()) {
      mutable_params()->::additionalparams::MergeFrom(from.params());
    }
    if (from.has_depthoffset()) {
      set_depthoffset(from.depthoffset());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void doormessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void doormessage::CopyFrom(const doormessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool doormessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void doormessage::Swap(doormessage* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(objloc_, other->objloc_);
    std::swap(zpos_, other->zpos_);
    std::swap(height_, other->height_);
    std::swap(width_, other->width_);
    std::swap(hole_, other->hole_);
    std::swap(name_, other->name_);
    std::swap(flipx_, other->flipx_);
    std::swap(flipy_, other->flipy_);
    std::swap(params_, other->params_);
    std::swap(depthoffset_, other->depthoffset_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata doormessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = doormessage_descriptor_;
  metadata.reflection = doormessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int windowmessage::kGuidFieldNumber;
const int windowmessage::kObjlocFieldNumber;
const int windowmessage::kZposFieldNumber;
const int windowmessage::kNameFieldNumber;
const int windowmessage::kParamsFieldNumber;
const int windowmessage::kWidthFieldNumber;
const int windowmessage::kHeightFieldNumber;
const int windowmessage::kDepthoffsetFieldNumber;
const int windowmessage::kFlipxFieldNumber;
const int windowmessage::kFlipyFieldNumber;
const int windowmessage::kLayerFieldNumber;
#endif  // !_MSC_VER

windowmessage::windowmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:windowmessage)
}

void windowmessage::InitAsDefaultInstance() {
  params_ = const_cast< ::additionalparams*>(&::additionalparams::default_instance());
}

windowmessage::windowmessage(const windowmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:windowmessage)
}

void windowmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objloc_ = 0;
  zpos_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
  width_ = 0;
  height_ = 0;
  depthoffset_ = 0;
  flipx_ = false;
  flipy_ = false;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

windowmessage::~windowmessage() {
  // @@protoc_insertion_point(destructor:windowmessage)
  SharedDtor();
}

void windowmessage::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
    delete params_;
  }
}

void windowmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* windowmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return windowmessage_descriptor_;
}

const windowmessage& windowmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

windowmessage* windowmessage::default_instance_ = NULL;

windowmessage* windowmessage::New() const {
  return new windowmessage;
}

void windowmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<windowmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objloc_, zpos_);
    ZR_(width_, depthoffset_);
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_params()) {
      if (params_ != NULL) params_->::additionalparams::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    ZR_(flipx_, flipy_);
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool windowmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:windowmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_objloc;
        break;
      }

      // required double objloc = 2;
      case 2: {
        if (tag == 17) {
         parse_objloc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objloc_)));
          set_has_objloc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_zpos;
        break;
      }

      // required double zpos = 3;
      case 3: {
        if (tag == 25) {
         parse_zpos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zpos_)));
          set_has_zpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_params;
        break;
      }

      // optional .additionalparams params = 5;
      case 5: {
        if (tag == 42) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_width;
        break;
      }

      // required double width = 6;
      case 6: {
        if (tag == 49) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_height;
        break;
      }

      // required double height = 7;
      case 7: {
        if (tag == 57) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_depthoffset;
        break;
      }

      // required double depthoffset = 8;
      case 8: {
        if (tag == 65) {
         parse_depthoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &depthoffset_)));
          set_has_depthoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_flipx;
        break;
      }

      // required bool flipx = 9;
      case 9: {
        if (tag == 72) {
         parse_flipx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipx_)));
          set_has_flipx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_flipy;
        break;
      }

      // required bool flipy = 10;
      case 10: {
        if (tag == 80) {
         parse_flipy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipy_)));
          set_has_flipy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_layer;
        break;
      }

      // optional string layer = 11;
      case 11: {
        if (tag == 90) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:windowmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:windowmessage)
  return false;
#undef DO_
}

void windowmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:windowmessage)
  // optional string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required double objloc = 2;
  if (has_objloc()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->objloc(), output);
  }

  // required double zpos = 3;
  if (has_zpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->zpos(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional .additionalparams params = 5;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->params(), output);
  }

  // required double width = 6;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->width(), output);
  }

  // required double height = 7;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->height(), output);
  }

  // required double depthoffset = 8;
  if (has_depthoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->depthoffset(), output);
  }

  // required bool flipx = 9;
  if (has_flipx()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->flipx(), output);
  }

  // required bool flipy = 10;
  if (has_flipy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->flipy(), output);
  }

  // optional string layer = 11;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:windowmessage)
}

::google::protobuf::uint8* windowmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowmessage)
  // optional string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required double objloc = 2;
  if (has_objloc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->objloc(), target);
  }

  // required double zpos = 3;
  if (has_zpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->zpos(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional .additionalparams params = 5;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->params(), target);
  }

  // required double width = 6;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->width(), target);
  }

  // required double height = 7;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->height(), target);
  }

  // required double depthoffset = 8;
  if (has_depthoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->depthoffset(), target);
  }

  // required bool flipx = 9;
  if (has_flipx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->flipx(), target);
  }

  // required bool flipy = 10;
  if (has_flipy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->flipy(), target);
  }

  // optional string layer = 11;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowmessage)
  return target;
}

int windowmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required double objloc = 2;
    if (has_objloc()) {
      total_size += 1 + 8;
    }

    // required double zpos = 3;
    if (has_zpos()) {
      total_size += 1 + 8;
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .additionalparams params = 5;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params());
    }

    // required double width = 6;
    if (has_width()) {
      total_size += 1 + 8;
    }

    // required double height = 7;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required double depthoffset = 8;
    if (has_depthoffset()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required bool flipx = 9;
    if (has_flipx()) {
      total_size += 1 + 1;
    }

    // required bool flipy = 10;
    if (has_flipy()) {
      total_size += 1 + 1;
    }

    // optional string layer = 11;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void windowmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const windowmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const windowmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void windowmessage::MergeFrom(const windowmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_objloc()) {
      set_objloc(from.objloc());
    }
    if (from.has_zpos()) {
      set_zpos(from.zpos());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_params()) {
      mutable_params()->::additionalparams::MergeFrom(from.params());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_depthoffset()) {
      set_depthoffset(from.depthoffset());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_flipx()) {
      set_flipx(from.flipx());
    }
    if (from.has_flipy()) {
      set_flipy(from.flipy());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void windowmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void windowmessage::CopyFrom(const windowmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool windowmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ee) != 0x000003ee) return false;

  return true;
}

void windowmessage::Swap(windowmessage* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(objloc_, other->objloc_);
    std::swap(zpos_, other->zpos_);
    std::swap(name_, other->name_);
    std::swap(params_, other->params_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(depthoffset_, other->depthoffset_);
    std::swap(flipx_, other->flipx_);
    std::swap(flipy_, other->flipy_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata windowmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = windowmessage_descriptor_;
  metadata.reflection = windowmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int circlemessage::kP0XFieldNumber;
const int circlemessage::kP0YFieldNumber;
const int circlemessage::kRadiusFieldNumber;
#endif  // !_MSC_VER

circlemessage::circlemessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:circlemessage)
}

void circlemessage::InitAsDefaultInstance() {
}

circlemessage::circlemessage(const circlemessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:circlemessage)
}

void circlemessage::SharedCtor() {
  _cached_size_ = 0;
  p0x_ = 0;
  p0y_ = 0;
  radius_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

circlemessage::~circlemessage() {
  // @@protoc_insertion_point(destructor:circlemessage)
  SharedDtor();
}

void circlemessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void circlemessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* circlemessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return circlemessage_descriptor_;
}

const circlemessage& circlemessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

circlemessage* circlemessage::default_instance_ = NULL;

circlemessage* circlemessage::New() const {
  return new circlemessage;
}

void circlemessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<circlemessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(p0x_, radius_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool circlemessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:circlemessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double p0x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0x_)));
          set_has_p0x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p0y;
        break;
      }

      // required double p0y = 2;
      case 2: {
        if (tag == 17) {
         parse_p0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0y_)));
          set_has_p0y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_radius;
        break;
      }

      // required double radius = 3;
      case 3: {
        if (tag == 25) {
         parse_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radius_)));
          set_has_radius();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:circlemessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:circlemessage)
  return false;
#undef DO_
}

void circlemessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:circlemessage)
  // required double p0x = 1;
  if (has_p0x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->p0x(), output);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->p0y(), output);
  }

  // required double radius = 3;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->radius(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:circlemessage)
}

::google::protobuf::uint8* circlemessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:circlemessage)
  // required double p0x = 1;
  if (has_p0x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->p0x(), target);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->p0y(), target);
  }

  // required double radius = 3;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->radius(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:circlemessage)
  return target;
}

int circlemessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double p0x = 1;
    if (has_p0x()) {
      total_size += 1 + 8;
    }

    // required double p0y = 2;
    if (has_p0y()) {
      total_size += 1 + 8;
    }

    // required double radius = 3;
    if (has_radius()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void circlemessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const circlemessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const circlemessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void circlemessage::MergeFrom(const circlemessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_p0x()) {
      set_p0x(from.p0x());
    }
    if (from.has_p0y()) {
      set_p0y(from.p0y());
    }
    if (from.has_radius()) {
      set_radius(from.radius());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void circlemessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void circlemessage::CopyFrom(const circlemessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool circlemessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void circlemessage::Swap(circlemessage* other) {
  if (other != this) {
    std::swap(p0x_, other->p0x_);
    std::swap(p0y_, other->p0y_);
    std::swap(radius_, other->radius_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata circlemessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = circlemessage_descriptor_;
  metadata.reflection = circlemessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int arcmessage::kP0XFieldNumber;
const int arcmessage::kP0YFieldNumber;
const int arcmessage::kRadiusFieldNumber;
const int arcmessage::kAngleFieldNumber;
const int arcmessage::kBegangFieldNumber;
const int arcmessage::kEndangFieldNumber;
#endif  // !_MSC_VER

arcmessage::arcmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:arcmessage)
}

void arcmessage::InitAsDefaultInstance() {
}

arcmessage::arcmessage(const arcmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:arcmessage)
}

void arcmessage::SharedCtor() {
  _cached_size_ = 0;
  p0x_ = 0;
  p0y_ = 0;
  radius_ = 0;
  angle_ = 0;
  begang_ = 0;
  endang_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

arcmessage::~arcmessage() {
  // @@protoc_insertion_point(destructor:arcmessage)
  SharedDtor();
}

void arcmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void arcmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* arcmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return arcmessage_descriptor_;
}

const arcmessage& arcmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

arcmessage* arcmessage::default_instance_ = NULL;

arcmessage* arcmessage::New() const {
  return new arcmessage;
}

void arcmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<arcmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(p0x_, endang_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool arcmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:arcmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double p0x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0x_)));
          set_has_p0x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p0y;
        break;
      }

      // required double p0y = 2;
      case 2: {
        if (tag == 17) {
         parse_p0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0y_)));
          set_has_p0y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_radius;
        break;
      }

      // required double radius = 3;
      case 3: {
        if (tag == 25) {
         parse_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radius_)));
          set_has_radius();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_angle;
        break;
      }

      // required double angle = 4;
      case 4: {
        if (tag == 33) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_begang;
        break;
      }

      // required double begang = 5;
      case 5: {
        if (tag == 41) {
         parse_begang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &begang_)));
          set_has_begang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_endang;
        break;
      }

      // required double endang = 6;
      case 6: {
        if (tag == 49) {
         parse_endang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &endang_)));
          set_has_endang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:arcmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:arcmessage)
  return false;
#undef DO_
}

void arcmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:arcmessage)
  // required double p0x = 1;
  if (has_p0x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->p0x(), output);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->p0y(), output);
  }

  // required double radius = 3;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->radius(), output);
  }

  // required double angle = 4;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->angle(), output);
  }

  // required double begang = 5;
  if (has_begang()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->begang(), output);
  }

  // required double endang = 6;
  if (has_endang()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->endang(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:arcmessage)
}

::google::protobuf::uint8* arcmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:arcmessage)
  // required double p0x = 1;
  if (has_p0x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->p0x(), target);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->p0y(), target);
  }

  // required double radius = 3;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->radius(), target);
  }

  // required double angle = 4;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->angle(), target);
  }

  // required double begang = 5;
  if (has_begang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->begang(), target);
  }

  // required double endang = 6;
  if (has_endang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->endang(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arcmessage)
  return target;
}

int arcmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double p0x = 1;
    if (has_p0x()) {
      total_size += 1 + 8;
    }

    // required double p0y = 2;
    if (has_p0y()) {
      total_size += 1 + 8;
    }

    // required double radius = 3;
    if (has_radius()) {
      total_size += 1 + 8;
    }

    // required double angle = 4;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required double begang = 5;
    if (has_begang()) {
      total_size += 1 + 8;
    }

    // required double endang = 6;
    if (has_endang()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void arcmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const arcmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const arcmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void arcmessage::MergeFrom(const arcmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_p0x()) {
      set_p0x(from.p0x());
    }
    if (from.has_p0y()) {
      set_p0y(from.p0y());
    }
    if (from.has_radius()) {
      set_radius(from.radius());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_begang()) {
      set_begang(from.begang());
    }
    if (from.has_endang()) {
      set_endang(from.endang());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void arcmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void arcmessage::CopyFrom(const arcmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool arcmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void arcmessage::Swap(arcmessage* other) {
  if (other != this) {
    std::swap(p0x_, other->p0x_);
    std::swap(p0y_, other->p0y_);
    std::swap(radius_, other->radius_);
    std::swap(angle_, other->angle_);
    std::swap(begang_, other->begang_);
    std::swap(endang_, other->endang_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata arcmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = arcmessage_descriptor_;
  metadata.reflection = arcmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int spheremessage::kC0XFieldNumber;
const int spheremessage::kC0YFieldNumber;
const int spheremessage::kC0ZFieldNumber;
const int spheremessage::kRadiusFieldNumber;
const int spheremessage::kLevelFieldNumber;
#endif  // !_MSC_VER

spheremessage::spheremessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:spheremessage)
}

void spheremessage::InitAsDefaultInstance() {
}

spheremessage::spheremessage(const spheremessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:spheremessage)
}

void spheremessage::SharedCtor() {
  _cached_size_ = 0;
  c0x_ = 0;
  c0y_ = 0;
  c0z_ = 0;
  radius_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

spheremessage::~spheremessage() {
  // @@protoc_insertion_point(destructor:spheremessage)
  SharedDtor();
}

void spheremessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void spheremessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* spheremessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return spheremessage_descriptor_;
}

const spheremessage& spheremessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

spheremessage* spheremessage::default_instance_ = NULL;

spheremessage* spheremessage::New() const {
  return new spheremessage;
}

void spheremessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<spheremessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(c0x_, level_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool spheremessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spheremessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double c0x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &c0x_)));
          set_has_c0x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_c0y;
        break;
      }

      // required double c0y = 2;
      case 2: {
        if (tag == 17) {
         parse_c0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &c0y_)));
          set_has_c0y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_c0z;
        break;
      }

      // required double c0z = 3;
      case 3: {
        if (tag == 25) {
         parse_c0z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &c0z_)));
          set_has_c0z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_radius;
        break;
      }

      // required double radius = 4;
      case 4: {
        if (tag == 33) {
         parse_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radius_)));
          set_has_radius();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // required int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spheremessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spheremessage)
  return false;
#undef DO_
}

void spheremessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spheremessage)
  // required double c0x = 1;
  if (has_c0x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->c0x(), output);
  }

  // required double c0y = 2;
  if (has_c0y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->c0y(), output);
  }

  // required double c0z = 3;
  if (has_c0z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->c0z(), output);
  }

  // required double radius = 4;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->radius(), output);
  }

  // required int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:spheremessage)
}

::google::protobuf::uint8* spheremessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:spheremessage)
  // required double c0x = 1;
  if (has_c0x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->c0x(), target);
  }

  // required double c0y = 2;
  if (has_c0y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->c0y(), target);
  }

  // required double c0z = 3;
  if (has_c0z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->c0z(), target);
  }

  // required double radius = 4;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->radius(), target);
  }

  // required int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:spheremessage)
  return target;
}

int spheremessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double c0x = 1;
    if (has_c0x()) {
      total_size += 1 + 8;
    }

    // required double c0y = 2;
    if (has_c0y()) {
      total_size += 1 + 8;
    }

    // required double c0z = 3;
    if (has_c0z()) {
      total_size += 1 + 8;
    }

    // required double radius = 4;
    if (has_radius()) {
      total_size += 1 + 8;
    }

    // required int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void spheremessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const spheremessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const spheremessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void spheremessage::MergeFrom(const spheremessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_c0x()) {
      set_c0x(from.c0x());
    }
    if (from.has_c0y()) {
      set_c0y(from.c0y());
    }
    if (from.has_c0z()) {
      set_c0z(from.c0z());
    }
    if (from.has_radius()) {
      set_radius(from.radius());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void spheremessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void spheremessage::CopyFrom(const spheremessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool spheremessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void spheremessage::Swap(spheremessage* other) {
  if (other != this) {
    std::swap(c0x_, other->c0x_);
    std::swap(c0y_, other->c0y_);
    std::swap(c0z_, other->c0z_);
    std::swap(radius_, other->radius_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata spheremessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = spheremessage_descriptor_;
  metadata.reflection = spheremessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cylindermsg::kP0XFieldNumber;
const int cylindermsg::kP0YFieldNumber;
const int cylindermsg::kP0ZFieldNumber;
const int cylindermsg::kP1XFieldNumber;
const int cylindermsg::kP1YFieldNumber;
const int cylindermsg::kP1ZFieldNumber;
const int cylindermsg::kRadiusFieldNumber;
const int cylindermsg::kLevelFieldNumber;
#endif  // !_MSC_VER

cylindermsg::cylindermsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cylindermsg)
}

void cylindermsg::InitAsDefaultInstance() {
}

cylindermsg::cylindermsg(const cylindermsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cylindermsg)
}

void cylindermsg::SharedCtor() {
  _cached_size_ = 0;
  p0x_ = 0;
  p0y_ = 0;
  p0z_ = 0;
  p1x_ = 0;
  p1y_ = 0;
  p1z_ = 0;
  radius_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cylindermsg::~cylindermsg() {
  // @@protoc_insertion_point(destructor:cylindermsg)
  SharedDtor();
}

void cylindermsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cylindermsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cylindermsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cylindermsg_descriptor_;
}

const cylindermsg& cylindermsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

cylindermsg* cylindermsg::default_instance_ = NULL;

cylindermsg* cylindermsg::New() const {
  return new cylindermsg;
}

void cylindermsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<cylindermsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(p0x_, level_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cylindermsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cylindermsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double p0x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0x_)));
          set_has_p0x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p0y;
        break;
      }

      // required double p0y = 2;
      case 2: {
        if (tag == 17) {
         parse_p0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0y_)));
          set_has_p0y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_p0z;
        break;
      }

      // required double p0z = 3;
      case 3: {
        if (tag == 25) {
         parse_p0z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p0z_)));
          set_has_p0z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_p1x;
        break;
      }

      // required double p1x = 4;
      case 4: {
        if (tag == 33) {
         parse_p1x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1x_)));
          set_has_p1x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_p1y;
        break;
      }

      // required double p1y = 5;
      case 5: {
        if (tag == 41) {
         parse_p1y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1y_)));
          set_has_p1y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_p1z;
        break;
      }

      // required double p1z = 6;
      case 6: {
        if (tag == 49) {
         parse_p1z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1z_)));
          set_has_p1z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_radius;
        break;
      }

      // required double radius = 7;
      case 7: {
        if (tag == 57) {
         parse_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radius_)));
          set_has_radius();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_level;
        break;
      }

      // required int32 level = 8;
      case 8: {
        if (tag == 64) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cylindermsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cylindermsg)
  return false;
#undef DO_
}

void cylindermsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cylindermsg)
  // required double p0x = 1;
  if (has_p0x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->p0x(), output);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->p0y(), output);
  }

  // required double p0z = 3;
  if (has_p0z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->p0z(), output);
  }

  // required double p1x = 4;
  if (has_p1x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->p1x(), output);
  }

  // required double p1y = 5;
  if (has_p1y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->p1y(), output);
  }

  // required double p1z = 6;
  if (has_p1z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->p1z(), output);
  }

  // required double radius = 7;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->radius(), output);
  }

  // required int32 level = 8;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cylindermsg)
}

::google::protobuf::uint8* cylindermsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cylindermsg)
  // required double p0x = 1;
  if (has_p0x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->p0x(), target);
  }

  // required double p0y = 2;
  if (has_p0y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->p0y(), target);
  }

  // required double p0z = 3;
  if (has_p0z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->p0z(), target);
  }

  // required double p1x = 4;
  if (has_p1x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->p1x(), target);
  }

  // required double p1y = 5;
  if (has_p1y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->p1y(), target);
  }

  // required double p1z = 6;
  if (has_p1z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->p1z(), target);
  }

  // required double radius = 7;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->radius(), target);
  }

  // required int32 level = 8;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cylindermsg)
  return target;
}

int cylindermsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double p0x = 1;
    if (has_p0x()) {
      total_size += 1 + 8;
    }

    // required double p0y = 2;
    if (has_p0y()) {
      total_size += 1 + 8;
    }

    // required double p0z = 3;
    if (has_p0z()) {
      total_size += 1 + 8;
    }

    // required double p1x = 4;
    if (has_p1x()) {
      total_size += 1 + 8;
    }

    // required double p1y = 5;
    if (has_p1y()) {
      total_size += 1 + 8;
    }

    // required double p1z = 6;
    if (has_p1z()) {
      total_size += 1 + 8;
    }

    // required double radius = 7;
    if (has_radius()) {
      total_size += 1 + 8;
    }

    // required int32 level = 8;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cylindermsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cylindermsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cylindermsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cylindermsg::MergeFrom(const cylindermsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_p0x()) {
      set_p0x(from.p0x());
    }
    if (from.has_p0y()) {
      set_p0y(from.p0y());
    }
    if (from.has_p0z()) {
      set_p0z(from.p0z());
    }
    if (from.has_p1x()) {
      set_p1x(from.p1x());
    }
    if (from.has_p1y()) {
      set_p1y(from.p1y());
    }
    if (from.has_p1z()) {
      set_p1z(from.p1z());
    }
    if (from.has_radius()) {
      set_radius(from.radius());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cylindermsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cylindermsg::CopyFrom(const cylindermsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cylindermsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void cylindermsg::Swap(cylindermsg* other) {
  if (other != this) {
    std::swap(p0x_, other->p0x_);
    std::swap(p0y_, other->p0y_);
    std::swap(p0z_, other->p0z_);
    std::swap(p1x_, other->p1x_);
    std::swap(p1y_, other->p1y_);
    std::swap(p1z_, other->p1z_);
    std::swap(radius_, other->radius_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cylindermsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cylindermsg_descriptor_;
  metadata.reflection = cylindermsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int shellcomplexmessage::kNumpointsFieldNumber;
const int shellcomplexmessage::kNumarcsFieldNumber;
const int shellcomplexmessage::kNumholesFieldNumber;
const int shellcomplexmessage::kNumhpointsFieldNumber;
const int shellcomplexmessage::kNumharcsFieldNumber;
const int shellcomplexmessage::kHoleheightFieldNumber;
const int shellcomplexmessage::kReflectxFieldNumber;
const int shellcomplexmessage::kReflectyFieldNumber;
#endif  // !_MSC_VER

shellcomplexmessage::shellcomplexmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:shellcomplexmessage)
}

void shellcomplexmessage::InitAsDefaultInstance() {
}

shellcomplexmessage::shellcomplexmessage(const shellcomplexmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:shellcomplexmessage)
}

void shellcomplexmessage::SharedCtor() {
  _cached_size_ = 0;
  numpoints_ = 0;
  numarcs_ = 0;
  numholes_ = 0;
  numhpoints_ = 0;
  numharcs_ = 0;
  holeheight_ = 0;
  reflectx_ = 0;
  reflecty_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

shellcomplexmessage::~shellcomplexmessage() {
  // @@protoc_insertion_point(destructor:shellcomplexmessage)
  SharedDtor();
}

void shellcomplexmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void shellcomplexmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* shellcomplexmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return shellcomplexmessage_descriptor_;
}

const shellcomplexmessage& shellcomplexmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

shellcomplexmessage* shellcomplexmessage::default_instance_ = NULL;

shellcomplexmessage* shellcomplexmessage::New() const {
  return new shellcomplexmessage;
}

void shellcomplexmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<shellcomplexmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(numpoints_, numharcs_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool shellcomplexmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shellcomplexmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 numpoints = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numpoints_)));
          set_has_numpoints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_numarcs;
        break;
      }

      // required int32 numarcs = 2;
      case 2: {
        if (tag == 16) {
         parse_numarcs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numarcs_)));
          set_has_numarcs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_numholes;
        break;
      }

      // required int32 numholes = 3;
      case 3: {
        if (tag == 24) {
         parse_numholes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numholes_)));
          set_has_numholes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_numhpoints;
        break;
      }

      // required int32 numhpoints = 4;
      case 4: {
        if (tag == 32) {
         parse_numhpoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numhpoints_)));
          set_has_numhpoints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_numharcs;
        break;
      }

      // required int32 numharcs = 5;
      case 5: {
        if (tag == 40) {
         parse_numharcs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numharcs_)));
          set_has_numharcs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_holeheight;
        break;
      }

      // required double holeheight = 6;
      case 6: {
        if (tag == 49) {
         parse_holeheight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &holeheight_)));
          set_has_holeheight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_reflectx;
        break;
      }

      // required double reflectx = 7;
      case 7: {
        if (tag == 57) {
         parse_reflectx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reflectx_)));
          set_has_reflectx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_reflecty;
        break;
      }

      // required double reflecty = 8;
      case 8: {
        if (tag == 65) {
         parse_reflecty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reflecty_)));
          set_has_reflecty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shellcomplexmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shellcomplexmessage)
  return false;
#undef DO_
}

void shellcomplexmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shellcomplexmessage)
  // required int32 numpoints = 1;
  if (has_numpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numpoints(), output);
  }

  // required int32 numarcs = 2;
  if (has_numarcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numarcs(), output);
  }

  // required int32 numholes = 3;
  if (has_numholes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numholes(), output);
  }

  // required int32 numhpoints = 4;
  if (has_numhpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->numhpoints(), output);
  }

  // required int32 numharcs = 5;
  if (has_numharcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->numharcs(), output);
  }

  // required double holeheight = 6;
  if (has_holeheight()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->holeheight(), output);
  }

  // required double reflectx = 7;
  if (has_reflectx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->reflectx(), output);
  }

  // required double reflecty = 8;
  if (has_reflecty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->reflecty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shellcomplexmessage)
}

::google::protobuf::uint8* shellcomplexmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:shellcomplexmessage)
  // required int32 numpoints = 1;
  if (has_numpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numpoints(), target);
  }

  // required int32 numarcs = 2;
  if (has_numarcs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numarcs(), target);
  }

  // required int32 numholes = 3;
  if (has_numholes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numholes(), target);
  }

  // required int32 numhpoints = 4;
  if (has_numhpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->numhpoints(), target);
  }

  // required int32 numharcs = 5;
  if (has_numharcs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->numharcs(), target);
  }

  // required double holeheight = 6;
  if (has_holeheight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->holeheight(), target);
  }

  // required double reflectx = 7;
  if (has_reflectx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->reflectx(), target);
  }

  // required double reflecty = 8;
  if (has_reflecty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->reflecty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shellcomplexmessage)
  return target;
}

int shellcomplexmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 numpoints = 1;
    if (has_numpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numpoints());
    }

    // required int32 numarcs = 2;
    if (has_numarcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numarcs());
    }

    // required int32 numholes = 3;
    if (has_numholes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numholes());
    }

    // required int32 numhpoints = 4;
    if (has_numhpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numhpoints());
    }

    // required int32 numharcs = 5;
    if (has_numharcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numharcs());
    }

    // required double holeheight = 6;
    if (has_holeheight()) {
      total_size += 1 + 8;
    }

    // required double reflectx = 7;
    if (has_reflectx()) {
      total_size += 1 + 8;
    }

    // required double reflecty = 8;
    if (has_reflecty()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void shellcomplexmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const shellcomplexmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const shellcomplexmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void shellcomplexmessage::MergeFrom(const shellcomplexmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numpoints()) {
      set_numpoints(from.numpoints());
    }
    if (from.has_numarcs()) {
      set_numarcs(from.numarcs());
    }
    if (from.has_numholes()) {
      set_numholes(from.numholes());
    }
    if (from.has_numhpoints()) {
      set_numhpoints(from.numhpoints());
    }
    if (from.has_numharcs()) {
      set_numharcs(from.numharcs());
    }
    if (from.has_holeheight()) {
      set_holeheight(from.holeheight());
    }
    if (from.has_reflectx()) {
      set_reflectx(from.reflectx());
    }
    if (from.has_reflecty()) {
      set_reflecty(from.reflecty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void shellcomplexmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void shellcomplexmessage::CopyFrom(const shellcomplexmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool shellcomplexmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void shellcomplexmessage::Swap(shellcomplexmessage* other) {
  if (other != this) {
    std::swap(numpoints_, other->numpoints_);
    std::swap(numarcs_, other->numarcs_);
    std::swap(numholes_, other->numholes_);
    std::swap(numhpoints_, other->numhpoints_);
    std::swap(numharcs_, other->numharcs_);
    std::swap(holeheight_, other->holeheight_);
    std::swap(reflectx_, other->reflectx_);
    std::swap(reflecty_, other->reflecty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata shellcomplexmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = shellcomplexmessage_descriptor_;
  metadata.reflection = shellcomplexmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int shellsimplemessage::kNumpointsFieldNumber;
#endif  // !_MSC_VER

shellsimplemessage::shellsimplemessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:shellsimplemessage)
}

void shellsimplemessage::InitAsDefaultInstance() {
}

shellsimplemessage::shellsimplemessage(const shellsimplemessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:shellsimplemessage)
}

void shellsimplemessage::SharedCtor() {
  _cached_size_ = 0;
  numpoints_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

shellsimplemessage::~shellsimplemessage() {
  // @@protoc_insertion_point(destructor:shellsimplemessage)
  SharedDtor();
}

void shellsimplemessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void shellsimplemessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* shellsimplemessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return shellsimplemessage_descriptor_;
}

const shellsimplemessage& shellsimplemessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

shellsimplemessage* shellsimplemessage::default_instance_ = NULL;

shellsimplemessage* shellsimplemessage::New() const {
  return new shellsimplemessage;
}

void shellsimplemessage::Clear() {
  numpoints_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool shellsimplemessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shellsimplemessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 numpoints = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numpoints_)));
          set_has_numpoints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shellsimplemessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shellsimplemessage)
  return false;
#undef DO_
}

void shellsimplemessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shellsimplemessage)
  // required int32 numpoints = 1;
  if (has_numpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numpoints(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shellsimplemessage)
}

::google::protobuf::uint8* shellsimplemessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:shellsimplemessage)
  // required int32 numpoints = 1;
  if (has_numpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numpoints(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shellsimplemessage)
  return target;
}

int shellsimplemessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 numpoints = 1;
    if (has_numpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numpoints());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void shellsimplemessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const shellsimplemessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const shellsimplemessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void shellsimplemessage::MergeFrom(const shellsimplemessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numpoints()) {
      set_numpoints(from.numpoints());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void shellsimplemessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void shellsimplemessage::CopyFrom(const shellsimplemessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool shellsimplemessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void shellsimplemessage::Swap(shellsimplemessage* other) {
  if (other != this) {
    std::swap(numpoints_, other->numpoints_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata shellsimplemessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = shellsimplemessage_descriptor_;
  metadata.reflection = shellsimplemessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int shellmessage::kNumpointsFieldNumber;
const int shellmessage::kNumarcsFieldNumber;
#endif  // !_MSC_VER

shellmessage::shellmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:shellmessage)
}

void shellmessage::InitAsDefaultInstance() {
}

shellmessage::shellmessage(const shellmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:shellmessage)
}

void shellmessage::SharedCtor() {
  _cached_size_ = 0;
  numpoints_ = 0;
  numarcs_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

shellmessage::~shellmessage() {
  // @@protoc_insertion_point(destructor:shellmessage)
  SharedDtor();
}

void shellmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void shellmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* shellmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return shellmessage_descriptor_;
}

const shellmessage& shellmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

shellmessage* shellmessage::default_instance_ = NULL;

shellmessage* shellmessage::New() const {
  return new shellmessage;
}

void shellmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<shellmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(numpoints_, numarcs_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool shellmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shellmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 numpoints = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numpoints_)));
          set_has_numpoints();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_numarcs;
        break;
      }

      // required int32 numarcs = 2;
      case 2: {
        if (tag == 16) {
         parse_numarcs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numarcs_)));
          set_has_numarcs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shellmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shellmessage)
  return false;
#undef DO_
}

void shellmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shellmessage)
  // required int32 numpoints = 1;
  if (has_numpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numpoints(), output);
  }

  // required int32 numarcs = 2;
  if (has_numarcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numarcs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shellmessage)
}

::google::protobuf::uint8* shellmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:shellmessage)
  // required int32 numpoints = 1;
  if (has_numpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numpoints(), target);
  }

  // required int32 numarcs = 2;
  if (has_numarcs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numarcs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shellmessage)
  return target;
}

int shellmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 numpoints = 1;
    if (has_numpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numpoints());
    }

    // required int32 numarcs = 2;
    if (has_numarcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numarcs());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void shellmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const shellmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const shellmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void shellmessage::MergeFrom(const shellmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numpoints()) {
      set_numpoints(from.numpoints());
    }
    if (from.has_numarcs()) {
      set_numarcs(from.numarcs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void shellmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void shellmessage::CopyFrom(const shellmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool shellmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void shellmessage::Swap(shellmessage* other) {
  if (other != this) {
    std::swap(numpoints_, other->numpoints_);
    std::swap(numarcs_, other->numarcs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata shellmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = shellmessage_descriptor_;
  metadata.reflection = shellmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pointsmessage::kPxFieldNumber;
const int pointsmessage::kPyFieldNumber;
const int pointsmessage::kPzFieldNumber;
#endif  // !_MSC_VER

pointsmessage::pointsmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pointsmessage)
}

void pointsmessage::InitAsDefaultInstance() {
}

pointsmessage::pointsmessage(const pointsmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pointsmessage)
}

void pointsmessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pointsmessage::~pointsmessage() {
  // @@protoc_insertion_point(destructor:pointsmessage)
  SharedDtor();
}

void pointsmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void pointsmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pointsmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pointsmessage_descriptor_;
}

const pointsmessage& pointsmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

pointsmessage* pointsmessage::default_instance_ = NULL;

pointsmessage* pointsmessage::New() const {
  return new pointsmessage;
}

void pointsmessage::Clear() {
  px_.Clear();
  py_.Clear();
  pz_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pointsmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pointsmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double px = 1;
      case 1: {
        if (tag == 9) {
         parse_px:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_px())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_px())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_px;
        if (input->ExpectTag(17)) goto parse_py;
        break;
      }

      // repeated double py = 2;
      case 2: {
        if (tag == 17) {
         parse_py:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_py())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_py())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_py;
        if (input->ExpectTag(25)) goto parse_pz;
        break;
      }

      // repeated double pz = 3;
      case 3: {
        if (tag == 25) {
         parse_pz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_pz())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_pz())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_pz;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pointsmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pointsmessage)
  return false;
#undef DO_
}

void pointsmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pointsmessage)
  // repeated double px = 1;
  for (int i = 0; i < this->px_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->px(i), output);
  }

  // repeated double py = 2;
  for (int i = 0; i < this->py_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->py(i), output);
  }

  // repeated double pz = 3;
  for (int i = 0; i < this->pz_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->pz(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pointsmessage)
}

::google::protobuf::uint8* pointsmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pointsmessage)
  // repeated double px = 1;
  for (int i = 0; i < this->px_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->px(i), target);
  }

  // repeated double py = 2;
  for (int i = 0; i < this->py_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->py(i), target);
  }

  // repeated double pz = 3;
  for (int i = 0; i < this->pz_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->pz(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pointsmessage)
  return target;
}

int pointsmessage::ByteSize() const {
  int total_size = 0;

  // repeated double px = 1;
  {
    int data_size = 0;
    data_size = 8 * this->px_size();
    total_size += 1 * this->px_size() + data_size;
  }

  // repeated double py = 2;
  {
    int data_size = 0;
    data_size = 8 * this->py_size();
    total_size += 1 * this->py_size() + data_size;
  }

  // repeated double pz = 3;
  {
    int data_size = 0;
    data_size = 8 * this->pz_size();
    total_size += 1 * this->pz_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pointsmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pointsmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pointsmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pointsmessage::MergeFrom(const pointsmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  px_.MergeFrom(from.px_);
  py_.MergeFrom(from.py_);
  pz_.MergeFrom(from.pz_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pointsmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pointsmessage::CopyFrom(const pointsmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pointsmessage::IsInitialized() const {

  return true;
}

void pointsmessage::Swap(pointsmessage* other) {
  if (other != this) {
    px_.Swap(&other->px_);
    py_.Swap(&other->py_);
    pz_.Swap(&other->pz_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pointsmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pointsmessage_descriptor_;
  metadata.reflection = pointsmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int polyarcsmessage::kBegindexFieldNumber;
const int polyarcsmessage::kEndindexFieldNumber;
const int polyarcsmessage::kArcangleFieldNumber;
#endif  // !_MSC_VER

polyarcsmessage::polyarcsmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polyarcsmessage)
}

void polyarcsmessage::InitAsDefaultInstance() {
}

polyarcsmessage::polyarcsmessage(const polyarcsmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polyarcsmessage)
}

void polyarcsmessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

polyarcsmessage::~polyarcsmessage() {
  // @@protoc_insertion_point(destructor:polyarcsmessage)
  SharedDtor();
}

void polyarcsmessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void polyarcsmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* polyarcsmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return polyarcsmessage_descriptor_;
}

const polyarcsmessage& polyarcsmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

polyarcsmessage* polyarcsmessage::default_instance_ = NULL;

polyarcsmessage* polyarcsmessage::New() const {
  return new polyarcsmessage;
}

void polyarcsmessage::Clear() {
  begindex_.Clear();
  endindex_.Clear();
  arcangle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool polyarcsmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polyarcsmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 begindex = 1;
      case 1: {
        if (tag == 8) {
         parse_begindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_begindex())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_begindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_begindex;
        if (input->ExpectTag(16)) goto parse_endindex;
        break;
      }

      // repeated int32 endindex = 2;
      case 2: {
        if (tag == 16) {
         parse_endindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_endindex())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_endindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_endindex;
        if (input->ExpectTag(25)) goto parse_arcangle;
        break;
      }

      // repeated double arcangle = 3;
      case 3: {
        if (tag == 25) {
         parse_arcangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_arcangle())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_arcangle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_arcangle;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polyarcsmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polyarcsmessage)
  return false;
#undef DO_
}

void polyarcsmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polyarcsmessage)
  // repeated int32 begindex = 1;
  for (int i = 0; i < this->begindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->begindex(i), output);
  }

  // repeated int32 endindex = 2;
  for (int i = 0; i < this->endindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->endindex(i), output);
  }

  // repeated double arcangle = 3;
  for (int i = 0; i < this->arcangle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->arcangle(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polyarcsmessage)
}

::google::protobuf::uint8* polyarcsmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polyarcsmessage)
  // repeated int32 begindex = 1;
  for (int i = 0; i < this->begindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->begindex(i), target);
  }

  // repeated int32 endindex = 2;
  for (int i = 0; i < this->endindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->endindex(i), target);
  }

  // repeated double arcangle = 3;
  for (int i = 0; i < this->arcangle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->arcangle(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polyarcsmessage)
  return target;
}

int polyarcsmessage::ByteSize() const {
  int total_size = 0;

  // repeated int32 begindex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->begindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->begindex(i));
    }
    total_size += 1 * this->begindex_size() + data_size;
  }

  // repeated int32 endindex = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->endindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->endindex(i));
    }
    total_size += 1 * this->endindex_size() + data_size;
  }

  // repeated double arcangle = 3;
  {
    int data_size = 0;
    data_size = 8 * this->arcangle_size();
    total_size += 1 * this->arcangle_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void polyarcsmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const polyarcsmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const polyarcsmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void polyarcsmessage::MergeFrom(const polyarcsmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  begindex_.MergeFrom(from.begindex_);
  endindex_.MergeFrom(from.endindex_);
  arcangle_.MergeFrom(from.arcangle_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void polyarcsmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void polyarcsmessage::CopyFrom(const polyarcsmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool polyarcsmessage::IsInitialized() const {

  return true;
}

void polyarcsmessage::Swap(polyarcsmessage* other) {
  if (other != this) {
    begindex_.Swap(&other->begindex_);
    endindex_.Swap(&other->endindex_);
    arcangle_.Swap(&other->arcangle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata polyarcsmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = polyarcsmessage_descriptor_;
  metadata.reflection = polyarcsmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rotshellmessage::kAxisFieldNumber;
const int rotshellmessage::kAngleFieldNumber;
const int rotshellmessage::kGuidFieldNumber;
#endif  // !_MSC_VER

rotshellmessage::rotshellmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rotshellmessage)
}

void rotshellmessage::InitAsDefaultInstance() {
}

rotshellmessage::rotshellmessage(const rotshellmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rotshellmessage)
}

void rotshellmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  axis_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  angle_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rotshellmessage::~rotshellmessage() {
  // @@protoc_insertion_point(destructor:rotshellmessage)
  SharedDtor();
}

void rotshellmessage::SharedDtor() {
  if (axis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete axis_;
  }
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void rotshellmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rotshellmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rotshellmessage_descriptor_;
}

const rotshellmessage& rotshellmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

rotshellmessage* rotshellmessage::default_instance_ = NULL;

rotshellmessage* rotshellmessage::New() const {
  return new rotshellmessage;
}

void rotshellmessage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_axis()) {
      if (axis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        axis_->clear();
      }
    }
    angle_ = 0;
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rotshellmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rotshellmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string axis = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_axis()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->axis().data(), this->axis().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "axis");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_angle;
        break;
      }

      // required double angle = 2;
      case 2: {
        if (tag == 17) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_guid;
        break;
      }

      // required string guid = 3;
      case 3: {
        if (tag == 26) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rotshellmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rotshellmessage)
  return false;
#undef DO_
}

void rotshellmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rotshellmessage)
  // required string axis = 1;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->axis().data(), this->axis().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "axis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->axis(), output);
  }

  // required double angle = 2;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->angle(), output);
  }

  // required string guid = 3;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rotshellmessage)
}

::google::protobuf::uint8* rotshellmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rotshellmessage)
  // required string axis = 1;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->axis().data(), this->axis().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "axis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->axis(), target);
  }

  // required double angle = 2;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->angle(), target);
  }

  // required string guid = 3;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rotshellmessage)
  return target;
}

int rotshellmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string axis = 1;
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->axis());
    }

    // required double angle = 2;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required string guid = 3;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rotshellmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rotshellmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rotshellmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rotshellmessage::MergeFrom(const rotshellmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_axis()) {
      set_axis(from.axis());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rotshellmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rotshellmessage::CopyFrom(const rotshellmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rotshellmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void rotshellmessage::Swap(rotshellmessage* other) {
  if (other != this) {
    std::swap(axis_, other->axis_);
    std::swap(angle_, other->angle_);
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rotshellmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rotshellmessage_descriptor_;
  metadata.reflection = rotshellmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int tshellmessage::kTxFieldNumber;
const int tshellmessage::kTyFieldNumber;
const int tshellmessage::kTzFieldNumber;
const int tshellmessage::kGuidFieldNumber;
#endif  // !_MSC_VER

tshellmessage::tshellmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tshellmessage)
}

void tshellmessage::InitAsDefaultInstance() {
}

tshellmessage::tshellmessage(const tshellmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tshellmessage)
}

void tshellmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tx_ = 0;
  ty_ = 0;
  tz_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

tshellmessage::~tshellmessage() {
  // @@protoc_insertion_point(destructor:tshellmessage)
  SharedDtor();
}

void tshellmessage::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void tshellmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tshellmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return tshellmessage_descriptor_;
}

const tshellmessage& tshellmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

tshellmessage* tshellmessage::default_instance_ = NULL;

tshellmessage* tshellmessage::New() const {
  return new tshellmessage;
}

void tshellmessage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<tshellmessage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(tx_, tz_);
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool tshellmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tshellmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double tx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tx_)));
          set_has_tx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_ty;
        break;
      }

      // required double ty = 2;
      case 2: {
        if (tag == 17) {
         parse_ty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ty_)));
          set_has_ty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_tz;
        break;
      }

      // required double tz = 3;
      case 3: {
        if (tag == 25) {
         parse_tz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tz_)));
          set_has_tz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_guid;
        break;
      }

      // required string guid = 4;
      case 4: {
        if (tag == 34) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tshellmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tshellmessage)
  return false;
#undef DO_
}

void tshellmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tshellmessage)
  // required double tx = 1;
  if (has_tx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->tx(), output);
  }

  // required double ty = 2;
  if (has_ty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ty(), output);
  }

  // required double tz = 3;
  if (has_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->tz(), output);
  }

  // required string guid = 4;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tshellmessage)
}

::google::protobuf::uint8* tshellmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tshellmessage)
  // required double tx = 1;
  if (has_tx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->tx(), target);
  }

  // required double ty = 2;
  if (has_ty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ty(), target);
  }

  // required double tz = 3;
  if (has_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->tz(), target);
  }

  // required string guid = 4;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tshellmessage)
  return target;
}

int tshellmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double tx = 1;
    if (has_tx()) {
      total_size += 1 + 8;
    }

    // required double ty = 2;
    if (has_ty()) {
      total_size += 1 + 8;
    }

    // required double tz = 3;
    if (has_tz()) {
      total_size += 1 + 8;
    }

    // required string guid = 4;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tshellmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const tshellmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const tshellmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void tshellmessage::MergeFrom(const tshellmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tx()) {
      set_tx(from.tx());
    }
    if (from.has_ty()) {
      set_ty(from.ty());
    }
    if (from.has_tz()) {
      set_tz(from.tz());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void tshellmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tshellmessage::CopyFrom(const tshellmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tshellmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void tshellmessage::Swap(tshellmessage* other) {
  if (other != this) {
    std::swap(tx_, other->tx_);
    std::swap(ty_, other->ty_);
    std::swap(tz_, other->tz_);
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata tshellmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = tshellmessage_descriptor_;
  metadata.reflection = tshellmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int oldholemessage::kHeightFieldNumber;
const int oldholemessage::kGuidFieldNumber;
#endif  // !_MSC_VER

oldholemessage::oldholemessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:oldholemessage)
}

void oldholemessage::InitAsDefaultInstance() {
}

oldholemessage::oldholemessage(const oldholemessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oldholemessage)
}

void oldholemessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  height_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

oldholemessage::~oldholemessage() {
  // @@protoc_insertion_point(destructor:oldholemessage)
  SharedDtor();
}

void oldholemessage::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void oldholemessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* oldholemessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return oldholemessage_descriptor_;
}

const oldholemessage& oldholemessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

oldholemessage* oldholemessage::default_instance_ = NULL;

oldholemessage* oldholemessage::New() const {
  return new oldholemessage;
}

void oldholemessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    height_ = 0;
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool oldholemessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oldholemessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double height = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guid;
        break;
      }

      // required string guid = 2;
      case 2: {
        if (tag == 18) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oldholemessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oldholemessage)
  return false;
#undef DO_
}

void oldholemessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oldholemessage)
  // required double height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->height(), output);
  }

  // required string guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:oldholemessage)
}

::google::protobuf::uint8* oldholemessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oldholemessage)
  // required double height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->height(), target);
  }

  // required string guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oldholemessage)
  return target;
}

int oldholemessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double height = 1;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required string guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void oldholemessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const oldholemessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const oldholemessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void oldholemessage::MergeFrom(const oldholemessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void oldholemessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oldholemessage::CopyFrom(const oldholemessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oldholemessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void oldholemessage::Swap(oldholemessage* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata oldholemessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = oldholemessage_descriptor_;
  metadata.reflection = oldholemessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int curtainwallmsg::kPtsFieldNumber;
const int curtainwallmsg::kArcsFieldNumber;
const int curtainwallmsg::kBottomindexFieldNumber;
const int curtainwallmsg::kUpperindexFieldNumber;
const int curtainwallmsg::kPrimariesFieldNumber;
const int curtainwallmsg::kSecondariesFieldNumber;
const int curtainwallmsg::kMainpanelsFieldNumber;
const int curtainwallmsg::kPanelmaterialFieldNumber;
const int curtainwallmsg::kSecpanelmaterialFieldNumber;
const int curtainwallmsg::kVerticalframematerialFieldNumber;
const int curtainwallmsg::kHorizontalframematerialFieldNumber;
const int curtainwallmsg::kFramematerialFieldNumber;
const int curtainwallmsg::kPanelsangleFieldNumber;
const int curtainwallmsg::kOffsetFieldNumber;
const int curtainwallmsg::kLayerFieldNumber;
const int curtainwallmsg::kHeightFieldNumber;
const int curtainwallmsg::kToplinkedFieldNumber;
const int curtainwallmsg::kMainpanelthicknessFieldNumber;
const int curtainwallmsg::kSecondarypanelthicknessFieldNumber;
const int curtainwallmsg::kBframewidthFieldNumber;
const int curtainwallmsg::kBframedepthFieldNumber;
const int curtainwallmsg::kBframeoffsetFieldNumber;
const int curtainwallmsg::kMframewidthFieldNumber;
const int curtainwallmsg::kMframedepthFieldNumber;
const int curtainwallmsg::kMframeoffsetFieldNumber;
const int curtainwallmsg::kTframewidthFieldNumber;
const int curtainwallmsg::kTframedepthFieldNumber;
const int curtainwallmsg::kTframeoffsetFieldNumber;
#endif  // !_MSC_VER

curtainwallmsg::curtainwallmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:curtainwallmsg)
}

void curtainwallmsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

curtainwallmsg::curtainwallmsg(const curtainwallmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:curtainwallmsg)
}

void curtainwallmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pts_ = NULL;
  arcs_ = NULL;
  bottomindex_ = 0;
  upperindex_ = 0;
  panelmaterial_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secpanelmaterial_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verticalframematerial_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  horizontalframematerial_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  framematerial_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  panelsangle_ = 0;
  offset_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = 0;
  toplinked_ = false;
  mainpanelthickness_ = 0;
  secondarypanelthickness_ = 0;
  bframewidth_ = 0;
  bframedepth_ = 0;
  bframeoffset_ = 0;
  mframewidth_ = 0;
  mframedepth_ = 0;
  mframeoffset_ = 0;
  tframewidth_ = 0;
  tframedepth_ = 0;
  tframeoffset_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

curtainwallmsg::~curtainwallmsg() {
  // @@protoc_insertion_point(destructor:curtainwallmsg)
  SharedDtor();
}

void curtainwallmsg::SharedDtor() {
  if (panelmaterial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete panelmaterial_;
  }
  if (secpanelmaterial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secpanelmaterial_;
  }
  if (verticalframematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verticalframematerial_;
  }
  if (horizontalframematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete horizontalframematerial_;
  }
  if (framematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete framematerial_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete arcs_;
  }
}

void curtainwallmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* curtainwallmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return curtainwallmsg_descriptor_;
}

const curtainwallmsg& curtainwallmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

curtainwallmsg* curtainwallmsg::default_instance_ = NULL;

curtainwallmsg* curtainwallmsg::New() const {
  return new curtainwallmsg;
}

void curtainwallmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<curtainwallmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 143) {
    ZR_(bottomindex_, upperindex_);
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
    if (has_panelmaterial()) {
      if (panelmaterial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        panelmaterial_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(panelsangle_, offset_);
    if (has_secpanelmaterial()) {
      if (secpanelmaterial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        secpanelmaterial_->clear();
      }
    }
    if (has_verticalframematerial()) {
      if (verticalframematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        verticalframematerial_->clear();
      }
    }
    if (has_horizontalframematerial()) {
      if (horizontalframematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        horizontalframematerial_->clear();
      }
    }
    if (has_framematerial()) {
      if (framematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        framematerial_->clear();
      }
    }
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
    height_ = 0;
  }
  if (_has_bits_[16 / 32] & 16711680) {
    ZR_(mainpanelthickness_, mframedepth_);
    toplinked_ = false;
  }
  ZR_(mframeoffset_, tframeoffset_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  primaries_.Clear();
  secondaries_.Clear();
  mainpanels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool curtainwallmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:curtainwallmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pointsmessage pts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arcs;
        break;
      }

      // required .polyarcsmessage arcs = 2;
      case 2: {
        if (tag == 18) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bottomindex;
        break;
      }

      // required int32 bottomindex = 3;
      case 3: {
        if (tag == 24) {
         parse_bottomindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomindex_)));
          set_has_bottomindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_upperindex;
        break;
      }

      // required int32 upperindex = 4;
      case 4: {
        if (tag == 32) {
         parse_upperindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upperindex_)));
          set_has_upperindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_primaries;
        break;
      }

      // repeated double primaries = 5;
      case 5: {
        if (tag == 41) {
         parse_primaries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_primaries())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_primaries())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_primaries;
        if (input->ExpectTag(49)) goto parse_secondaries;
        break;
      }

      // repeated double secondaries = 6;
      case 6: {
        if (tag == 49) {
         parse_secondaries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_secondaries())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_secondaries())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_secondaries;
        if (input->ExpectTag(56)) goto parse_mainpanels;
        break;
      }

      // repeated bool mainpanels = 7;
      case 7: {
        if (tag == 56) {
         parse_mainpanels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 56, input, this->mutable_mainpanels())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_mainpanels())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mainpanels;
        if (input->ExpectTag(66)) goto parse_panelmaterial;
        break;
      }

      // required string panelmaterial = 8;
      case 8: {
        if (tag == 66) {
         parse_panelmaterial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_panelmaterial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->panelmaterial().data(), this->panelmaterial().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "panelmaterial");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_secpanelmaterial;
        break;
      }

      // required string secpanelmaterial = 9;
      case 9: {
        if (tag == 74) {
         parse_secpanelmaterial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secpanelmaterial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secpanelmaterial().data(), this->secpanelmaterial().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secpanelmaterial");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_verticalframematerial;
        break;
      }

      // required string verticalframematerial = 10;
      case 10: {
        if (tag == 82) {
         parse_verticalframematerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verticalframematerial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verticalframematerial().data(), this->verticalframematerial().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "verticalframematerial");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_horizontalframematerial;
        break;
      }

      // required string horizontalframematerial = 11;
      case 11: {
        if (tag == 90) {
         parse_horizontalframematerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_horizontalframematerial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->horizontalframematerial().data(), this->horizontalframematerial().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "horizontalframematerial");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_framematerial;
        break;
      }

      // required string framematerial = 12;
      case 12: {
        if (tag == 98) {
         parse_framematerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_framematerial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->framematerial().data(), this->framematerial().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "framematerial");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_panelsangle;
        break;
      }

      // required double panelsangle = 13;
      case 13: {
        if (tag == 105) {
         parse_panelsangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &panelsangle_)));
          set_has_panelsangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_offset;
        break;
      }

      // required double offset = 14;
      case 14: {
        if (tag == 113) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_layer;
        break;
      }

      // optional string layer = 15;
      case 15: {
        if (tag == 122) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_height;
        break;
      }

      // optional double height = 16;
      case 16: {
        if (tag == 129) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_toplinked;
        break;
      }

      // optional bool toplinked = 17;
      case 17: {
        if (tag == 136) {
         parse_toplinked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toplinked_)));
          set_has_toplinked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_mainpanelthickness;
        break;
      }

      // optional double mainpanelthickness = 18;
      case 18: {
        if (tag == 145) {
         parse_mainpanelthickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mainpanelthickness_)));
          set_has_mainpanelthickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_secondarypanelthickness;
        break;
      }

      // optional double secondarypanelthickness = 19;
      case 19: {
        if (tag == 153) {
         parse_secondarypanelthickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &secondarypanelthickness_)));
          set_has_secondarypanelthickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_bframewidth;
        break;
      }

      // optional double bframewidth = 20;
      case 20: {
        if (tag == 161) {
         parse_bframewidth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bframewidth_)));
          set_has_bframewidth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_bframedepth;
        break;
      }

      // optional double bframedepth = 21;
      case 21: {
        if (tag == 169) {
         parse_bframedepth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bframedepth_)));
          set_has_bframedepth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_bframeoffset;
        break;
      }

      // optional double bframeoffset = 22;
      case 22: {
        if (tag == 177) {
         parse_bframeoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bframeoffset_)));
          set_has_bframeoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_mframewidth;
        break;
      }

      // optional double mframewidth = 23;
      case 23: {
        if (tag == 185) {
         parse_mframewidth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mframewidth_)));
          set_has_mframewidth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_mframedepth;
        break;
      }

      // optional double mframedepth = 24;
      case 24: {
        if (tag == 193) {
         parse_mframedepth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mframedepth_)));
          set_has_mframedepth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(201)) goto parse_mframeoffset;
        break;
      }

      // optional double mframeoffset = 25;
      case 25: {
        if (tag == 201) {
         parse_mframeoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mframeoffset_)));
          set_has_mframeoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(209)) goto parse_tframewidth;
        break;
      }

      // optional double tframewidth = 26;
      case 26: {
        if (tag == 209) {
         parse_tframewidth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tframewidth_)));
          set_has_tframewidth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(217)) goto parse_tframedepth;
        break;
      }

      // optional double tframedepth = 27;
      case 27: {
        if (tag == 217) {
         parse_tframedepth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tframedepth_)));
          set_has_tframedepth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(225)) goto parse_tframeoffset;
        break;
      }

      // optional double tframeoffset = 28;
      case 28: {
        if (tag == 225) {
         parse_tframeoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tframeoffset_)));
          set_has_tframeoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:curtainwallmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:curtainwallmsg)
  return false;
#undef DO_
}

void curtainwallmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:curtainwallmsg)
  // required .pointsmessage pts = 1;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pts(), output);
  }

  // required .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arcs(), output);
  }

  // required int32 bottomindex = 3;
  if (has_bottomindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bottomindex(), output);
  }

  // required int32 upperindex = 4;
  if (has_upperindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->upperindex(), output);
  }

  // repeated double primaries = 5;
  for (int i = 0; i < this->primaries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->primaries(i), output);
  }

  // repeated double secondaries = 6;
  for (int i = 0; i < this->secondaries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->secondaries(i), output);
  }

  // repeated bool mainpanels = 7;
  for (int i = 0; i < this->mainpanels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      7, this->mainpanels(i), output);
  }

  // required string panelmaterial = 8;
  if (has_panelmaterial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->panelmaterial().data(), this->panelmaterial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "panelmaterial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->panelmaterial(), output);
  }

  // required string secpanelmaterial = 9;
  if (has_secpanelmaterial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secpanelmaterial().data(), this->secpanelmaterial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secpanelmaterial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->secpanelmaterial(), output);
  }

  // required string verticalframematerial = 10;
  if (has_verticalframematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verticalframematerial().data(), this->verticalframematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "verticalframematerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->verticalframematerial(), output);
  }

  // required string horizontalframematerial = 11;
  if (has_horizontalframematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->horizontalframematerial().data(), this->horizontalframematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "horizontalframematerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->horizontalframematerial(), output);
  }

  // required string framematerial = 12;
  if (has_framematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->framematerial().data(), this->framematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "framematerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->framematerial(), output);
  }

  // required double panelsangle = 13;
  if (has_panelsangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->panelsangle(), output);
  }

  // required double offset = 14;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->offset(), output);
  }

  // optional string layer = 15;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->layer(), output);
  }

  // optional double height = 16;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->height(), output);
  }

  // optional bool toplinked = 17;
  if (has_toplinked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->toplinked(), output);
  }

  // optional double mainpanelthickness = 18;
  if (has_mainpanelthickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->mainpanelthickness(), output);
  }

  // optional double secondarypanelthickness = 19;
  if (has_secondarypanelthickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->secondarypanelthickness(), output);
  }

  // optional double bframewidth = 20;
  if (has_bframewidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->bframewidth(), output);
  }

  // optional double bframedepth = 21;
  if (has_bframedepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->bframedepth(), output);
  }

  // optional double bframeoffset = 22;
  if (has_bframeoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->bframeoffset(), output);
  }

  // optional double mframewidth = 23;
  if (has_mframewidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->mframewidth(), output);
  }

  // optional double mframedepth = 24;
  if (has_mframedepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->mframedepth(), output);
  }

  // optional double mframeoffset = 25;
  if (has_mframeoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->mframeoffset(), output);
  }

  // optional double tframewidth = 26;
  if (has_tframewidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->tframewidth(), output);
  }

  // optional double tframedepth = 27;
  if (has_tframedepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->tframedepth(), output);
  }

  // optional double tframeoffset = 28;
  if (has_tframeoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->tframeoffset(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:curtainwallmsg)
}

::google::protobuf::uint8* curtainwallmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:curtainwallmsg)
  // required .pointsmessage pts = 1;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pts(), target);
  }

  // required .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arcs(), target);
  }

  // required int32 bottomindex = 3;
  if (has_bottomindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bottomindex(), target);
  }

  // required int32 upperindex = 4;
  if (has_upperindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->upperindex(), target);
  }

  // repeated double primaries = 5;
  for (int i = 0; i < this->primaries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->primaries(i), target);
  }

  // repeated double secondaries = 6;
  for (int i = 0; i < this->secondaries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->secondaries(i), target);
  }

  // repeated bool mainpanels = 7;
  for (int i = 0; i < this->mainpanels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(7, this->mainpanels(i), target);
  }

  // required string panelmaterial = 8;
  if (has_panelmaterial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->panelmaterial().data(), this->panelmaterial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "panelmaterial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->panelmaterial(), target);
  }

  // required string secpanelmaterial = 9;
  if (has_secpanelmaterial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secpanelmaterial().data(), this->secpanelmaterial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secpanelmaterial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->secpanelmaterial(), target);
  }

  // required string verticalframematerial = 10;
  if (has_verticalframematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verticalframematerial().data(), this->verticalframematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "verticalframematerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->verticalframematerial(), target);
  }

  // required string horizontalframematerial = 11;
  if (has_horizontalframematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->horizontalframematerial().data(), this->horizontalframematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "horizontalframematerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->horizontalframematerial(), target);
  }

  // required string framematerial = 12;
  if (has_framematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->framematerial().data(), this->framematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "framematerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->framematerial(), target);
  }

  // required double panelsangle = 13;
  if (has_panelsangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->panelsangle(), target);
  }

  // required double offset = 14;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->offset(), target);
  }

  // optional string layer = 15;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->layer(), target);
  }

  // optional double height = 16;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->height(), target);
  }

  // optional bool toplinked = 17;
  if (has_toplinked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->toplinked(), target);
  }

  // optional double mainpanelthickness = 18;
  if (has_mainpanelthickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->mainpanelthickness(), target);
  }

  // optional double secondarypanelthickness = 19;
  if (has_secondarypanelthickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->secondarypanelthickness(), target);
  }

  // optional double bframewidth = 20;
  if (has_bframewidth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->bframewidth(), target);
  }

  // optional double bframedepth = 21;
  if (has_bframedepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->bframedepth(), target);
  }

  // optional double bframeoffset = 22;
  if (has_bframeoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->bframeoffset(), target);
  }

  // optional double mframewidth = 23;
  if (has_mframewidth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->mframewidth(), target);
  }

  // optional double mframedepth = 24;
  if (has_mframedepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->mframedepth(), target);
  }

  // optional double mframeoffset = 25;
  if (has_mframeoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->mframeoffset(), target);
  }

  // optional double tframewidth = 26;
  if (has_tframewidth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->tframewidth(), target);
  }

  // optional double tframedepth = 27;
  if (has_tframedepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->tframedepth(), target);
  }

  // optional double tframeoffset = 28;
  if (has_tframeoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(28, this->tframeoffset(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:curtainwallmsg)
  return target;
}

int curtainwallmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pointsmessage pts = 1;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // required .polyarcsmessage arcs = 2;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

    // required int32 bottomindex = 3;
    if (has_bottomindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomindex());
    }

    // required int32 upperindex = 4;
    if (has_upperindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upperindex());
    }

    // required string panelmaterial = 8;
    if (has_panelmaterial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->panelmaterial());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string secpanelmaterial = 9;
    if (has_secpanelmaterial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secpanelmaterial());
    }

    // required string verticalframematerial = 10;
    if (has_verticalframematerial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verticalframematerial());
    }

    // required string horizontalframematerial = 11;
    if (has_horizontalframematerial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->horizontalframematerial());
    }

    // required string framematerial = 12;
    if (has_framematerial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->framematerial());
    }

    // required double panelsangle = 13;
    if (has_panelsangle()) {
      total_size += 1 + 8;
    }

    // required double offset = 14;
    if (has_offset()) {
      total_size += 1 + 8;
    }

    // optional string layer = 15;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

    // optional double height = 16;
    if (has_height()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional bool toplinked = 17;
    if (has_toplinked()) {
      total_size += 2 + 1;
    }

    // optional double mainpanelthickness = 18;
    if (has_mainpanelthickness()) {
      total_size += 2 + 8;
    }

    // optional double secondarypanelthickness = 19;
    if (has_secondarypanelthickness()) {
      total_size += 2 + 8;
    }

    // optional double bframewidth = 20;
    if (has_bframewidth()) {
      total_size += 2 + 8;
    }

    // optional double bframedepth = 21;
    if (has_bframedepth()) {
      total_size += 2 + 8;
    }

    // optional double bframeoffset = 22;
    if (has_bframeoffset()) {
      total_size += 2 + 8;
    }

    // optional double mframewidth = 23;
    if (has_mframewidth()) {
      total_size += 2 + 8;
    }

    // optional double mframedepth = 24;
    if (has_mframedepth()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional double mframeoffset = 25;
    if (has_mframeoffset()) {
      total_size += 2 + 8;
    }

    // optional double tframewidth = 26;
    if (has_tframewidth()) {
      total_size += 2 + 8;
    }

    // optional double tframedepth = 27;
    if (has_tframedepth()) {
      total_size += 2 + 8;
    }

    // optional double tframeoffset = 28;
    if (has_tframeoffset()) {
      total_size += 2 + 8;
    }

  }
  // repeated double primaries = 5;
  {
    int data_size = 0;
    data_size = 8 * this->primaries_size();
    total_size += 1 * this->primaries_size() + data_size;
  }

  // repeated double secondaries = 6;
  {
    int data_size = 0;
    data_size = 8 * this->secondaries_size();
    total_size += 1 * this->secondaries_size() + data_size;
  }

  // repeated bool mainpanels = 7;
  {
    int data_size = 0;
    data_size = 1 * this->mainpanels_size();
    total_size += 1 * this->mainpanels_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void curtainwallmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const curtainwallmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const curtainwallmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void curtainwallmsg::MergeFrom(const curtainwallmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  primaries_.MergeFrom(from.primaries_);
  secondaries_.MergeFrom(from.secondaries_);
  mainpanels_.MergeFrom(from.mainpanels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
    if (from.has_bottomindex()) {
      set_bottomindex(from.bottomindex());
    }
    if (from.has_upperindex()) {
      set_upperindex(from.upperindex());
    }
    if (from.has_panelmaterial()) {
      set_panelmaterial(from.panelmaterial());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_secpanelmaterial()) {
      set_secpanelmaterial(from.secpanelmaterial());
    }
    if (from.has_verticalframematerial()) {
      set_verticalframematerial(from.verticalframematerial());
    }
    if (from.has_horizontalframematerial()) {
      set_horizontalframematerial(from.horizontalframematerial());
    }
    if (from.has_framematerial()) {
      set_framematerial(from.framematerial());
    }
    if (from.has_panelsangle()) {
      set_panelsangle(from.panelsangle());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_toplinked()) {
      set_toplinked(from.toplinked());
    }
    if (from.has_mainpanelthickness()) {
      set_mainpanelthickness(from.mainpanelthickness());
    }
    if (from.has_secondarypanelthickness()) {
      set_secondarypanelthickness(from.secondarypanelthickness());
    }
    if (from.has_bframewidth()) {
      set_bframewidth(from.bframewidth());
    }
    if (from.has_bframedepth()) {
      set_bframedepth(from.bframedepth());
    }
    if (from.has_bframeoffset()) {
      set_bframeoffset(from.bframeoffset());
    }
    if (from.has_mframewidth()) {
      set_mframewidth(from.mframewidth());
    }
    if (from.has_mframedepth()) {
      set_mframedepth(from.mframedepth());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_mframeoffset()) {
      set_mframeoffset(from.mframeoffset());
    }
    if (from.has_tframewidth()) {
      set_tframewidth(from.tframewidth());
    }
    if (from.has_tframedepth()) {
      set_tframedepth(from.tframedepth());
    }
    if (from.has_tframeoffset()) {
      set_tframeoffset(from.tframeoffset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void curtainwallmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void curtainwallmsg::CopyFrom(const curtainwallmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool curtainwallmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003f8f) != 0x00003f8f) return false;

  return true;
}

void curtainwallmsg::Swap(curtainwallmsg* other) {
  if (other != this) {
    std::swap(pts_, other->pts_);
    std::swap(arcs_, other->arcs_);
    std::swap(bottomindex_, other->bottomindex_);
    std::swap(upperindex_, other->upperindex_);
    primaries_.Swap(&other->primaries_);
    secondaries_.Swap(&other->secondaries_);
    mainpanels_.Swap(&other->mainpanels_);
    std::swap(panelmaterial_, other->panelmaterial_);
    std::swap(secpanelmaterial_, other->secpanelmaterial_);
    std::swap(verticalframematerial_, other->verticalframematerial_);
    std::swap(horizontalframematerial_, other->horizontalframematerial_);
    std::swap(framematerial_, other->framematerial_);
    std::swap(panelsangle_, other->panelsangle_);
    std::swap(offset_, other->offset_);
    std::swap(layer_, other->layer_);
    std::swap(height_, other->height_);
    std::swap(toplinked_, other->toplinked_);
    std::swap(mainpanelthickness_, other->mainpanelthickness_);
    std::swap(secondarypanelthickness_, other->secondarypanelthickness_);
    std::swap(bframewidth_, other->bframewidth_);
    std::swap(bframedepth_, other->bframedepth_);
    std::swap(bframeoffset_, other->bframeoffset_);
    std::swap(mframewidth_, other->mframewidth_);
    std::swap(mframedepth_, other->mframedepth_);
    std::swap(mframeoffset_, other->mframeoffset_);
    std::swap(tframewidth_, other->tframewidth_);
    std::swap(tframedepth_, other->tframedepth_);
    std::swap(tframeoffset_, other->tframeoffset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata curtainwallmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = curtainwallmsg_descriptor_;
  metadata.reflection = curtainwallmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int translatemsg::kTxFieldNumber;
const int translatemsg::kTyFieldNumber;
const int translatemsg::kTzFieldNumber;
const int translatemsg::kGuidFieldNumber;
#endif  // !_MSC_VER

translatemsg::translatemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:translatemsg)
}

void translatemsg::InitAsDefaultInstance() {
}

translatemsg::translatemsg(const translatemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:translatemsg)
}

void translatemsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tx_ = 0;
  ty_ = 0;
  tz_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

translatemsg::~translatemsg() {
  // @@protoc_insertion_point(destructor:translatemsg)
  SharedDtor();
}

void translatemsg::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void translatemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* translatemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return translatemsg_descriptor_;
}

const translatemsg& translatemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

translatemsg* translatemsg::default_instance_ = NULL;

translatemsg* translatemsg::New() const {
  return new translatemsg;
}

void translatemsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<translatemsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(tx_, tz_);
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool translatemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:translatemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double tx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tx_)));
          set_has_tx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_ty;
        break;
      }

      // required double ty = 2;
      case 2: {
        if (tag == 17) {
         parse_ty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ty_)));
          set_has_ty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_tz;
        break;
      }

      // required double tz = 3;
      case 3: {
        if (tag == 25) {
         parse_tz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tz_)));
          set_has_tz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_guid;
        break;
      }

      // required string guid = 4;
      case 4: {
        if (tag == 34) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:translatemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:translatemsg)
  return false;
#undef DO_
}

void translatemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:translatemsg)
  // required double tx = 1;
  if (has_tx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->tx(), output);
  }

  // required double ty = 2;
  if (has_ty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ty(), output);
  }

  // required double tz = 3;
  if (has_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->tz(), output);
  }

  // required string guid = 4;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->guid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:translatemsg)
}

::google::protobuf::uint8* translatemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:translatemsg)
  // required double tx = 1;
  if (has_tx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->tx(), target);
  }

  // required double ty = 2;
  if (has_ty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ty(), target);
  }

  // required double tz = 3;
  if (has_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->tz(), target);
  }

  // required string guid = 4;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->guid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:translatemsg)
  return target;
}

int translatemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double tx = 1;
    if (has_tx()) {
      total_size += 1 + 8;
    }

    // required double ty = 2;
    if (has_ty()) {
      total_size += 1 + 8;
    }

    // required double tz = 3;
    if (has_tz()) {
      total_size += 1 + 8;
    }

    // required string guid = 4;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void translatemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const translatemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const translatemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void translatemsg::MergeFrom(const translatemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tx()) {
      set_tx(from.tx());
    }
    if (from.has_ty()) {
      set_ty(from.ty());
    }
    if (from.has_tz()) {
      set_tz(from.tz());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void translatemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void translatemsg::CopyFrom(const translatemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool translatemsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void translatemsg::Swap(translatemsg* other) {
  if (other != this) {
    std::swap(tx_, other->tx_);
    std::swap(ty_, other->ty_);
    std::swap(tz_, other->tz_);
    std::swap(guid_, other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata translatemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = translatemsg_descriptor_;
  metadata.reflection = translatemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int slabmessage::kLevelFieldNumber;
const int slabmessage::kMaterialFieldNumber;
const int slabmessage::kThicknessFieldNumber;
const int slabmessage::kTypeFieldNumber;
const int slabmessage::kBottomlevelFieldNumber;
const int slabmessage::kSubpolygonsFieldNumber;
const int slabmessage::kPtsFieldNumber;
const int slabmessage::kParcsFieldNumber;
const int slabmessage::kLayerFieldNumber;
const int slabmessage::kReferenceFieldNumber;
#endif  // !_MSC_VER

slabmessage::slabmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:slabmessage)
}

void slabmessage::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  parcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

slabmessage::slabmessage(const slabmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:slabmessage)
}

void slabmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  level_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thickness_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bottomlevel_ = 0;
  pts_ = NULL;
  parcs_ = NULL;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

slabmessage::~slabmessage() {
  // @@protoc_insertion_point(destructor:slabmessage)
  SharedDtor();
}

void slabmessage::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (reference_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reference_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete parcs_;
  }
}

void slabmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* slabmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return slabmessage_descriptor_;
}

const slabmessage& slabmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

slabmessage* slabmessage::default_instance_ = NULL;

slabmessage* slabmessage::New() const {
  return new slabmessage;
}

void slabmessage::Clear() {
  if (_has_bits_[0 / 32] & 223) {
    level_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    thickness_ = 0;
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    bottomlevel_ = 0;
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_parcs()) {
      if (parcs_ != NULL) parcs_->::polyarcsmessage::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
    if (has_reference()) {
      if (reference_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reference_->clear();
      }
    }
  }
  subpolygons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool slabmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:slabmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double level = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_material;
        break;
      }

      // required string material = 2;
      case 2: {
        if (tag == 18) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_thickness;
        break;
      }

      // required double thickness = 3;
      case 3: {
        if (tag == 25) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // required string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bottomlevel;
        break;
      }

      // required int32 bottomlevel = 5;
      case 5: {
        if (tag == 40) {
         parse_bottomlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomlevel_)));
          set_has_bottomlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_subpolygons;
        break;
      }

      // repeated int32 subpolygons = 6;
      case 6: {
        if (tag == 48) {
         parse_subpolygons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_subpolygons())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_subpolygons())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_subpolygons;
        if (input->ExpectTag(58)) goto parse_pts;
        break;
      }

      // required .pointsmessage pts = 7;
      case 7: {
        if (tag == 58) {
         parse_pts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_parcs;
        break;
      }

      // required .polyarcsmessage parcs = 8;
      case 8: {
        if (tag == 66) {
         parse_parcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_layer;
        break;
      }

      // optional string layer = 9;
      case 9: {
        if (tag == 74) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reference;
        break;
      }

      // optional string reference = 10;
      case 10: {
        if (tag == 82) {
         parse_reference:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reference().data(), this->reference().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reference");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:slabmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:slabmessage)
  return false;
#undef DO_
}

void slabmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:slabmessage)
  // required double level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->level(), output);
  }

  // required string material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->material(), output);
  }

  // required double thickness = 3;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->thickness(), output);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // required int32 bottomlevel = 5;
  if (has_bottomlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bottomlevel(), output);
  }

  // repeated int32 subpolygons = 6;
  for (int i = 0; i < this->subpolygons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->subpolygons(i), output);
  }

  // required .pointsmessage pts = 7;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->pts(), output);
  }

  // required .polyarcsmessage parcs = 8;
  if (has_parcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->parcs(), output);
  }

  // optional string layer = 9;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->layer(), output);
  }

  // optional string reference = 10;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference().data(), this->reference().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reference");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reference(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:slabmessage)
}

::google::protobuf::uint8* slabmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:slabmessage)
  // required double level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->level(), target);
  }

  // required string material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->material(), target);
  }

  // required double thickness = 3;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->thickness(), target);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // required int32 bottomlevel = 5;
  if (has_bottomlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bottomlevel(), target);
  }

  // repeated int32 subpolygons = 6;
  for (int i = 0; i < this->subpolygons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->subpolygons(i), target);
  }

  // required .pointsmessage pts = 7;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->pts(), target);
  }

  // required .polyarcsmessage parcs = 8;
  if (has_parcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->parcs(), target);
  }

  // optional string layer = 9;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->layer(), target);
  }

  // optional string reference = 10;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference().data(), this->reference().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reference");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reference(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:slabmessage)
  return target;
}

int slabmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double level = 1;
    if (has_level()) {
      total_size += 1 + 8;
    }

    // required string material = 2;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required double thickness = 3;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

    // required string type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required int32 bottomlevel = 5;
    if (has_bottomlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomlevel());
    }

    // required .pointsmessage pts = 7;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // required .polyarcsmessage parcs = 8;
    if (has_parcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parcs());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string layer = 9;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

    // optional string reference = 10;
    if (has_reference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reference());
    }

  }
  // repeated int32 subpolygons = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->subpolygons_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->subpolygons(i));
    }
    total_size += 1 * this->subpolygons_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void slabmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const slabmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const slabmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void slabmessage::MergeFrom(const slabmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  subpolygons_.MergeFrom(from.subpolygons_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_bottomlevel()) {
      set_bottomlevel(from.bottomlevel());
    }
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_parcs()) {
      mutable_parcs()->::polyarcsmessage::MergeFrom(from.parcs());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_layer()) {
      set_layer(from.layer());
    }
    if (from.has_reference()) {
      set_reference(from.reference());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void slabmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void slabmessage::CopyFrom(const slabmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool slabmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000df) != 0x000000df) return false;

  return true;
}

void slabmessage::Swap(slabmessage* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(material_, other->material_);
    std::swap(thickness_, other->thickness_);
    std::swap(type_, other->type_);
    std::swap(bottomlevel_, other->bottomlevel_);
    subpolygons_.Swap(&other->subpolygons_);
    std::swap(pts_, other->pts_);
    std::swap(parcs_, other->parcs_);
    std::swap(layer_, other->layer_);
    std::swap(reference_, other->reference_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata slabmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = slabmessage_descriptor_;
  metadata.reflection = slabmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int meshmessage::kLevelFieldNumber;
const int meshmessage::kMaterialFieldNumber;
const int meshmessage::kBottomlevelFieldNumber;
const int meshmessage::kOverridematerialFieldNumber;
const int meshmessage::kLayerFieldNumber;
#endif  // !_MSC_VER

meshmessage::meshmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:meshmessage)
}

void meshmessage::InitAsDefaultInstance() {
}

meshmessage::meshmessage(const meshmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:meshmessage)
}

void meshmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  level_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bottomlevel_ = 0;
  overridematerial_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

meshmessage::~meshmessage() {
  // @@protoc_insertion_point(destructor:meshmessage)
  SharedDtor();
}

void meshmessage::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (overridematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete overridematerial_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void meshmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* meshmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return meshmessage_descriptor_;
}

const meshmessage& meshmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

meshmessage* meshmessage::default_instance_ = NULL;

meshmessage* meshmessage::New() const {
  return new meshmessage;
}

void meshmessage::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    level_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    bottomlevel_ = 0;
    if (has_overridematerial()) {
      if (overridematerial_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        overridematerial_->clear();
      }
    }
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool meshmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:meshmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double level = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_material;
        break;
      }

      // required string material = 2;
      case 2: {
        if (tag == 18) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bottomlevel;
        break;
      }

      // required int32 bottomlevel = 3;
      case 3: {
        if (tag == 24) {
         parse_bottomlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomlevel_)));
          set_has_bottomlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_overridematerial;
        break;
      }

      // optional string overridematerial = 4;
      case 4: {
        if (tag == 34) {
         parse_overridematerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_overridematerial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->overridematerial().data(), this->overridematerial().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "overridematerial");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_layer;
        break;
      }

      // optional string layer = 5;
      case 5: {
        if (tag == 42) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:meshmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:meshmessage)
  return false;
#undef DO_
}

void meshmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:meshmessage)
  // required double level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->level(), output);
  }

  // required string material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->material(), output);
  }

  // required int32 bottomlevel = 3;
  if (has_bottomlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bottomlevel(), output);
  }

  // optional string overridematerial = 4;
  if (has_overridematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->overridematerial().data(), this->overridematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "overridematerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->overridematerial(), output);
  }

  // optional string layer = 5;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:meshmessage)
}

::google::protobuf::uint8* meshmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:meshmessage)
  // required double level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->level(), target);
  }

  // required string material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->material(), target);
  }

  // required int32 bottomlevel = 3;
  if (has_bottomlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bottomlevel(), target);
  }

  // optional string overridematerial = 4;
  if (has_overridematerial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->overridematerial().data(), this->overridematerial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "overridematerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->overridematerial(), target);
  }

  // optional string layer = 5;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meshmessage)
  return target;
}

int meshmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double level = 1;
    if (has_level()) {
      total_size += 1 + 8;
    }

    // required string material = 2;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required int32 bottomlevel = 3;
    if (has_bottomlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomlevel());
    }

    // optional string overridematerial = 4;
    if (has_overridematerial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->overridematerial());
    }

    // optional string layer = 5;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void meshmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const meshmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const meshmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void meshmessage::MergeFrom(const meshmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_bottomlevel()) {
      set_bottomlevel(from.bottomlevel());
    }
    if (from.has_overridematerial()) {
      set_overridematerial(from.overridematerial());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void meshmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void meshmessage::CopyFrom(const meshmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool meshmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void meshmessage::Swap(meshmessage* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(material_, other->material_);
    std::swap(bottomlevel_, other->bottomlevel_);
    std::swap(overridematerial_, other->overridematerial_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata meshmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = meshmessage_descriptor_;
  metadata.reflection = meshmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rotatemsg::kGuidFieldNumber;
const int rotatemsg::kAxisFieldNumber;
const int rotatemsg::kAngleFieldNumber;
const int rotatemsg::kCopyFieldNumber;
#endif  // !_MSC_VER

rotatemsg::rotatemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rotatemsg)
}

void rotatemsg::InitAsDefaultInstance() {
}

rotatemsg::rotatemsg(const rotatemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rotatemsg)
}

void rotatemsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  axis_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  angle_ = 0;
  copy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rotatemsg::~rotatemsg() {
  // @@protoc_insertion_point(destructor:rotatemsg)
  SharedDtor();
}

void rotatemsg::SharedDtor() {
  if (axis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete axis_;
  }
  if (this != default_instance_) {
  }
}

void rotatemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rotatemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rotatemsg_descriptor_;
}

const rotatemsg& rotatemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

rotatemsg* rotatemsg::default_instance_ = NULL;

rotatemsg* rotatemsg::New() const {
  return new rotatemsg;
}

void rotatemsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<rotatemsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 14) {
    ZR_(angle_, copy_);
    if (has_axis()) {
      if (axis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        axis_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  guid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rotatemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rotatemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string guid = 1;
      case 1: {
        if (tag == 10) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_guid;
        if (input->ExpectTag(18)) goto parse_axis;
        break;
      }

      // required string axis = 2;
      case 2: {
        if (tag == 18) {
         parse_axis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_axis()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->axis().data(), this->axis().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "axis");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_angle;
        break;
      }

      // required double angle = 3;
      case 3: {
        if (tag == 25) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_copy;
        break;
      }

      // required bool copy = 4;
      case 4: {
        if (tag == 32) {
         parse_copy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &copy_)));
          set_has_copy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rotatemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rotatemsg)
  return false;
#undef DO_
}

void rotatemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rotatemsg)
  // repeated string guid = 1;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->guid(i), output);
  }

  // required string axis = 2;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->axis().data(), this->axis().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "axis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->axis(), output);
  }

  // required double angle = 3;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->angle(), output);
  }

  // required bool copy = 4;
  if (has_copy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->copy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rotatemsg)
}

::google::protobuf::uint8* rotatemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rotatemsg)
  // repeated string guid = 1;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->guid(i), target);
  }

  // required string axis = 2;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->axis().data(), this->axis().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "axis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->axis(), target);
  }

  // required double angle = 3;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->angle(), target);
  }

  // required bool copy = 4;
  if (has_copy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->copy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rotatemsg)
  return target;
}

int rotatemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string axis = 2;
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->axis());
    }

    // required double angle = 3;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required bool copy = 4;
    if (has_copy()) {
      total_size += 1 + 1;
    }

  }
  // repeated string guid = 1;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rotatemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rotatemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rotatemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rotatemsg::MergeFrom(const rotatemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  guid_.MergeFrom(from.guid_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_axis()) {
      set_axis(from.axis());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_copy()) {
      set_copy(from.copy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rotatemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rotatemsg::CopyFrom(const rotatemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rotatemsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  return true;
}

void rotatemsg::Swap(rotatemsg* other) {
  if (other != this) {
    guid_.Swap(&other->guid_);
    std::swap(axis_, other->axis_);
    std::swap(angle_, other->angle_);
    std::swap(copy_, other->copy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rotatemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rotatemsg_descriptor_;
  metadata.reflection = rotatemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int trimmsg::kGuidsFieldNumber;
const int trimmsg::kGuids2FieldNumber;
#endif  // !_MSC_VER

trimmsg::trimmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:trimmsg)
}

void trimmsg::InitAsDefaultInstance() {
}

trimmsg::trimmsg(const trimmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trimmsg)
}

void trimmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

trimmsg::~trimmsg() {
  // @@protoc_insertion_point(destructor:trimmsg)
  SharedDtor();
}

void trimmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void trimmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* trimmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return trimmsg_descriptor_;
}

const trimmsg& trimmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

trimmsg* trimmsg::default_instance_ = NULL;

trimmsg* trimmsg::New() const {
  return new trimmsg;
}

void trimmsg::Clear() {
  guids_.Clear();
  guids2_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool trimmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trimmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string guids = 1;
      case 1: {
        if (tag == 10) {
         parse_guids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guids(this->guids_size() - 1).data(),
            this->guids(this->guids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_guids;
        if (input->ExpectTag(18)) goto parse_guids2;
        break;
      }

      // repeated string guids2 = 2;
      case 2: {
        if (tag == 18) {
         parse_guids2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guids2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guids2(this->guids2_size() - 1).data(),
            this->guids2(this->guids2_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guids2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guids2;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trimmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trimmsg)
  return false;
#undef DO_
}

void trimmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trimmsg)
  // repeated string guids = 1;
  for (int i = 0; i < this->guids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guids(i).data(), this->guids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->guids(i), output);
  }

  // repeated string guids2 = 2;
  for (int i = 0; i < this->guids2_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guids2(i).data(), this->guids2(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guids2");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->guids2(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:trimmsg)
}

::google::protobuf::uint8* trimmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:trimmsg)
  // repeated string guids = 1;
  for (int i = 0; i < this->guids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guids(i).data(), this->guids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->guids(i), target);
  }

  // repeated string guids2 = 2;
  for (int i = 0; i < this->guids2_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guids2(i).data(), this->guids2(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guids2");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->guids2(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:trimmsg)
  return target;
}

int trimmsg::ByteSize() const {
  int total_size = 0;

  // repeated string guids = 1;
  total_size += 1 * this->guids_size();
  for (int i = 0; i < this->guids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guids(i));
  }

  // repeated string guids2 = 2;
  total_size += 1 * this->guids2_size();
  for (int i = 0; i < this->guids2_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guids2(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void trimmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const trimmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const trimmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void trimmsg::MergeFrom(const trimmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  guids_.MergeFrom(from.guids_);
  guids2_.MergeFrom(from.guids2_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void trimmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void trimmsg::CopyFrom(const trimmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool trimmsg::IsInitialized() const {

  return true;
}

void trimmsg::Swap(trimmsg* other) {
  if (other != this) {
    guids_.Swap(&other->guids_);
    guids2_.Swap(&other->guids2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata trimmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = trimmsg_descriptor_;
  metadata.reflection = trimmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int intersectmsg::kGuid1FieldNumber;
const int intersectmsg::kGuid2FieldNumber;
#endif  // !_MSC_VER

intersectmsg::intersectmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:intersectmsg)
}

void intersectmsg::InitAsDefaultInstance() {
}

intersectmsg::intersectmsg(const intersectmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:intersectmsg)
}

void intersectmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intersectmsg::~intersectmsg() {
  // @@protoc_insertion_point(destructor:intersectmsg)
  SharedDtor();
}

void intersectmsg::SharedDtor() {
  if (guid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid1_;
  }
  if (guid2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid2_;
  }
  if (this != default_instance_) {
  }
}

void intersectmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intersectmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intersectmsg_descriptor_;
}

const intersectmsg& intersectmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

intersectmsg* intersectmsg::default_instance_ = NULL;

intersectmsg* intersectmsg::New() const {
  return new intersectmsg;
}

void intersectmsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_guid1()) {
      if (guid1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid1_->clear();
      }
    }
    if (has_guid2()) {
      if (guid2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool intersectmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intersectmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid1().data(), this->guid1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guid2;
        break;
      }

      // required string guid2 = 2;
      case 2: {
        if (tag == 18) {
         parse_guid2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid2().data(), this->guid2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intersectmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intersectmsg)
  return false;
#undef DO_
}

void intersectmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intersectmsg)
  // required string guid1 = 1;
  if (has_guid1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid1().data(), this->guid1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid1(), output);
  }

  // required string guid2 = 2;
  if (has_guid2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid2().data(), this->guid2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:intersectmsg)
}

::google::protobuf::uint8* intersectmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:intersectmsg)
  // required string guid1 = 1;
  if (has_guid1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid1().data(), this->guid1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid1(), target);
  }

  // required string guid2 = 2;
  if (has_guid2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid2().data(), this->guid2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intersectmsg)
  return target;
}

int intersectmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid1 = 1;
    if (has_guid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid1());
    }

    // required string guid2 = 2;
    if (has_guid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intersectmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const intersectmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intersectmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intersectmsg::MergeFrom(const intersectmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid1()) {
      set_guid1(from.guid1());
    }
    if (from.has_guid2()) {
      set_guid2(from.guid2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void intersectmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intersectmsg::CopyFrom(const intersectmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intersectmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void intersectmsg::Swap(intersectmsg* other) {
  if (other != this) {
    std::swap(guid1_, other->guid1_);
    std::swap(guid2_, other->guid2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata intersectmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intersectmsg_descriptor_;
  metadata.reflection = intersectmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int columnmsg::kPosxFieldNumber;
const int columnmsg::kPosyFieldNumber;
const int columnmsg::kBottomFieldNumber;
const int columnmsg::kHeightFieldNumber;
const int columnmsg::kCirclebasedFieldNumber;
const int columnmsg::kAngleFieldNumber;
const int columnmsg::kDepthFieldNumber;
const int columnmsg::kWidthFieldNumber;
const int columnmsg::kBottomindexFieldNumber;
const int columnmsg::kUpperindexFieldNumber;
const int columnmsg::kSlantangleFieldNumber;
const int columnmsg::kSlantdirectionFieldNumber;
const int columnmsg::kProfilenameFieldNumber;
const int columnmsg::kBottomoffsetFieldNumber;
const int columnmsg::kLayerFieldNumber;
const int columnmsg::kToplinkedFieldNumber;
#endif  // !_MSC_VER

columnmsg::columnmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:columnmsg)
}

void columnmsg::InitAsDefaultInstance() {
}

columnmsg::columnmsg(const columnmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:columnmsg)
}

void columnmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  posx_ = 0;
  posy_ = 0;
  bottom_ = 0;
  height_ = 0;
  circlebased_ = false;
  angle_ = 0;
  depth_ = 0;
  width_ = 0;
  bottomindex_ = 0;
  upperindex_ = 0;
  slantangle_ = 0;
  slantdirection_ = 0;
  profilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bottomoffset_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toplinked_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

columnmsg::~columnmsg() {
  // @@protoc_insertion_point(destructor:columnmsg)
  SharedDtor();
}

void columnmsg::SharedDtor() {
  if (profilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profilename_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void columnmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* columnmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return columnmsg_descriptor_;
}

const columnmsg& columnmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

columnmsg* columnmsg::default_instance_ = NULL;

columnmsg* columnmsg::New() const {
  return new columnmsg;
}

void columnmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<columnmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(posx_, width_);
    circlebased_ = false;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(bottomindex_, slantdirection_);
    if (has_profilename()) {
      if (profilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        profilename_->clear();
      }
    }
    bottomoffset_ = 0;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
    toplinked_ = false;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool columnmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:columnmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double posx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_posy;
        break;
      }

      // required double posy = 2;
      case 2: {
        if (tag == 17) {
         parse_posy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_bottom;
        break;
      }

      // required double bottom = 3;
      case 3: {
        if (tag == 25) {
         parse_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_height;
        break;
      }

      // optional double height = 4;
      case 4: {
        if (tag == 33) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_circlebased;
        break;
      }

      // required bool circlebased = 5;
      case 5: {
        if (tag == 40) {
         parse_circlebased:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &circlebased_)));
          set_has_circlebased();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_angle;
        break;
      }

      // required double angle = 6;
      case 6: {
        if (tag == 49) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_depth;
        break;
      }

      // required double depth = 7;
      case 7: {
        if (tag == 57) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &depth_)));
          set_has_depth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_width;
        break;
      }

      // required double width = 8;
      case 8: {
        if (tag == 65) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_bottomindex;
        break;
      }

      // optional int32 bottomindex = 9;
      case 9: {
        if (tag == 72) {
         parse_bottomindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomindex_)));
          set_has_bottomindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_upperindex;
        break;
      }

      // optional int32 upperindex = 10;
      case 10: {
        if (tag == 80) {
         parse_upperindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upperindex_)));
          set_has_upperindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_slantangle;
        break;
      }

      // required double slantangle = 11;
      case 11: {
        if (tag == 89) {
         parse_slantangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slantangle_)));
          set_has_slantangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_slantdirection;
        break;
      }

      // required double slantdirection = 12;
      case 12: {
        if (tag == 97) {
         parse_slantdirection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slantdirection_)));
          set_has_slantdirection();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_profilename;
        break;
      }

      // required string profilename = 13;
      case 13: {
        if (tag == 106) {
         parse_profilename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->profilename().data(), this->profilename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "profilename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_bottomoffset;
        break;
      }

      // optional double bottomoffset = 14;
      case 14: {
        if (tag == 113) {
         parse_bottomoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bottomoffset_)));
          set_has_bottomoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_layer;
        break;
      }

      // optional string layer = 15;
      case 15: {
        if (tag == 122) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_toplinked;
        break;
      }

      // optional bool toplinked = 16;
      case 16: {
        if (tag == 128) {
         parse_toplinked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toplinked_)));
          set_has_toplinked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:columnmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:columnmsg)
  return false;
#undef DO_
}

void columnmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:columnmsg)
  // required double posx = 1;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->posx(), output);
  }

  // required double posy = 2;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->posy(), output);
  }

  // required double bottom = 3;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->bottom(), output);
  }

  // optional double height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->height(), output);
  }

  // required bool circlebased = 5;
  if (has_circlebased()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->circlebased(), output);
  }

  // required double angle = 6;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->angle(), output);
  }

  // required double depth = 7;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->depth(), output);
  }

  // required double width = 8;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->width(), output);
  }

  // optional int32 bottomindex = 9;
  if (has_bottomindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->bottomindex(), output);
  }

  // optional int32 upperindex = 10;
  if (has_upperindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->upperindex(), output);
  }

  // required double slantangle = 11;
  if (has_slantangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->slantangle(), output);
  }

  // required double slantdirection = 12;
  if (has_slantdirection()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->slantdirection(), output);
  }

  // required string profilename = 13;
  if (has_profilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->profilename().data(), this->profilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "profilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->profilename(), output);
  }

  // optional double bottomoffset = 14;
  if (has_bottomoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->bottomoffset(), output);
  }

  // optional string layer = 15;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->layer(), output);
  }

  // optional bool toplinked = 16;
  if (has_toplinked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->toplinked(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:columnmsg)
}

::google::protobuf::uint8* columnmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:columnmsg)
  // required double posx = 1;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->posx(), target);
  }

  // required double posy = 2;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->posy(), target);
  }

  // required double bottom = 3;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->bottom(), target);
  }

  // optional double height = 4;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->height(), target);
  }

  // required bool circlebased = 5;
  if (has_circlebased()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->circlebased(), target);
  }

  // required double angle = 6;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->angle(), target);
  }

  // required double depth = 7;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->depth(), target);
  }

  // required double width = 8;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->width(), target);
  }

  // optional int32 bottomindex = 9;
  if (has_bottomindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->bottomindex(), target);
  }

  // optional int32 upperindex = 10;
  if (has_upperindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->upperindex(), target);
  }

  // required double slantangle = 11;
  if (has_slantangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->slantangle(), target);
  }

  // required double slantdirection = 12;
  if (has_slantdirection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->slantdirection(), target);
  }

  // required string profilename = 13;
  if (has_profilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->profilename().data(), this->profilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "profilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->profilename(), target);
  }

  // optional double bottomoffset = 14;
  if (has_bottomoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->bottomoffset(), target);
  }

  // optional string layer = 15;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->layer(), target);
  }

  // optional bool toplinked = 16;
  if (has_toplinked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->toplinked(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:columnmsg)
  return target;
}

int columnmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double posx = 1;
    if (has_posx()) {
      total_size += 1 + 8;
    }

    // required double posy = 2;
    if (has_posy()) {
      total_size += 1 + 8;
    }

    // required double bottom = 3;
    if (has_bottom()) {
      total_size += 1 + 8;
    }

    // optional double height = 4;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required bool circlebased = 5;
    if (has_circlebased()) {
      total_size += 1 + 1;
    }

    // required double angle = 6;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required double depth = 7;
    if (has_depth()) {
      total_size += 1 + 8;
    }

    // required double width = 8;
    if (has_width()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 bottomindex = 9;
    if (has_bottomindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomindex());
    }

    // optional int32 upperindex = 10;
    if (has_upperindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upperindex());
    }

    // required double slantangle = 11;
    if (has_slantangle()) {
      total_size += 1 + 8;
    }

    // required double slantdirection = 12;
    if (has_slantdirection()) {
      total_size += 1 + 8;
    }

    // required string profilename = 13;
    if (has_profilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->profilename());
    }

    // optional double bottomoffset = 14;
    if (has_bottomoffset()) {
      total_size += 1 + 8;
    }

    // optional string layer = 15;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

    // optional bool toplinked = 16;
    if (has_toplinked()) {
      total_size += 2 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void columnmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const columnmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const columnmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void columnmsg::MergeFrom(const columnmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_circlebased()) {
      set_circlebased(from.circlebased());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_depth()) {
      set_depth(from.depth());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bottomindex()) {
      set_bottomindex(from.bottomindex());
    }
    if (from.has_upperindex()) {
      set_upperindex(from.upperindex());
    }
    if (from.has_slantangle()) {
      set_slantangle(from.slantangle());
    }
    if (from.has_slantdirection()) {
      set_slantdirection(from.slantdirection());
    }
    if (from.has_profilename()) {
      set_profilename(from.profilename());
    }
    if (from.has_bottomoffset()) {
      set_bottomoffset(from.bottomoffset());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
    if (from.has_toplinked()) {
      set_toplinked(from.toplinked());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void columnmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void columnmsg::CopyFrom(const columnmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool columnmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001cf7) != 0x00001cf7) return false;

  return true;
}

void columnmsg::Swap(columnmsg* other) {
  if (other != this) {
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(bottom_, other->bottom_);
    std::swap(height_, other->height_);
    std::swap(circlebased_, other->circlebased_);
    std::swap(angle_, other->angle_);
    std::swap(depth_, other->depth_);
    std::swap(width_, other->width_);
    std::swap(bottomindex_, other->bottomindex_);
    std::swap(upperindex_, other->upperindex_);
    std::swap(slantangle_, other->slantangle_);
    std::swap(slantdirection_, other->slantdirection_);
    std::swap(profilename_, other->profilename_);
    std::swap(bottomoffset_, other->bottomoffset_);
    std::swap(layer_, other->layer_);
    std::swap(toplinked_, other->toplinked_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata columnmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = columnmsg_descriptor_;
  metadata.reflection = columnmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int storymsg::kHeightFieldNumber;
const int storymsg::kNameFieldNumber;
#endif  // !_MSC_VER

storymsg::storymsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storymsg)
}

void storymsg::InitAsDefaultInstance() {
}

storymsg::storymsg(const storymsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storymsg)
}

void storymsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  height_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

storymsg::~storymsg() {
  // @@protoc_insertion_point(destructor:storymsg)
  SharedDtor();
}

void storymsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void storymsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* storymsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return storymsg_descriptor_;
}

const storymsg& storymsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

storymsg* storymsg::default_instance_ = NULL;

storymsg* storymsg::New() const {
  return new storymsg;
}

void storymsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    height_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool storymsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storymsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double height = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storymsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storymsg)
  return false;
#undef DO_
}

void storymsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storymsg)
  // required double height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->height(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:storymsg)
}

::google::protobuf::uint8* storymsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storymsg)
  // required double height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->height(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storymsg)
  return target;
}

int storymsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double height = 1;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void storymsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const storymsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const storymsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void storymsg::MergeFrom(const storymsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void storymsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storymsg::CopyFrom(const storymsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storymsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void storymsg::Swap(storymsg* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata storymsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = storymsg_descriptor_;
  metadata.reflection = storymsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int storyinfo::kExistsFieldNumber;
const int storyinfo::kIndexFieldNumber;
const int storyinfo::kLevelFieldNumber;
const int storyinfo::kNameFieldNumber;
#endif  // !_MSC_VER

storyinfo::storyinfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storyinfo)
}

void storyinfo::InitAsDefaultInstance() {
}

storyinfo::storyinfo(const storyinfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storyinfo)
}

void storyinfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exists_ = false;
  index_ = 0;
  level_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

storyinfo::~storyinfo() {
  // @@protoc_insertion_point(destructor:storyinfo)
  SharedDtor();
}

void storyinfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void storyinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* storyinfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return storyinfo_descriptor_;
}

const storyinfo& storyinfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

storyinfo* storyinfo::default_instance_ = NULL;

storyinfo* storyinfo::New() const {
  return new storyinfo;
}

void storyinfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<storyinfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(exists_, level_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool storyinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storyinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool exists = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exists_)));
          set_has_exists();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // required int32 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_level;
        break;
      }

      // required double level = 3;
      case 3: {
        if (tag == 25) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storyinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storyinfo)
  return false;
#undef DO_
}

void storyinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storyinfo)
  // required bool exists = 1;
  if (has_exists()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->exists(), output);
  }

  // required int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // required double level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->level(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:storyinfo)
}

::google::protobuf::uint8* storyinfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storyinfo)
  // required bool exists = 1;
  if (has_exists()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->exists(), target);
  }

  // required int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // required double level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->level(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:storyinfo)
  return target;
}

int storyinfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool exists = 1;
    if (has_exists()) {
      total_size += 1 + 1;
    }

    // required int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // required double level = 3;
    if (has_level()) {
      total_size += 1 + 8;
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void storyinfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const storyinfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const storyinfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void storyinfo::MergeFrom(const storyinfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exists()) {
      set_exists(from.exists());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void storyinfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void storyinfo::CopyFrom(const storyinfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool storyinfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void storyinfo::Swap(storyinfo* other) {
  if (other != this) {
    std::swap(exists_, other->exists_);
    std::swap(index_, other->index_);
    std::swap(level_, other->level_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata storyinfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = storyinfo_descriptor_;
  metadata.reflection = storyinfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int upperlevelmsg::kIndexFieldNumber;
const int upperlevelmsg::kHeightFieldNumber;
#endif  // !_MSC_VER

upperlevelmsg::upperlevelmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:upperlevelmsg)
}

void upperlevelmsg::InitAsDefaultInstance() {
}

upperlevelmsg::upperlevelmsg(const upperlevelmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:upperlevelmsg)
}

void upperlevelmsg::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

upperlevelmsg::~upperlevelmsg() {
  // @@protoc_insertion_point(destructor:upperlevelmsg)
  SharedDtor();
}

void upperlevelmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void upperlevelmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* upperlevelmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return upperlevelmsg_descriptor_;
}

const upperlevelmsg& upperlevelmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

upperlevelmsg* upperlevelmsg::default_instance_ = NULL;

upperlevelmsg* upperlevelmsg::New() const {
  return new upperlevelmsg;
}

void upperlevelmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<upperlevelmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(height_, index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool upperlevelmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upperlevelmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_height;
        break;
      }

      // required double height = 2;
      case 2: {
        if (tag == 17) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:upperlevelmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upperlevelmsg)
  return false;
#undef DO_
}

void upperlevelmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upperlevelmsg)
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required double height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->height(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:upperlevelmsg)
}

::google::protobuf::uint8* upperlevelmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:upperlevelmsg)
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required double height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->height(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upperlevelmsg)
  return target;
}

int upperlevelmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // required double height = 2;
    if (has_height()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void upperlevelmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const upperlevelmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const upperlevelmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void upperlevelmsg::MergeFrom(const upperlevelmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void upperlevelmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void upperlevelmsg::CopyFrom(const upperlevelmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool upperlevelmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void upperlevelmsg::Swap(upperlevelmsg* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(height_, other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata upperlevelmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = upperlevelmsg_descriptor_;
  metadata.reflection = upperlevelmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int wallsfromslab::kGuidFieldNumber;
const int wallsfromslab::kHeightFieldNumber;
const int wallsfromslab::kMaterialFieldNumber;
const int wallsfromslab::kTypeFieldNumber;
const int wallsfromslab::kReferencelineFieldNumber;
const int wallsfromslab::kThicknessFieldNumber;
const int wallsfromslab::kLayerFieldNumber;
#endif  // !_MSC_VER

wallsfromslab::wallsfromslab()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wallsfromslab)
}

void wallsfromslab::InitAsDefaultInstance() {
}

wallsfromslab::wallsfromslab(const wallsfromslab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:wallsfromslab)
}

void wallsfromslab::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referenceline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thickness_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

wallsfromslab::~wallsfromslab() {
  // @@protoc_insertion_point(destructor:wallsfromslab)
  SharedDtor();
}

void wallsfromslab::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (referenceline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referenceline_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void wallsfromslab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wallsfromslab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return wallsfromslab_descriptor_;
}

const wallsfromslab& wallsfromslab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

wallsfromslab* wallsfromslab::default_instance_ = NULL;

wallsfromslab* wallsfromslab::New() const {
  return new wallsfromslab;
}

void wallsfromslab::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    height_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_referenceline()) {
      if (referenceline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        referenceline_->clear();
      }
    }
    thickness_ = 0;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool wallsfromslab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wallsfromslab)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_height;
        break;
      }

      // required double height = 2;
      case 2: {
        if (tag == 17) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_material;
        break;
      }

      // required string material = 3;
      case 3: {
        if (tag == 26) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // required string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_referenceline;
        break;
      }

      // required string referenceline = 5;
      case 5: {
        if (tag == 42) {
         parse_referenceline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referenceline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referenceline().data(), this->referenceline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referenceline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_thickness;
        break;
      }

      // required double thickness = 6;
      case 6: {
        if (tag == 49) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_layer;
        break;
      }

      // optional string layer = 7;
      case 7: {
        if (tag == 58) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wallsfromslab)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wallsfromslab)
  return false;
#undef DO_
}

void wallsfromslab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wallsfromslab)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required double height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->height(), output);
  }

  // required string material = 3;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->material(), output);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // required string referenceline = 5;
  if (has_referenceline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline().data(), this->referenceline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->referenceline(), output);
  }

  // required double thickness = 6;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->thickness(), output);
  }

  // optional string layer = 7;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wallsfromslab)
}

::google::protobuf::uint8* wallsfromslab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wallsfromslab)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required double height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->height(), target);
  }

  // required string material = 3;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->material(), target);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // required string referenceline = 5;
  if (has_referenceline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline().data(), this->referenceline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->referenceline(), target);
  }

  // required double thickness = 6;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->thickness(), target);
  }

  // optional string layer = 7;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wallsfromslab)
  return target;
}

int wallsfromslab::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required double height = 2;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required string material = 3;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required string referenceline = 5;
    if (has_referenceline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referenceline());
    }

    // required double thickness = 6;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

    // optional string layer = 7;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wallsfromslab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const wallsfromslab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const wallsfromslab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void wallsfromslab::MergeFrom(const wallsfromslab& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_referenceline()) {
      set_referenceline(from.referenceline());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void wallsfromslab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wallsfromslab::CopyFrom(const wallsfromslab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wallsfromslab::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void wallsfromslab::Swap(wallsfromslab* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(height_, other->height_);
    std::swap(material_, other->material_);
    std::swap(type_, other->type_);
    std::swap(referenceline_, other->referenceline_);
    std::swap(thickness_, other->thickness_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata wallsfromslab::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = wallsfromslab_descriptor_;
  metadata.reflection = wallsfromslab_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int columnsfromslab::kGuidFieldNumber;
const int columnsfromslab::kHeightFieldNumber;
const int columnsfromslab::kMaterialFieldNumber;
const int columnsfromslab::kDepthFieldNumber;
const int columnsfromslab::kWidthFieldNumber;
const int columnsfromslab::kCirclebasedFieldNumber;
const int columnsfromslab::kLayerFieldNumber;
#endif  // !_MSC_VER

columnsfromslab::columnsfromslab()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:columnsfromslab)
}

void columnsfromslab::InitAsDefaultInstance() {
}

columnsfromslab::columnsfromslab(const columnsfromslab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:columnsfromslab)
}

void columnsfromslab::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depth_ = 0;
  width_ = 0;
  circlebased_ = false;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

columnsfromslab::~columnsfromslab() {
  // @@protoc_insertion_point(destructor:columnsfromslab)
  SharedDtor();
}

void columnsfromslab::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void columnsfromslab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* columnsfromslab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return columnsfromslab_descriptor_;
}

const columnsfromslab& columnsfromslab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

columnsfromslab* columnsfromslab::default_instance_ = NULL;

columnsfromslab* columnsfromslab::New() const {
  return new columnsfromslab;
}

void columnsfromslab::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<columnsfromslab*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(depth_, width_);
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    height_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    circlebased_ = false;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool columnsfromslab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:columnsfromslab)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_height;
        break;
      }

      // required double height = 2;
      case 2: {
        if (tag == 17) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_material;
        break;
      }

      // required string material = 3;
      case 3: {
        if (tag == 26) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_depth;
        break;
      }

      // required double depth = 4;
      case 4: {
        if (tag == 33) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &depth_)));
          set_has_depth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_width;
        break;
      }

      // required double width = 5;
      case 5: {
        if (tag == 41) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_circlebased;
        break;
      }

      // required bool circlebased = 6;
      case 6: {
        if (tag == 48) {
         parse_circlebased:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &circlebased_)));
          set_has_circlebased();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_layer;
        break;
      }

      // optional string layer = 7;
      case 7: {
        if (tag == 58) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:columnsfromslab)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:columnsfromslab)
  return false;
#undef DO_
}

void columnsfromslab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:columnsfromslab)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required double height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->height(), output);
  }

  // required string material = 3;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->material(), output);
  }

  // required double depth = 4;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->depth(), output);
  }

  // required double width = 5;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->width(), output);
  }

  // required bool circlebased = 6;
  if (has_circlebased()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->circlebased(), output);
  }

  // optional string layer = 7;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:columnsfromslab)
}

::google::protobuf::uint8* columnsfromslab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:columnsfromslab)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required double height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->height(), target);
  }

  // required string material = 3;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->material(), target);
  }

  // required double depth = 4;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->depth(), target);
  }

  // required double width = 5;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->width(), target);
  }

  // required bool circlebased = 6;
  if (has_circlebased()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->circlebased(), target);
  }

  // optional string layer = 7;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:columnsfromslab)
  return target;
}

int columnsfromslab::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required double height = 2;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required string material = 3;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required double depth = 4;
    if (has_depth()) {
      total_size += 1 + 8;
    }

    // required double width = 5;
    if (has_width()) {
      total_size += 1 + 8;
    }

    // required bool circlebased = 6;
    if (has_circlebased()) {
      total_size += 1 + 1;
    }

    // optional string layer = 7;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void columnsfromslab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const columnsfromslab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const columnsfromslab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void columnsfromslab::MergeFrom(const columnsfromslab& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_depth()) {
      set_depth(from.depth());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_circlebased()) {
      set_circlebased(from.circlebased());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void columnsfromslab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void columnsfromslab::CopyFrom(const columnsfromslab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool columnsfromslab::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void columnsfromslab::Swap(columnsfromslab* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(height_, other->height_);
    std::swap(material_, other->material_);
    std::swap(depth_, other->depth_);
    std::swap(width_, other->width_);
    std::swap(circlebased_, other->circlebased_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata columnsfromslab::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = columnsfromslab_descriptor_;
  metadata.reflection = columnsfromslab_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int stairsmsg::kNameFieldNumber;
const int stairsmsg::kPosxFieldNumber;
const int stairsmsg::kPosyFieldNumber;
const int stairsmsg::kXratioFieldNumber;
const int stairsmsg::kYratioFieldNumber;
const int stairsmsg::kBottomFieldNumber;
const int stairsmsg::kAngleFieldNumber;
const int stairsmsg::kBottomindexFieldNumber;
const int stairsmsg::kUsexyfixsizeFieldNumber;
const int stairsmsg::kParamsFieldNumber;
const int stairsmsg::kLayerFieldNumber;
const int stairsmsg::kHeightFieldNumber;
const int stairsmsg::kUpperindexFieldNumber;
const int stairsmsg::kToplinkedFieldNumber;
#endif  // !_MSC_VER

stairsmsg::stairsmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:stairsmsg)
}

void stairsmsg::InitAsDefaultInstance() {
  params_ = const_cast< ::additionalparams*>(&::additionalparams::default_instance());
}

stairsmsg::stairsmsg(const stairsmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:stairsmsg)
}

void stairsmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posx_ = 0;
  posy_ = 0;
  xratio_ = 0;
  yratio_ = 0;
  bottom_ = 0;
  angle_ = 0;
  bottomindex_ = 0;
  usexyfixsize_ = false;
  params_ = NULL;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = 0;
  upperindex_ = 0;
  toplinked_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

stairsmsg::~stairsmsg() {
  // @@protoc_insertion_point(destructor:stairsmsg)
  SharedDtor();
}

void stairsmsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
    delete params_;
  }
}

void stairsmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* stairsmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return stairsmsg_descriptor_;
}

const stairsmsg& stairsmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

stairsmsg* stairsmsg::default_instance_ = NULL;

stairsmsg* stairsmsg::New() const {
  return new stairsmsg;
}

void stairsmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<stairsmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(posx_, angle_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    bottomindex_ = 0;
  }
  if (_has_bits_[8 / 32] & 16128) {
    ZR_(usexyfixsize_, toplinked_);
    ZR_(height_, upperindex_);
    if (has_params()) {
      if (params_ != NULL) params_->::additionalparams::Clear();
    }
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool stairsmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stairsmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_posx;
        break;
      }

      // required double posx = 2;
      case 2: {
        if (tag == 17) {
         parse_posx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_posy;
        break;
      }

      // required double posy = 3;
      case 3: {
        if (tag == 25) {
         parse_posy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_xratio;
        break;
      }

      // required double xratio = 4;
      case 4: {
        if (tag == 33) {
         parse_xratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xratio_)));
          set_has_xratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_yratio;
        break;
      }

      // required double yratio = 5;
      case 5: {
        if (tag == 41) {
         parse_yratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yratio_)));
          set_has_yratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_bottom;
        break;
      }

      // required double bottom = 6;
      case 6: {
        if (tag == 49) {
         parse_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_angle;
        break;
      }

      // required double angle = 7;
      case 7: {
        if (tag == 57) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_bottomindex;
        break;
      }

      // required int32 bottomindex = 8;
      case 8: {
        if (tag == 64) {
         parse_bottomindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomindex_)));
          set_has_bottomindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_usexyfixsize;
        break;
      }

      // required bool usexyfixsize = 9;
      case 9: {
        if (tag == 72) {
         parse_usexyfixsize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usexyfixsize_)));
          set_has_usexyfixsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_params;
        break;
      }

      // required .additionalparams params = 10;
      case 10: {
        if (tag == 82) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_layer;
        break;
      }

      // optional string layer = 11;
      case 11: {
        if (tag == 90) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_height;
        break;
      }

      // optional double height = 12;
      case 12: {
        if (tag == 97) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_upperindex;
        break;
      }

      // optional int32 upperindex = 13;
      case 13: {
        if (tag == 104) {
         parse_upperindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upperindex_)));
          set_has_upperindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_toplinked;
        break;
      }

      // optional bool toplinked = 14;
      case 14: {
        if (tag == 112) {
         parse_toplinked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toplinked_)));
          set_has_toplinked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stairsmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stairsmsg)
  return false;
#undef DO_
}

void stairsmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stairsmsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required double posx = 2;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->posx(), output);
  }

  // required double posy = 3;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->posy(), output);
  }

  // required double xratio = 4;
  if (has_xratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->xratio(), output);
  }

  // required double yratio = 5;
  if (has_yratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->yratio(), output);
  }

  // required double bottom = 6;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bottom(), output);
  }

  // required double angle = 7;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->angle(), output);
  }

  // required int32 bottomindex = 8;
  if (has_bottomindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->bottomindex(), output);
  }

  // required bool usexyfixsize = 9;
  if (has_usexyfixsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->usexyfixsize(), output);
  }

  // required .additionalparams params = 10;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->params(), output);
  }

  // optional string layer = 11;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->layer(), output);
  }

  // optional double height = 12;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->height(), output);
  }

  // optional int32 upperindex = 13;
  if (has_upperindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->upperindex(), output);
  }

  // optional bool toplinked = 14;
  if (has_toplinked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->toplinked(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stairsmsg)
}

::google::protobuf::uint8* stairsmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:stairsmsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required double posx = 2;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->posx(), target);
  }

  // required double posy = 3;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->posy(), target);
  }

  // required double xratio = 4;
  if (has_xratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->xratio(), target);
  }

  // required double yratio = 5;
  if (has_yratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->yratio(), target);
  }

  // required double bottom = 6;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bottom(), target);
  }

  // required double angle = 7;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->angle(), target);
  }

  // required int32 bottomindex = 8;
  if (has_bottomindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->bottomindex(), target);
  }

  // required bool usexyfixsize = 9;
  if (has_usexyfixsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->usexyfixsize(), target);
  }

  // required .additionalparams params = 10;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->params(), target);
  }

  // optional string layer = 11;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->layer(), target);
  }

  // optional double height = 12;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->height(), target);
  }

  // optional int32 upperindex = 13;
  if (has_upperindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->upperindex(), target);
  }

  // optional bool toplinked = 14;
  if (has_toplinked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->toplinked(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stairsmsg)
  return target;
}

int stairsmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required double posx = 2;
    if (has_posx()) {
      total_size += 1 + 8;
    }

    // required double posy = 3;
    if (has_posy()) {
      total_size += 1 + 8;
    }

    // required double xratio = 4;
    if (has_xratio()) {
      total_size += 1 + 8;
    }

    // required double yratio = 5;
    if (has_yratio()) {
      total_size += 1 + 8;
    }

    // required double bottom = 6;
    if (has_bottom()) {
      total_size += 1 + 8;
    }

    // required double angle = 7;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required int32 bottomindex = 8;
    if (has_bottomindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomindex());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required bool usexyfixsize = 9;
    if (has_usexyfixsize()) {
      total_size += 1 + 1;
    }

    // required .additionalparams params = 10;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params());
    }

    // optional string layer = 11;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

    // optional double height = 12;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // optional int32 upperindex = 13;
    if (has_upperindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upperindex());
    }

    // optional bool toplinked = 14;
    if (has_toplinked()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void stairsmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const stairsmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const stairsmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void stairsmsg::MergeFrom(const stairsmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
    if (from.has_xratio()) {
      set_xratio(from.xratio());
    }
    if (from.has_yratio()) {
      set_yratio(from.yratio());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_bottomindex()) {
      set_bottomindex(from.bottomindex());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_usexyfixsize()) {
      set_usexyfixsize(from.usexyfixsize());
    }
    if (from.has_params()) {
      mutable_params()->::additionalparams::MergeFrom(from.params());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_upperindex()) {
      set_upperindex(from.upperindex());
    }
    if (from.has_toplinked()) {
      set_toplinked(from.toplinked());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void stairsmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stairsmsg::CopyFrom(const stairsmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stairsmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void stairsmsg::Swap(stairsmsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(xratio_, other->xratio_);
    std::swap(yratio_, other->yratio_);
    std::swap(bottom_, other->bottom_);
    std::swap(angle_, other->angle_);
    std::swap(bottomindex_, other->bottomindex_);
    std::swap(usexyfixsize_, other->usexyfixsize_);
    std::swap(params_, other->params_);
    std::swap(layer_, other->layer_);
    std::swap(height_, other->height_);
    std::swap(upperindex_, other->upperindex_);
    std::swap(toplinked_, other->toplinked_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata stairsmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = stairsmsg_descriptor_;
  metadata.reflection = stairsmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int roofmsg::kHeightFieldNumber;
const int roofmsg::kMaterialFieldNumber;
const int roofmsg::kThicknessFieldNumber;
const int roofmsg::kTypeFieldNumber;
const int roofmsg::kBottomlevelFieldNumber;
const int roofmsg::kLayerFieldNumber;
#endif  // !_MSC_VER

roofmsg::roofmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roofmsg)
}

void roofmsg::InitAsDefaultInstance() {
}

roofmsg::roofmsg(const roofmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roofmsg)
}

void roofmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  height_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thickness_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bottomlevel_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

roofmsg::~roofmsg() {
  // @@protoc_insertion_point(destructor:roofmsg)
  SharedDtor();
}

void roofmsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void roofmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* roofmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return roofmsg_descriptor_;
}

const roofmsg& roofmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

roofmsg* roofmsg::default_instance_ = NULL;

roofmsg* roofmsg::New() const {
  return new roofmsg;
}

void roofmsg::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    height_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    thickness_ = 0;
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    bottomlevel_ = 0;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool roofmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roofmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double height = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_material;
        break;
      }

      // required string material = 2;
      case 2: {
        if (tag == 18) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_thickness;
        break;
      }

      // required double thickness = 3;
      case 3: {
        if (tag == 25) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // required string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bottomlevel;
        break;
      }

      // required int32 bottomlevel = 5;
      case 5: {
        if (tag == 40) {
         parse_bottomlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomlevel_)));
          set_has_bottomlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_layer;
        break;
      }

      // optional string layer = 6;
      case 6: {
        if (tag == 50) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roofmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roofmsg)
  return false;
#undef DO_
}

void roofmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roofmsg)
  // required double height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->height(), output);
  }

  // required string material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->material(), output);
  }

  // required double thickness = 3;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->thickness(), output);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // required int32 bottomlevel = 5;
  if (has_bottomlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bottomlevel(), output);
  }

  // optional string layer = 6;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roofmsg)
}

::google::protobuf::uint8* roofmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roofmsg)
  // required double height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->height(), target);
  }

  // required string material = 2;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->material(), target);
  }

  // required double thickness = 3;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->thickness(), target);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // required int32 bottomlevel = 5;
  if (has_bottomlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bottomlevel(), target);
  }

  // optional string layer = 6;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roofmsg)
  return target;
}

int roofmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double height = 1;
    if (has_height()) {
      total_size += 1 + 8;
    }

    // required string material = 2;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required double thickness = 3;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

    // required string type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required int32 bottomlevel = 5;
    if (has_bottomlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomlevel());
    }

    // optional string layer = 6;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void roofmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const roofmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const roofmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void roofmsg::MergeFrom(const roofmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_bottomlevel()) {
      set_bottomlevel(from.bottomlevel());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void roofmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void roofmsg::CopyFrom(const roofmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool roofmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void roofmsg::Swap(roofmsg* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(material_, other->material_);
    std::swap(thickness_, other->thickness_);
    std::swap(type_, other->type_);
    std::swap(bottomlevel_, other->bottomlevel_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata roofmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = roofmsg_descriptor_;
  metadata.reflection = roofmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int holemsg::kGuidFieldNumber;
const int holemsg::kPtsFieldNumber;
const int holemsg::kArcsFieldNumber;
const int holemsg::kTypeFieldNumber;
#endif  // !_MSC_VER

holemsg::holemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:holemsg)
}

void holemsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

holemsg::holemsg(const holemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:holemsg)
}

void holemsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pts_ = NULL;
  arcs_ = NULL;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

holemsg::~holemsg() {
  // @@protoc_insertion_point(destructor:holemsg)
  SharedDtor();
}

void holemsg::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete arcs_;
  }
}

void holemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* holemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return holemsg_descriptor_;
}

const holemsg& holemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

holemsg* holemsg::default_instance_ = NULL;

holemsg* holemsg::New() const {
  return new holemsg;
}

void holemsg::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool holemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:holemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pts;
        break;
      }

      // optional .pointsmessage pts = 2;
      case 2: {
        if (tag == 18) {
         parse_pts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_arcs;
        break;
      }

      // optional .polyarcsmessage arcs = 3;
      case 3: {
        if (tag == 26) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:holemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:holemsg)
  return false;
#undef DO_
}

void holemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:holemsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // optional .pointsmessage pts = 2;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pts(), output);
  }

  // optional .polyarcsmessage arcs = 3;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arcs(), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:holemsg)
}

::google::protobuf::uint8* holemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:holemsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // optional .pointsmessage pts = 2;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pts(), target);
  }

  // optional .polyarcsmessage arcs = 3;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arcs(), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:holemsg)
  return target;
}

int holemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional .pointsmessage pts = 2;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // optional .polyarcsmessage arcs = 3;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void holemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const holemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const holemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void holemsg::MergeFrom(const holemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void holemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void holemsg::CopyFrom(const holemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool holemsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void holemsg::Swap(holemsg* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(pts_, other->pts_);
    std::swap(arcs_, other->arcs_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata holemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = holemsg_descriptor_;
  metadata.reflection = holemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int mirrormsg::kGuidFieldNumber;
const int mirrormsg::kAxisFieldNumber;
const int mirrormsg::kCopyFieldNumber;
#endif  // !_MSC_VER

mirrormsg::mirrormsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mirrormsg)
}

void mirrormsg::InitAsDefaultInstance() {
}

mirrormsg::mirrormsg(const mirrormsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mirrormsg)
}

void mirrormsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  axis_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  copy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

mirrormsg::~mirrormsg() {
  // @@protoc_insertion_point(destructor:mirrormsg)
  SharedDtor();
}

void mirrormsg::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (axis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete axis_;
  }
  if (this != default_instance_) {
  }
}

void mirrormsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mirrormsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mirrormsg_descriptor_;
}

const mirrormsg& mirrormsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

mirrormsg* mirrormsg::default_instance_ = NULL;

mirrormsg* mirrormsg::New() const {
  return new mirrormsg;
}

void mirrormsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_axis()) {
      if (axis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        axis_->clear();
      }
    }
    copy_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool mirrormsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mirrormsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_axis;
        break;
      }

      // required string axis = 2;
      case 2: {
        if (tag == 18) {
         parse_axis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_axis()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->axis().data(), this->axis().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "axis");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_copy;
        break;
      }

      // required bool copy = 3;
      case 3: {
        if (tag == 24) {
         parse_copy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &copy_)));
          set_has_copy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mirrormsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mirrormsg)
  return false;
#undef DO_
}

void mirrormsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mirrormsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required string axis = 2;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->axis().data(), this->axis().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "axis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->axis(), output);
  }

  // required bool copy = 3;
  if (has_copy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->copy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mirrormsg)
}

::google::protobuf::uint8* mirrormsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mirrormsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required string axis = 2;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->axis().data(), this->axis().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "axis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->axis(), target);
  }

  // required bool copy = 3;
  if (has_copy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->copy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mirrormsg)
  return target;
}

int mirrormsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required string axis = 2;
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->axis());
    }

    // required bool copy = 3;
    if (has_copy()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mirrormsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const mirrormsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const mirrormsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mirrormsg::MergeFrom(const mirrormsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_axis()) {
      set_axis(from.axis());
    }
    if (from.has_copy()) {
      set_copy(from.copy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void mirrormsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mirrormsg::CopyFrom(const mirrormsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mirrormsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void mirrormsg::Swap(mirrormsg* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(axis_, other->axis_);
    std::swap(copy_, other->copy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata mirrormsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mirrormsg_descriptor_;
  metadata.reflection = mirrormsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int morphmsg::kRefxFieldNumber;
const int morphmsg::kRefyFieldNumber;
const int morphmsg::kRefzFieldNumber;
const int morphmsg::kPtsFieldNumber;
const int morphmsg::kEdgesFieldNumber;
const int morphmsg::kPolygonsFieldNumber;
const int morphmsg::kSizespolygonsFieldNumber;
const int morphmsg::kMaterialFieldNumber;
const int morphmsg::kLevelFieldNumber;
#endif  // !_MSC_VER

morphmsg::morphmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:morphmsg)
}

void morphmsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  edges_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  polygons_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  sizespolygons_ = const_cast< ::intlistmsg*>(&::intlistmsg::default_instance());
}

morphmsg::morphmsg(const morphmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:morphmsg)
}

void morphmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  refx_ = 0;
  refy_ = 0;
  refz_ = 0;
  pts_ = NULL;
  edges_ = NULL;
  polygons_ = NULL;
  sizespolygons_ = NULL;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

morphmsg::~morphmsg() {
  // @@protoc_insertion_point(destructor:morphmsg)
  SharedDtor();
}

void morphmsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete edges_;
    delete polygons_;
    delete sizespolygons_;
  }
}

void morphmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* morphmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return morphmsg_descriptor_;
}

const morphmsg& morphmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

morphmsg* morphmsg::default_instance_ = NULL;

morphmsg* morphmsg::New() const {
  return new morphmsg;
}

void morphmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<morphmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(refx_, refz_);
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_edges()) {
      if (edges_ != NULL) edges_->::pointsmessage::Clear();
    }
    if (has_polygons()) {
      if (polygons_ != NULL) polygons_->::pointsmessage::Clear();
    }
    if (has_sizespolygons()) {
      if (sizespolygons_ != NULL) sizespolygons_->::intlistmsg::Clear();
    }
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
  }
  level_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool morphmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:morphmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double refx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &refx_)));
          set_has_refx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_refy;
        break;
      }

      // required double refy = 2;
      case 2: {
        if (tag == 17) {
         parse_refy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &refy_)));
          set_has_refy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_refz;
        break;
      }

      // required double refz = 3;
      case 3: {
        if (tag == 25) {
         parse_refz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &refz_)));
          set_has_refz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pts;
        break;
      }

      // optional .pointsmessage pts = 4;
      case 4: {
        if (tag == 34) {
         parse_pts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_edges;
        break;
      }

      // optional .pointsmessage edges = 5;
      case 5: {
        if (tag == 42) {
         parse_edges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_edges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_polygons;
        break;
      }

      // optional .pointsmessage polygons = 6;
      case 6: {
        if (tag == 50) {
         parse_polygons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_polygons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sizespolygons;
        break;
      }

      // optional .intlistmsg sizespolygons = 7;
      case 7: {
        if (tag == 58) {
         parse_sizespolygons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sizespolygons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_material;
        break;
      }

      // required string material = 8;
      case 8: {
        if (tag == 66) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_level;
        break;
      }

      // required int32 level = 9;
      case 9: {
        if (tag == 72) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:morphmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:morphmsg)
  return false;
#undef DO_
}

void morphmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:morphmsg)
  // required double refx = 1;
  if (has_refx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->refx(), output);
  }

  // required double refy = 2;
  if (has_refy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->refy(), output);
  }

  // required double refz = 3;
  if (has_refz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->refz(), output);
  }

  // optional .pointsmessage pts = 4;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pts(), output);
  }

  // optional .pointsmessage edges = 5;
  if (has_edges()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->edges(), output);
  }

  // optional .pointsmessage polygons = 6;
  if (has_polygons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->polygons(), output);
  }

  // optional .intlistmsg sizespolygons = 7;
  if (has_sizespolygons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->sizespolygons(), output);
  }

  // required string material = 8;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->material(), output);
  }

  // required int32 level = 9;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:morphmsg)
}

::google::protobuf::uint8* morphmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:morphmsg)
  // required double refx = 1;
  if (has_refx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->refx(), target);
  }

  // required double refy = 2;
  if (has_refy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->refy(), target);
  }

  // required double refz = 3;
  if (has_refz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->refz(), target);
  }

  // optional .pointsmessage pts = 4;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pts(), target);
  }

  // optional .pointsmessage edges = 5;
  if (has_edges()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->edges(), target);
  }

  // optional .pointsmessage polygons = 6;
  if (has_polygons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->polygons(), target);
  }

  // optional .intlistmsg sizespolygons = 7;
  if (has_sizespolygons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->sizespolygons(), target);
  }

  // required string material = 8;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->material(), target);
  }

  // required int32 level = 9;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:morphmsg)
  return target;
}

int morphmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double refx = 1;
    if (has_refx()) {
      total_size += 1 + 8;
    }

    // required double refy = 2;
    if (has_refy()) {
      total_size += 1 + 8;
    }

    // required double refz = 3;
    if (has_refz()) {
      total_size += 1 + 8;
    }

    // optional .pointsmessage pts = 4;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // optional .pointsmessage edges = 5;
    if (has_edges()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->edges());
    }

    // optional .pointsmessage polygons = 6;
    if (has_polygons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->polygons());
    }

    // optional .intlistmsg sizespolygons = 7;
    if (has_sizespolygons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sizespolygons());
    }

    // required string material = 8;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 level = 9;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void morphmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const morphmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const morphmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void morphmsg::MergeFrom(const morphmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refx()) {
      set_refx(from.refx());
    }
    if (from.has_refy()) {
      set_refy(from.refy());
    }
    if (from.has_refz()) {
      set_refz(from.refz());
    }
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_edges()) {
      mutable_edges()->::pointsmessage::MergeFrom(from.edges());
    }
    if (from.has_polygons()) {
      mutable_polygons()->::pointsmessage::MergeFrom(from.polygons());
    }
    if (from.has_sizespolygons()) {
      mutable_sizespolygons()->::intlistmsg::MergeFrom(from.sizespolygons());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void morphmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void morphmsg::CopyFrom(const morphmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool morphmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000187) != 0x00000187) return false;

  return true;
}

void morphmsg::Swap(morphmsg* other) {
  if (other != this) {
    std::swap(refx_, other->refx_);
    std::swap(refy_, other->refy_);
    std::swap(refz_, other->refz_);
    std::swap(pts_, other->pts_);
    std::swap(edges_, other->edges_);
    std::swap(polygons_, other->polygons_);
    std::swap(sizespolygons_, other->sizespolygons_);
    std::swap(material_, other->material_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata morphmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = morphmsg_descriptor_;
  metadata.reflection = morphmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int boxmsg::kX1FieldNumber;
const int boxmsg::kY1FieldNumber;
const int boxmsg::kZ1FieldNumber;
const int boxmsg::kX2FieldNumber;
const int boxmsg::kY2FieldNumber;
const int boxmsg::kZ2FieldNumber;
const int boxmsg::kBottomlevelFieldNumber;
#endif  // !_MSC_VER

boxmsg::boxmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:boxmsg)
}

void boxmsg::InitAsDefaultInstance() {
}

boxmsg::boxmsg(const boxmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:boxmsg)
}

void boxmsg::SharedCtor() {
  _cached_size_ = 0;
  x1_ = 0;
  y1_ = 0;
  z1_ = 0;
  x2_ = 0;
  y2_ = 0;
  z2_ = 0;
  bottomlevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

boxmsg::~boxmsg() {
  // @@protoc_insertion_point(destructor:boxmsg)
  SharedDtor();
}

void boxmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void boxmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* boxmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return boxmsg_descriptor_;
}

const boxmsg& boxmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

boxmsg* boxmsg::default_instance_ = NULL;

boxmsg* boxmsg::New() const {
  return new boxmsg;
}

void boxmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<boxmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(x1_, bottomlevel_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool boxmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:boxmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x1 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x1_)));
          set_has_x1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y1;
        break;
      }

      // required double y1 = 2;
      case 2: {
        if (tag == 17) {
         parse_y1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y1_)));
          set_has_y1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z1;
        break;
      }

      // required double z1 = 3;
      case 3: {
        if (tag == 25) {
         parse_z1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z1_)));
          set_has_z1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_x2;
        break;
      }

      // required double x2 = 4;
      case 4: {
        if (tag == 33) {
         parse_x2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x2_)));
          set_has_x2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_y2;
        break;
      }

      // required double y2 = 5;
      case 5: {
        if (tag == 41) {
         parse_y2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y2_)));
          set_has_y2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_z2;
        break;
      }

      // required double z2 = 6;
      case 6: {
        if (tag == 49) {
         parse_z2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z2_)));
          set_has_z2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_bottomlevel;
        break;
      }

      // required int32 bottomlevel = 7;
      case 7: {
        if (tag == 56) {
         parse_bottomlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomlevel_)));
          set_has_bottomlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:boxmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:boxmsg)
  return false;
#undef DO_
}

void boxmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:boxmsg)
  // required double x1 = 1;
  if (has_x1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x1(), output);
  }

  // required double y1 = 2;
  if (has_y1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y1(), output);
  }

  // required double z1 = 3;
  if (has_z1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z1(), output);
  }

  // required double x2 = 4;
  if (has_x2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->x2(), output);
  }

  // required double y2 = 5;
  if (has_y2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->y2(), output);
  }

  // required double z2 = 6;
  if (has_z2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->z2(), output);
  }

  // required int32 bottomlevel = 7;
  if (has_bottomlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bottomlevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:boxmsg)
}

::google::protobuf::uint8* boxmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:boxmsg)
  // required double x1 = 1;
  if (has_x1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x1(), target);
  }

  // required double y1 = 2;
  if (has_y1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y1(), target);
  }

  // required double z1 = 3;
  if (has_z1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z1(), target);
  }

  // required double x2 = 4;
  if (has_x2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->x2(), target);
  }

  // required double y2 = 5;
  if (has_y2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->y2(), target);
  }

  // required double z2 = 6;
  if (has_z2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->z2(), target);
  }

  // required int32 bottomlevel = 7;
  if (has_bottomlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bottomlevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:boxmsg)
  return target;
}

int boxmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x1 = 1;
    if (has_x1()) {
      total_size += 1 + 8;
    }

    // required double y1 = 2;
    if (has_y1()) {
      total_size += 1 + 8;
    }

    // required double z1 = 3;
    if (has_z1()) {
      total_size += 1 + 8;
    }

    // required double x2 = 4;
    if (has_x2()) {
      total_size += 1 + 8;
    }

    // required double y2 = 5;
    if (has_y2()) {
      total_size += 1 + 8;
    }

    // required double z2 = 6;
    if (has_z2()) {
      total_size += 1 + 8;
    }

    // required int32 bottomlevel = 7;
    if (has_bottomlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomlevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void boxmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const boxmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const boxmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void boxmsg::MergeFrom(const boxmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x1()) {
      set_x1(from.x1());
    }
    if (from.has_y1()) {
      set_y1(from.y1());
    }
    if (from.has_z1()) {
      set_z1(from.z1());
    }
    if (from.has_x2()) {
      set_x2(from.x2());
    }
    if (from.has_y2()) {
      set_y2(from.y2());
    }
    if (from.has_z2()) {
      set_z2(from.z2());
    }
    if (from.has_bottomlevel()) {
      set_bottomlevel(from.bottomlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void boxmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void boxmsg::CopyFrom(const boxmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool boxmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void boxmsg::Swap(boxmsg* other) {
  if (other != this) {
    std::swap(x1_, other->x1_);
    std::swap(y1_, other->y1_);
    std::swap(z1_, other->z1_);
    std::swap(x2_, other->x2_);
    std::swap(y2_, other->y2_);
    std::swap(z2_, other->z2_);
    std::swap(bottomlevel_, other->bottomlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata boxmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = boxmsg_descriptor_;
  metadata.reflection = boxmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int wallinfo::kThicknessFieldNumber;
const int wallinfo::kLengthFieldNumber;
const int wallinfo::kHeightFieldNumber;
const int wallinfo::kVolumeFieldNumber;
#endif  // !_MSC_VER

wallinfo::wallinfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wallinfo)
}

void wallinfo::InitAsDefaultInstance() {
}

wallinfo::wallinfo(const wallinfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:wallinfo)
}

void wallinfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

wallinfo::~wallinfo() {
  // @@protoc_insertion_point(destructor:wallinfo)
  SharedDtor();
}

void wallinfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void wallinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wallinfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return wallinfo_descriptor_;
}

const wallinfo& wallinfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

wallinfo* wallinfo::default_instance_ = NULL;

wallinfo* wallinfo::New() const {
  return new wallinfo;
}

void wallinfo::Clear() {
  thickness_.Clear();
  length_.Clear();
  height_.Clear();
  volume_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool wallinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wallinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double thickness = 1;
      case 1: {
        if (tag == 9) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_thickness())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_thickness())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_thickness;
        if (input->ExpectTag(17)) goto parse_length;
        break;
      }

      // repeated double length = 2;
      case 2: {
        if (tag == 17) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_length())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_length())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_length;
        if (input->ExpectTag(25)) goto parse_height;
        break;
      }

      // repeated double height = 3;
      case 3: {
        if (tag == 25) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_height())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_height())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_height;
        if (input->ExpectTag(33)) goto parse_volume;
        break;
      }

      // repeated double volume = 4;
      case 4: {
        if (tag == 33) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33, input, this->mutable_volume())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_volume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_volume;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wallinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wallinfo)
  return false;
#undef DO_
}

void wallinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wallinfo)
  // repeated double thickness = 1;
  for (int i = 0; i < this->thickness_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->thickness(i), output);
  }

  // repeated double length = 2;
  for (int i = 0; i < this->length_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->length(i), output);
  }

  // repeated double height = 3;
  for (int i = 0; i < this->height_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->height(i), output);
  }

  // repeated double volume = 4;
  for (int i = 0; i < this->volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->volume(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wallinfo)
}

::google::protobuf::uint8* wallinfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wallinfo)
  // repeated double thickness = 1;
  for (int i = 0; i < this->thickness_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->thickness(i), target);
  }

  // repeated double length = 2;
  for (int i = 0; i < this->length_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->length(i), target);
  }

  // repeated double height = 3;
  for (int i = 0; i < this->height_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->height(i), target);
  }

  // repeated double volume = 4;
  for (int i = 0; i < this->volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->volume(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wallinfo)
  return target;
}

int wallinfo::ByteSize() const {
  int total_size = 0;

  // repeated double thickness = 1;
  {
    int data_size = 0;
    data_size = 8 * this->thickness_size();
    total_size += 1 * this->thickness_size() + data_size;
  }

  // repeated double length = 2;
  {
    int data_size = 0;
    data_size = 8 * this->length_size();
    total_size += 1 * this->length_size() + data_size;
  }

  // repeated double height = 3;
  {
    int data_size = 0;
    data_size = 8 * this->height_size();
    total_size += 1 * this->height_size() + data_size;
  }

  // repeated double volume = 4;
  {
    int data_size = 0;
    data_size = 8 * this->volume_size();
    total_size += 1 * this->volume_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wallinfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const wallinfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const wallinfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void wallinfo::MergeFrom(const wallinfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  thickness_.MergeFrom(from.thickness_);
  length_.MergeFrom(from.length_);
  height_.MergeFrom(from.height_);
  volume_.MergeFrom(from.volume_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void wallinfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wallinfo::CopyFrom(const wallinfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wallinfo::IsInitialized() const {

  return true;
}

void wallinfo::Swap(wallinfo* other) {
  if (other != this) {
    thickness_.Swap(&other->thickness_);
    length_.Swap(&other->length_);
    height_.Swap(&other->height_);
    volume_.Swap(&other->volume_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata wallinfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = wallinfo_descriptor_;
  metadata.reflection = wallinfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int wallrepeated::kP0XFieldNumber;
const int wallrepeated::kP0YFieldNumber;
const int wallrepeated::kP1XFieldNumber;
const int wallrepeated::kP1YFieldNumber;
const int wallrepeated::kBottomlevelFieldNumber;
const int wallrepeated::kThicknessFieldNumber;
const int wallrepeated::kAngleFieldNumber;
const int wallrepeated::kToplevelFieldNumber;
const int wallrepeated::kMaterialFieldNumber;
const int wallrepeated::kTypeFieldNumber;
const int wallrepeated::kReferencelineFieldNumber;
const int wallrepeated::kAlphaangleFieldNumber;
const int wallrepeated::kBetaangleFieldNumber;
const int wallrepeated::kTypeprofileFieldNumber;
const int wallrepeated::kGuidFieldNumber;
#endif  // !_MSC_VER

wallrepeated::wallrepeated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wallrepeated)
}

void wallrepeated::InitAsDefaultInstance() {
}

wallrepeated::wallrepeated(const wallrepeated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:wallrepeated)
}

void wallrepeated::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

wallrepeated::~wallrepeated() {
  // @@protoc_insertion_point(destructor:wallrepeated)
  SharedDtor();
}

void wallrepeated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void wallrepeated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wallrepeated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return wallrepeated_descriptor_;
}

const wallrepeated& wallrepeated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

wallrepeated* wallrepeated::default_instance_ = NULL;

wallrepeated* wallrepeated::New() const {
  return new wallrepeated;
}

void wallrepeated::Clear() {
  p0x_.Clear();
  p0y_.Clear();
  p1x_.Clear();
  p1y_.Clear();
  bottomlevel_.Clear();
  thickness_.Clear();
  angle_.Clear();
  toplevel_.Clear();
  material_.Clear();
  type_.Clear();
  referenceline_.Clear();
  alphaangle_.Clear();
  betaangle_.Clear();
  typeprofile_.Clear();
  guid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool wallrepeated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wallrepeated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double p0x = 1;
      case 1: {
        if (tag == 9) {
         parse_p0x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_p0x())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_p0x())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_p0x;
        if (input->ExpectTag(17)) goto parse_p0y;
        break;
      }

      // repeated double p0y = 2;
      case 2: {
        if (tag == 17) {
         parse_p0y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_p0y())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_p0y())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_p0y;
        if (input->ExpectTag(25)) goto parse_p1x;
        break;
      }

      // repeated double p1x = 3;
      case 3: {
        if (tag == 25) {
         parse_p1x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_p1x())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_p1x())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_p1x;
        if (input->ExpectTag(33)) goto parse_p1y;
        break;
      }

      // repeated double p1y = 4;
      case 4: {
        if (tag == 33) {
         parse_p1y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33, input, this->mutable_p1y())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_p1y())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_p1y;
        if (input->ExpectTag(42)) goto parse_bottomlevel;
        break;
      }

      // repeated .storyinfo bottomlevel = 5;
      case 5: {
        if (tag == 42) {
         parse_bottomlevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bottomlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bottomlevel;
        if (input->ExpectTag(49)) goto parse_thickness;
        break;
      }

      // repeated double thickness = 6;
      case 6: {
        if (tag == 49) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_thickness())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_thickness())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_thickness;
        if (input->ExpectTag(57)) goto parse_angle;
        break;
      }

      // repeated double angle = 7;
      case 7: {
        if (tag == 57) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57, input, this->mutable_angle())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_angle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_angle;
        if (input->ExpectTag(66)) goto parse_toplevel;
        break;
      }

      // repeated .storyinfo toplevel = 8;
      case 8: {
        if (tag == 66) {
         parse_toplevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_toplevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_toplevel;
        if (input->ExpectTag(74)) goto parse_material;
        break;
      }

      // repeated string material = 9;
      case 9: {
        if (tag == 74) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material(this->material_size() - 1).data(),
            this->material(this->material_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_material;
        if (input->ExpectTag(82)) goto parse_type;
        break;
      }

      // repeated string type = 10;
      case 10: {
        if (tag == 82) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type(this->type_size() - 1).data(),
            this->type(this->type_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_type;
        if (input->ExpectTag(90)) goto parse_referenceline;
        break;
      }

      // repeated string referenceline = 11;
      case 11: {
        if (tag == 90) {
         parse_referenceline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_referenceline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referenceline(this->referenceline_size() - 1).data(),
            this->referenceline(this->referenceline_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referenceline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_referenceline;
        if (input->ExpectTag(97)) goto parse_alphaangle;
        break;
      }

      // repeated double alphaangle = 12;
      case 12: {
        if (tag == 97) {
         parse_alphaangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 97, input, this->mutable_alphaangle())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_alphaangle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_alphaangle;
        if (input->ExpectTag(105)) goto parse_betaangle;
        break;
      }

      // repeated double betaangle = 13;
      case 13: {
        if (tag == 105) {
         parse_betaangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 105, input, this->mutable_betaangle())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_betaangle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_betaangle;
        if (input->ExpectTag(114)) goto parse_typeprofile;
        break;
      }

      // repeated string typeprofile = 14;
      case 14: {
        if (tag == 114) {
         parse_typeprofile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_typeprofile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->typeprofile(this->typeprofile_size() - 1).data(),
            this->typeprofile(this->typeprofile_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "typeprofile");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_typeprofile;
        if (input->ExpectTag(122)) goto parse_guid;
        break;
      }

      // repeated string guid = 15;
      case 15: {
        if (tag == 122) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_guid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wallrepeated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wallrepeated)
  return false;
#undef DO_
}

void wallrepeated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wallrepeated)
  // repeated double p0x = 1;
  for (int i = 0; i < this->p0x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->p0x(i), output);
  }

  // repeated double p0y = 2;
  for (int i = 0; i < this->p0y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->p0y(i), output);
  }

  // repeated double p1x = 3;
  for (int i = 0; i < this->p1x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->p1x(i), output);
  }

  // repeated double p1y = 4;
  for (int i = 0; i < this->p1y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->p1y(i), output);
  }

  // repeated .storyinfo bottomlevel = 5;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bottomlevel(i), output);
  }

  // repeated double thickness = 6;
  for (int i = 0; i < this->thickness_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->thickness(i), output);
  }

  // repeated double angle = 7;
  for (int i = 0; i < this->angle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->angle(i), output);
  }

  // repeated .storyinfo toplevel = 8;
  for (int i = 0; i < this->toplevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->toplevel(i), output);
  }

  // repeated string material = 9;
  for (int i = 0; i < this->material_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->material(i).data(), this->material(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "material");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->material(i), output);
  }

  // repeated string type = 10;
  for (int i = 0; i < this->type_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->type(i).data(), this->type(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "type");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->type(i), output);
  }

  // repeated string referenceline = 11;
  for (int i = 0; i < this->referenceline_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->referenceline(i).data(), this->referenceline(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "referenceline");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->referenceline(i), output);
  }

  // repeated double alphaangle = 12;
  for (int i = 0; i < this->alphaangle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      12, this->alphaangle(i), output);
  }

  // repeated double betaangle = 13;
  for (int i = 0; i < this->betaangle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      13, this->betaangle(i), output);
  }

  // repeated string typeprofile = 14;
  for (int i = 0; i < this->typeprofile_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->typeprofile(i).data(), this->typeprofile(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "typeprofile");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->typeprofile(i), output);
  }

  // repeated string guid = 15;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->guid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wallrepeated)
}

::google::protobuf::uint8* wallrepeated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wallrepeated)
  // repeated double p0x = 1;
  for (int i = 0; i < this->p0x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->p0x(i), target);
  }

  // repeated double p0y = 2;
  for (int i = 0; i < this->p0y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->p0y(i), target);
  }

  // repeated double p1x = 3;
  for (int i = 0; i < this->p1x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->p1x(i), target);
  }

  // repeated double p1y = 4;
  for (int i = 0; i < this->p1y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->p1y(i), target);
  }

  // repeated .storyinfo bottomlevel = 5;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bottomlevel(i), target);
  }

  // repeated double thickness = 6;
  for (int i = 0; i < this->thickness_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->thickness(i), target);
  }

  // repeated double angle = 7;
  for (int i = 0; i < this->angle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(7, this->angle(i), target);
  }

  // repeated .storyinfo toplevel = 8;
  for (int i = 0; i < this->toplevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->toplevel(i), target);
  }

  // repeated string material = 9;
  for (int i = 0; i < this->material_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material(i).data(), this->material(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->material(i), target);
  }

  // repeated string type = 10;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type(i).data(), this->type(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->type(i), target);
  }

  // repeated string referenceline = 11;
  for (int i = 0; i < this->referenceline_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referenceline(i).data(), this->referenceline(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referenceline");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->referenceline(i), target);
  }

  // repeated double alphaangle = 12;
  for (int i = 0; i < this->alphaangle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(12, this->alphaangle(i), target);
  }

  // repeated double betaangle = 13;
  for (int i = 0; i < this->betaangle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(13, this->betaangle(i), target);
  }

  // repeated string typeprofile = 14;
  for (int i = 0; i < this->typeprofile_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typeprofile(i).data(), this->typeprofile(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "typeprofile");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->typeprofile(i), target);
  }

  // repeated string guid = 15;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->guid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wallrepeated)
  return target;
}

int wallrepeated::ByteSize() const {
  int total_size = 0;

  // repeated double p0x = 1;
  {
    int data_size = 0;
    data_size = 8 * this->p0x_size();
    total_size += 1 * this->p0x_size() + data_size;
  }

  // repeated double p0y = 2;
  {
    int data_size = 0;
    data_size = 8 * this->p0y_size();
    total_size += 1 * this->p0y_size() + data_size;
  }

  // repeated double p1x = 3;
  {
    int data_size = 0;
    data_size = 8 * this->p1x_size();
    total_size += 1 * this->p1x_size() + data_size;
  }

  // repeated double p1y = 4;
  {
    int data_size = 0;
    data_size = 8 * this->p1y_size();
    total_size += 1 * this->p1y_size() + data_size;
  }

  // repeated .storyinfo bottomlevel = 5;
  total_size += 1 * this->bottomlevel_size();
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bottomlevel(i));
  }

  // repeated double thickness = 6;
  {
    int data_size = 0;
    data_size = 8 * this->thickness_size();
    total_size += 1 * this->thickness_size() + data_size;
  }

  // repeated double angle = 7;
  {
    int data_size = 0;
    data_size = 8 * this->angle_size();
    total_size += 1 * this->angle_size() + data_size;
  }

  // repeated .storyinfo toplevel = 8;
  total_size += 1 * this->toplevel_size();
  for (int i = 0; i < this->toplevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toplevel(i));
  }

  // repeated string material = 9;
  total_size += 1 * this->material_size();
  for (int i = 0; i < this->material_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->material(i));
  }

  // repeated string type = 10;
  total_size += 1 * this->type_size();
  for (int i = 0; i < this->type_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type(i));
  }

  // repeated string referenceline = 11;
  total_size += 1 * this->referenceline_size();
  for (int i = 0; i < this->referenceline_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->referenceline(i));
  }

  // repeated double alphaangle = 12;
  {
    int data_size = 0;
    data_size = 8 * this->alphaangle_size();
    total_size += 1 * this->alphaangle_size() + data_size;
  }

  // repeated double betaangle = 13;
  {
    int data_size = 0;
    data_size = 8 * this->betaangle_size();
    total_size += 1 * this->betaangle_size() + data_size;
  }

  // repeated string typeprofile = 14;
  total_size += 1 * this->typeprofile_size();
  for (int i = 0; i < this->typeprofile_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->typeprofile(i));
  }

  // repeated string guid = 15;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wallrepeated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const wallrepeated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const wallrepeated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void wallrepeated::MergeFrom(const wallrepeated& from) {
  GOOGLE_CHECK_NE(&from, this);
  p0x_.MergeFrom(from.p0x_);
  p0y_.MergeFrom(from.p0y_);
  p1x_.MergeFrom(from.p1x_);
  p1y_.MergeFrom(from.p1y_);
  bottomlevel_.MergeFrom(from.bottomlevel_);
  thickness_.MergeFrom(from.thickness_);
  angle_.MergeFrom(from.angle_);
  toplevel_.MergeFrom(from.toplevel_);
  material_.MergeFrom(from.material_);
  type_.MergeFrom(from.type_);
  referenceline_.MergeFrom(from.referenceline_);
  alphaangle_.MergeFrom(from.alphaangle_);
  betaangle_.MergeFrom(from.betaangle_);
  typeprofile_.MergeFrom(from.typeprofile_);
  guid_.MergeFrom(from.guid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void wallrepeated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wallrepeated::CopyFrom(const wallrepeated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wallrepeated::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->bottomlevel())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->toplevel())) return false;
  return true;
}

void wallrepeated::Swap(wallrepeated* other) {
  if (other != this) {
    p0x_.Swap(&other->p0x_);
    p0y_.Swap(&other->p0y_);
    p1x_.Swap(&other->p1x_);
    p1y_.Swap(&other->p1y_);
    bottomlevel_.Swap(&other->bottomlevel_);
    thickness_.Swap(&other->thickness_);
    angle_.Swap(&other->angle_);
    toplevel_.Swap(&other->toplevel_);
    material_.Swap(&other->material_);
    type_.Swap(&other->type_);
    referenceline_.Swap(&other->referenceline_);
    alphaangle_.Swap(&other->alphaangle_);
    betaangle_.Swap(&other->betaangle_);
    typeprofile_.Swap(&other->typeprofile_);
    guid_.Swap(&other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata wallrepeated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = wallrepeated_descriptor_;
  metadata.reflection = wallrepeated_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int slabrepeated::kPointsFieldNumber;
const int slabrepeated::kBottomlevelFieldNumber;
const int slabrepeated::kThicknessFieldNumber;
const int slabrepeated::kMaterialFieldNumber;
const int slabrepeated::kTypeFieldNumber;
const int slabrepeated::kGuidFieldNumber;
const int slabrepeated::kSubpolygonsFieldNumber;
#endif  // !_MSC_VER

slabrepeated::slabrepeated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:slabrepeated)
}

void slabrepeated::InitAsDefaultInstance() {
}

slabrepeated::slabrepeated(const slabrepeated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:slabrepeated)
}

void slabrepeated::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

slabrepeated::~slabrepeated() {
  // @@protoc_insertion_point(destructor:slabrepeated)
  SharedDtor();
}

void slabrepeated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void slabrepeated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* slabrepeated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return slabrepeated_descriptor_;
}

const slabrepeated& slabrepeated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

slabrepeated* slabrepeated::default_instance_ = NULL;

slabrepeated* slabrepeated::New() const {
  return new slabrepeated;
}

void slabrepeated::Clear() {
  points_.Clear();
  bottomlevel_.Clear();
  thickness_.Clear();
  material_.Clear();
  type_.Clear();
  guid_.Clear();
  subpolygons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool slabrepeated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:slabrepeated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pointsmessage points = 1;
      case 1: {
        if (tag == 10) {
         parse_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_points;
        if (input->ExpectTag(18)) goto parse_bottomlevel;
        break;
      }

      // repeated .storyinfo bottomlevel = 2;
      case 2: {
        if (tag == 18) {
         parse_bottomlevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bottomlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bottomlevel;
        if (input->ExpectTag(25)) goto parse_thickness;
        break;
      }

      // repeated double thickness = 3;
      case 3: {
        if (tag == 25) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_thickness())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_thickness())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_thickness;
        if (input->ExpectTag(34)) goto parse_material;
        break;
      }

      // repeated string material = 4;
      case 4: {
        if (tag == 34) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material(this->material_size() - 1).data(),
            this->material(this->material_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_material;
        if (input->ExpectTag(42)) goto parse_type;
        break;
      }

      // repeated string type = 5;
      case 5: {
        if (tag == 42) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type(this->type_size() - 1).data(),
            this->type(this->type_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_type;
        if (input->ExpectTag(50)) goto parse_guid;
        break;
      }

      // repeated string guid = 6;
      case 6: {
        if (tag == 50) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_guid;
        if (input->ExpectTag(58)) goto parse_subpolygons;
        break;
      }

      // repeated .intlistmsg subpolygons = 7;
      case 7: {
        if (tag == 58) {
         parse_subpolygons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subpolygons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_subpolygons;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:slabrepeated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:slabrepeated)
  return false;
#undef DO_
}

void slabrepeated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:slabrepeated)
  // repeated .pointsmessage points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  // repeated .storyinfo bottomlevel = 2;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bottomlevel(i), output);
  }

  // repeated double thickness = 3;
  for (int i = 0; i < this->thickness_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->thickness(i), output);
  }

  // repeated string material = 4;
  for (int i = 0; i < this->material_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->material(i).data(), this->material(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "material");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->material(i), output);
  }

  // repeated string type = 5;
  for (int i = 0; i < this->type_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->type(i).data(), this->type(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "type");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->type(i), output);
  }

  // repeated string guid = 6;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->guid(i), output);
  }

  // repeated .intlistmsg subpolygons = 7;
  for (int i = 0; i < this->subpolygons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->subpolygons(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:slabrepeated)
}

::google::protobuf::uint8* slabrepeated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:slabrepeated)
  // repeated .pointsmessage points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->points(i), target);
  }

  // repeated .storyinfo bottomlevel = 2;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bottomlevel(i), target);
  }

  // repeated double thickness = 3;
  for (int i = 0; i < this->thickness_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->thickness(i), target);
  }

  // repeated string material = 4;
  for (int i = 0; i < this->material_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material(i).data(), this->material(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->material(i), target);
  }

  // repeated string type = 5;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type(i).data(), this->type(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->type(i), target);
  }

  // repeated string guid = 6;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->guid(i), target);
  }

  // repeated .intlistmsg subpolygons = 7;
  for (int i = 0; i < this->subpolygons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->subpolygons(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:slabrepeated)
  return target;
}

int slabrepeated::ByteSize() const {
  int total_size = 0;

  // repeated .pointsmessage points = 1;
  total_size += 1 * this->points_size();
  for (int i = 0; i < this->points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points(i));
  }

  // repeated .storyinfo bottomlevel = 2;
  total_size += 1 * this->bottomlevel_size();
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bottomlevel(i));
  }

  // repeated double thickness = 3;
  {
    int data_size = 0;
    data_size = 8 * this->thickness_size();
    total_size += 1 * this->thickness_size() + data_size;
  }

  // repeated string material = 4;
  total_size += 1 * this->material_size();
  for (int i = 0; i < this->material_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->material(i));
  }

  // repeated string type = 5;
  total_size += 1 * this->type_size();
  for (int i = 0; i < this->type_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type(i));
  }

  // repeated string guid = 6;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  // repeated .intlistmsg subpolygons = 7;
  total_size += 1 * this->subpolygons_size();
  for (int i = 0; i < this->subpolygons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->subpolygons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void slabrepeated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const slabrepeated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const slabrepeated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void slabrepeated::MergeFrom(const slabrepeated& from) {
  GOOGLE_CHECK_NE(&from, this);
  points_.MergeFrom(from.points_);
  bottomlevel_.MergeFrom(from.bottomlevel_);
  thickness_.MergeFrom(from.thickness_);
  material_.MergeFrom(from.material_);
  type_.MergeFrom(from.type_);
  guid_.MergeFrom(from.guid_);
  subpolygons_.MergeFrom(from.subpolygons_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void slabrepeated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void slabrepeated::CopyFrom(const slabrepeated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool slabrepeated::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->bottomlevel())) return false;
  return true;
}

void slabrepeated::Swap(slabrepeated* other) {
  if (other != this) {
    points_.Swap(&other->points_);
    bottomlevel_.Swap(&other->bottomlevel_);
    thickness_.Swap(&other->thickness_);
    material_.Swap(&other->material_);
    type_.Swap(&other->type_);
    guid_.Swap(&other->guid_);
    subpolygons_.Swap(&other->subpolygons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata slabrepeated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = slabrepeated_descriptor_;
  metadata.reflection = slabrepeated_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int columnrepeated::kPxFieldNumber;
const int columnrepeated::kPyFieldNumber;
const int columnrepeated::kBottomlevelFieldNumber;
const int columnrepeated::kToplevelFieldNumber;
const int columnrepeated::kCircularFieldNumber;
const int columnrepeated::kAngleFieldNumber;
const int columnrepeated::kDepthFieldNumber;
const int columnrepeated::kWidthFieldNumber;
const int columnrepeated::kSlantangleFieldNumber;
const int columnrepeated::kSlantdirectionFieldNumber;
const int columnrepeated::kGuidFieldNumber;
#endif  // !_MSC_VER

columnrepeated::columnrepeated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:columnrepeated)
}

void columnrepeated::InitAsDefaultInstance() {
}

columnrepeated::columnrepeated(const columnrepeated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:columnrepeated)
}

void columnrepeated::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

columnrepeated::~columnrepeated() {
  // @@protoc_insertion_point(destructor:columnrepeated)
  SharedDtor();
}

void columnrepeated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void columnrepeated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* columnrepeated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return columnrepeated_descriptor_;
}

const columnrepeated& columnrepeated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

columnrepeated* columnrepeated::default_instance_ = NULL;

columnrepeated* columnrepeated::New() const {
  return new columnrepeated;
}

void columnrepeated::Clear() {
  px_.Clear();
  py_.Clear();
  bottomlevel_.Clear();
  toplevel_.Clear();
  circular_.Clear();
  angle_.Clear();
  depth_.Clear();
  width_.Clear();
  slantangle_.Clear();
  slantdirection_.Clear();
  guid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool columnrepeated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:columnrepeated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double px = 1;
      case 1: {
        if (tag == 9) {
         parse_px:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_px())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_px())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_px;
        if (input->ExpectTag(17)) goto parse_py;
        break;
      }

      // repeated double py = 2;
      case 2: {
        if (tag == 17) {
         parse_py:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_py())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_py())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_py;
        if (input->ExpectTag(26)) goto parse_bottomlevel;
        break;
      }

      // repeated .storyinfo bottomlevel = 3;
      case 3: {
        if (tag == 26) {
         parse_bottomlevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bottomlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bottomlevel;
        if (input->ExpectTag(34)) goto parse_toplevel;
        break;
      }

      // repeated .storyinfo toplevel = 4;
      case 4: {
        if (tag == 34) {
         parse_toplevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_toplevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_toplevel;
        if (input->ExpectTag(40)) goto parse_circular;
        break;
      }

      // repeated bool circular = 5;
      case 5: {
        if (tag == 40) {
         parse_circular:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 40, input, this->mutable_circular())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_circular())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_circular;
        if (input->ExpectTag(49)) goto parse_angle;
        break;
      }

      // repeated double angle = 6;
      case 6: {
        if (tag == 49) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_angle())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_angle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_angle;
        if (input->ExpectTag(57)) goto parse_depth;
        break;
      }

      // repeated double depth = 7;
      case 7: {
        if (tag == 57) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57, input, this->mutable_depth())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_depth())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_depth;
        if (input->ExpectTag(65)) goto parse_width;
        break;
      }

      // repeated double width = 8;
      case 8: {
        if (tag == 65) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65, input, this->mutable_width())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_width())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_width;
        if (input->ExpectTag(73)) goto parse_slantangle;
        break;
      }

      // repeated double slantangle = 9;
      case 9: {
        if (tag == 73) {
         parse_slantangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 73, input, this->mutable_slantangle())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_slantangle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_slantangle;
        if (input->ExpectTag(81)) goto parse_slantdirection;
        break;
      }

      // repeated double slantdirection = 10;
      case 10: {
        if (tag == 81) {
         parse_slantdirection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 81, input, this->mutable_slantdirection())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_slantdirection())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_slantdirection;
        if (input->ExpectTag(90)) goto parse_guid;
        break;
      }

      // repeated string guid = 11;
      case 11: {
        if (tag == 90) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_guid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:columnrepeated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:columnrepeated)
  return false;
#undef DO_
}

void columnrepeated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:columnrepeated)
  // repeated double px = 1;
  for (int i = 0; i < this->px_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->px(i), output);
  }

  // repeated double py = 2;
  for (int i = 0; i < this->py_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->py(i), output);
  }

  // repeated .storyinfo bottomlevel = 3;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bottomlevel(i), output);
  }

  // repeated .storyinfo toplevel = 4;
  for (int i = 0; i < this->toplevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->toplevel(i), output);
  }

  // repeated bool circular = 5;
  for (int i = 0; i < this->circular_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      5, this->circular(i), output);
  }

  // repeated double angle = 6;
  for (int i = 0; i < this->angle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->angle(i), output);
  }

  // repeated double depth = 7;
  for (int i = 0; i < this->depth_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->depth(i), output);
  }

  // repeated double width = 8;
  for (int i = 0; i < this->width_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->width(i), output);
  }

  // repeated double slantangle = 9;
  for (int i = 0; i < this->slantangle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      9, this->slantangle(i), output);
  }

  // repeated double slantdirection = 10;
  for (int i = 0; i < this->slantdirection_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      10, this->slantdirection(i), output);
  }

  // repeated string guid = 11;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->guid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:columnrepeated)
}

::google::protobuf::uint8* columnrepeated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:columnrepeated)
  // repeated double px = 1;
  for (int i = 0; i < this->px_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->px(i), target);
  }

  // repeated double py = 2;
  for (int i = 0; i < this->py_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->py(i), target);
  }

  // repeated .storyinfo bottomlevel = 3;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bottomlevel(i), target);
  }

  // repeated .storyinfo toplevel = 4;
  for (int i = 0; i < this->toplevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->toplevel(i), target);
  }

  // repeated bool circular = 5;
  for (int i = 0; i < this->circular_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(5, this->circular(i), target);
  }

  // repeated double angle = 6;
  for (int i = 0; i < this->angle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->angle(i), target);
  }

  // repeated double depth = 7;
  for (int i = 0; i < this->depth_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(7, this->depth(i), target);
  }

  // repeated double width = 8;
  for (int i = 0; i < this->width_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(8, this->width(i), target);
  }

  // repeated double slantangle = 9;
  for (int i = 0; i < this->slantangle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(9, this->slantangle(i), target);
  }

  // repeated double slantdirection = 10;
  for (int i = 0; i < this->slantdirection_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(10, this->slantdirection(i), target);
  }

  // repeated string guid = 11;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->guid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:columnrepeated)
  return target;
}

int columnrepeated::ByteSize() const {
  int total_size = 0;

  // repeated double px = 1;
  {
    int data_size = 0;
    data_size = 8 * this->px_size();
    total_size += 1 * this->px_size() + data_size;
  }

  // repeated double py = 2;
  {
    int data_size = 0;
    data_size = 8 * this->py_size();
    total_size += 1 * this->py_size() + data_size;
  }

  // repeated .storyinfo bottomlevel = 3;
  total_size += 1 * this->bottomlevel_size();
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bottomlevel(i));
  }

  // repeated .storyinfo toplevel = 4;
  total_size += 1 * this->toplevel_size();
  for (int i = 0; i < this->toplevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toplevel(i));
  }

  // repeated bool circular = 5;
  {
    int data_size = 0;
    data_size = 1 * this->circular_size();
    total_size += 1 * this->circular_size() + data_size;
  }

  // repeated double angle = 6;
  {
    int data_size = 0;
    data_size = 8 * this->angle_size();
    total_size += 1 * this->angle_size() + data_size;
  }

  // repeated double depth = 7;
  {
    int data_size = 0;
    data_size = 8 * this->depth_size();
    total_size += 1 * this->depth_size() + data_size;
  }

  // repeated double width = 8;
  {
    int data_size = 0;
    data_size = 8 * this->width_size();
    total_size += 1 * this->width_size() + data_size;
  }

  // repeated double slantangle = 9;
  {
    int data_size = 0;
    data_size = 8 * this->slantangle_size();
    total_size += 1 * this->slantangle_size() + data_size;
  }

  // repeated double slantdirection = 10;
  {
    int data_size = 0;
    data_size = 8 * this->slantdirection_size();
    total_size += 1 * this->slantdirection_size() + data_size;
  }

  // repeated string guid = 11;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void columnrepeated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const columnrepeated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const columnrepeated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void columnrepeated::MergeFrom(const columnrepeated& from) {
  GOOGLE_CHECK_NE(&from, this);
  px_.MergeFrom(from.px_);
  py_.MergeFrom(from.py_);
  bottomlevel_.MergeFrom(from.bottomlevel_);
  toplevel_.MergeFrom(from.toplevel_);
  circular_.MergeFrom(from.circular_);
  angle_.MergeFrom(from.angle_);
  depth_.MergeFrom(from.depth_);
  width_.MergeFrom(from.width_);
  slantangle_.MergeFrom(from.slantangle_);
  slantdirection_.MergeFrom(from.slantdirection_);
  guid_.MergeFrom(from.guid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void columnrepeated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void columnrepeated::CopyFrom(const columnrepeated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool columnrepeated::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->bottomlevel())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->toplevel())) return false;
  return true;
}

void columnrepeated::Swap(columnrepeated* other) {
  if (other != this) {
    px_.Swap(&other->px_);
    py_.Swap(&other->py_);
    bottomlevel_.Swap(&other->bottomlevel_);
    toplevel_.Swap(&other->toplevel_);
    circular_.Swap(&other->circular_);
    angle_.Swap(&other->angle_);
    depth_.Swap(&other->depth_);
    width_.Swap(&other->width_);
    slantangle_.Swap(&other->slantangle_);
    slantdirection_.Swap(&other->slantdirection_);
    guid_.Swap(&other->guid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata columnrepeated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = columnrepeated_descriptor_;
  metadata.reflection = columnrepeated_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int objectrepeated::kNameFieldNumber;
const int objectrepeated::kPxFieldNumber;
const int objectrepeated::kPyFieldNumber;
const int objectrepeated::kAngleFieldNumber;
const int objectrepeated::kXratioFieldNumber;
const int objectrepeated::kYratioFieldNumber;
const int objectrepeated::kBottomoffsetFieldNumber;
const int objectrepeated::kBottomlevelFieldNumber;
const int objectrepeated::kGuidFieldNumber;
const int objectrepeated::kStairsFieldNumber;
const int objectrepeated::kUsexyfixsizeFieldNumber;
#endif  // !_MSC_VER

objectrepeated::objectrepeated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:objectrepeated)
}

void objectrepeated::InitAsDefaultInstance() {
}

objectrepeated::objectrepeated(const objectrepeated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:objectrepeated)
}

void objectrepeated::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

objectrepeated::~objectrepeated() {
  // @@protoc_insertion_point(destructor:objectrepeated)
  SharedDtor();
}

void objectrepeated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void objectrepeated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* objectrepeated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return objectrepeated_descriptor_;
}

const objectrepeated& objectrepeated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

objectrepeated* objectrepeated::default_instance_ = NULL;

objectrepeated* objectrepeated::New() const {
  return new objectrepeated;
}

void objectrepeated::Clear() {
  name_.Clear();
  px_.Clear();
  py_.Clear();
  angle_.Clear();
  xratio_.Clear();
  yratio_.Clear();
  bottomoffset_.Clear();
  bottomlevel_.Clear();
  guid_.Clear();
  stairs_.Clear();
  usexyfixsize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool objectrepeated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:objectrepeated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (tag == 10) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name(this->name_size() - 1).data(),
            this->name(this->name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_name;
        if (input->ExpectTag(17)) goto parse_px;
        break;
      }

      // repeated double px = 2;
      case 2: {
        if (tag == 17) {
         parse_px:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_px())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_px())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_px;
        if (input->ExpectTag(25)) goto parse_py;
        break;
      }

      // repeated double py = 3;
      case 3: {
        if (tag == 25) {
         parse_py:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_py())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_py())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_py;
        if (input->ExpectTag(33)) goto parse_angle;
        break;
      }

      // repeated double angle = 4;
      case 4: {
        if (tag == 33) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33, input, this->mutable_angle())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_angle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_angle;
        if (input->ExpectTag(41)) goto parse_xratio;
        break;
      }

      // repeated double xratio = 5;
      case 5: {
        if (tag == 41) {
         parse_xratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_xratio())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_xratio())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_xratio;
        if (input->ExpectTag(49)) goto parse_yratio;
        break;
      }

      // repeated double yratio = 6;
      case 6: {
        if (tag == 49) {
         parse_yratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_yratio())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_yratio())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_yratio;
        if (input->ExpectTag(57)) goto parse_bottomoffset;
        break;
      }

      // repeated double bottomoffset = 7;
      case 7: {
        if (tag == 57) {
         parse_bottomoffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57, input, this->mutable_bottomoffset())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bottomoffset())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_bottomoffset;
        if (input->ExpectTag(66)) goto parse_bottomlevel;
        break;
      }

      // repeated .storyinfo bottomlevel = 8;
      case 8: {
        if (tag == 66) {
         parse_bottomlevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bottomlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_bottomlevel;
        if (input->ExpectTag(74)) goto parse_guid;
        break;
      }

      // repeated string guid = 9;
      case 9: {
        if (tag == 74) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_guid;
        if (input->ExpectTag(80)) goto parse_stairs;
        break;
      }

      // repeated bool stairs = 10;
      case 10: {
        if (tag == 80) {
         parse_stairs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 80, input, this->mutable_stairs())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_stairs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_stairs;
        if (input->ExpectTag(88)) goto parse_usexyfixsize;
        break;
      }

      // repeated bool usexyfixsize = 11;
      case 11: {
        if (tag == 88) {
         parse_usexyfixsize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 88, input, this->mutable_usexyfixsize())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_usexyfixsize())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_usexyfixsize;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:objectrepeated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:objectrepeated)
  return false;
#undef DO_
}

void objectrepeated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:objectrepeated)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->name(i).data(), this->name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  // repeated double px = 2;
  for (int i = 0; i < this->px_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->px(i), output);
  }

  // repeated double py = 3;
  for (int i = 0; i < this->py_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->py(i), output);
  }

  // repeated double angle = 4;
  for (int i = 0; i < this->angle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->angle(i), output);
  }

  // repeated double xratio = 5;
  for (int i = 0; i < this->xratio_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->xratio(i), output);
  }

  // repeated double yratio = 6;
  for (int i = 0; i < this->yratio_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->yratio(i), output);
  }

  // repeated double bottomoffset = 7;
  for (int i = 0; i < this->bottomoffset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->bottomoffset(i), output);
  }

  // repeated .storyinfo bottomlevel = 8;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->bottomlevel(i), output);
  }

  // repeated string guid = 9;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->guid(i), output);
  }

  // repeated bool stairs = 10;
  for (int i = 0; i < this->stairs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      10, this->stairs(i), output);
  }

  // repeated bool usexyfixsize = 11;
  for (int i = 0; i < this->usexyfixsize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      11, this->usexyfixsize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:objectrepeated)
}

::google::protobuf::uint8* objectrepeated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectrepeated)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  // repeated double px = 2;
  for (int i = 0; i < this->px_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->px(i), target);
  }

  // repeated double py = 3;
  for (int i = 0; i < this->py_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->py(i), target);
  }

  // repeated double angle = 4;
  for (int i = 0; i < this->angle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->angle(i), target);
  }

  // repeated double xratio = 5;
  for (int i = 0; i < this->xratio_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->xratio(i), target);
  }

  // repeated double yratio = 6;
  for (int i = 0; i < this->yratio_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->yratio(i), target);
  }

  // repeated double bottomoffset = 7;
  for (int i = 0; i < this->bottomoffset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(7, this->bottomoffset(i), target);
  }

  // repeated .storyinfo bottomlevel = 8;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->bottomlevel(i), target);
  }

  // repeated string guid = 9;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->guid(i), target);
  }

  // repeated bool stairs = 10;
  for (int i = 0; i < this->stairs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(10, this->stairs(i), target);
  }

  // repeated bool usexyfixsize = 11;
  for (int i = 0; i < this->usexyfixsize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(11, this->usexyfixsize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectrepeated)
  return target;
}

int objectrepeated::ByteSize() const {
  int total_size = 0;

  // repeated string name = 1;
  total_size += 1 * this->name_size();
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  // repeated double px = 2;
  {
    int data_size = 0;
    data_size = 8 * this->px_size();
    total_size += 1 * this->px_size() + data_size;
  }

  // repeated double py = 3;
  {
    int data_size = 0;
    data_size = 8 * this->py_size();
    total_size += 1 * this->py_size() + data_size;
  }

  // repeated double angle = 4;
  {
    int data_size = 0;
    data_size = 8 * this->angle_size();
    total_size += 1 * this->angle_size() + data_size;
  }

  // repeated double xratio = 5;
  {
    int data_size = 0;
    data_size = 8 * this->xratio_size();
    total_size += 1 * this->xratio_size() + data_size;
  }

  // repeated double yratio = 6;
  {
    int data_size = 0;
    data_size = 8 * this->yratio_size();
    total_size += 1 * this->yratio_size() + data_size;
  }

  // repeated double bottomoffset = 7;
  {
    int data_size = 0;
    data_size = 8 * this->bottomoffset_size();
    total_size += 1 * this->bottomoffset_size() + data_size;
  }

  // repeated .storyinfo bottomlevel = 8;
  total_size += 1 * this->bottomlevel_size();
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bottomlevel(i));
  }

  // repeated string guid = 9;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  // repeated bool stairs = 10;
  {
    int data_size = 0;
    data_size = 1 * this->stairs_size();
    total_size += 1 * this->stairs_size() + data_size;
  }

  // repeated bool usexyfixsize = 11;
  {
    int data_size = 0;
    data_size = 1 * this->usexyfixsize_size();
    total_size += 1 * this->usexyfixsize_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void objectrepeated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const objectrepeated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const objectrepeated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void objectrepeated::MergeFrom(const objectrepeated& from) {
  GOOGLE_CHECK_NE(&from, this);
  name_.MergeFrom(from.name_);
  px_.MergeFrom(from.px_);
  py_.MergeFrom(from.py_);
  angle_.MergeFrom(from.angle_);
  xratio_.MergeFrom(from.xratio_);
  yratio_.MergeFrom(from.yratio_);
  bottomoffset_.MergeFrom(from.bottomoffset_);
  bottomlevel_.MergeFrom(from.bottomlevel_);
  guid_.MergeFrom(from.guid_);
  stairs_.MergeFrom(from.stairs_);
  usexyfixsize_.MergeFrom(from.usexyfixsize_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void objectrepeated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void objectrepeated::CopyFrom(const objectrepeated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool objectrepeated::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->bottomlevel())) return false;
  return true;
}

void objectrepeated::Swap(objectrepeated* other) {
  if (other != this) {
    name_.Swap(&other->name_);
    px_.Swap(&other->px_);
    py_.Swap(&other->py_);
    angle_.Swap(&other->angle_);
    xratio_.Swap(&other->xratio_);
    yratio_.Swap(&other->yratio_);
    bottomoffset_.Swap(&other->bottomoffset_);
    bottomlevel_.Swap(&other->bottomlevel_);
    guid_.Swap(&other->guid_);
    stairs_.Swap(&other->stairs_);
    usexyfixsize_.Swap(&other->usexyfixsize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata objectrepeated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = objectrepeated_descriptor_;
  metadata.reflection = objectrepeated_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int roofrepeated::kPointsFieldNumber;
const int roofrepeated::kBottomlevelFieldNumber;
const int roofrepeated::kThicknessFieldNumber;
const int roofrepeated::kMaterialFieldNumber;
const int roofrepeated::kTypeFieldNumber;
const int roofrepeated::kGuidFieldNumber;
const int roofrepeated::kSubpolygonsFieldNumber;
const int roofrepeated::kHeightFieldNumber;
#endif  // !_MSC_VER

roofrepeated::roofrepeated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roofrepeated)
}

void roofrepeated::InitAsDefaultInstance() {
}

roofrepeated::roofrepeated(const roofrepeated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roofrepeated)
}

void roofrepeated::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

roofrepeated::~roofrepeated() {
  // @@protoc_insertion_point(destructor:roofrepeated)
  SharedDtor();
}

void roofrepeated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void roofrepeated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* roofrepeated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return roofrepeated_descriptor_;
}

const roofrepeated& roofrepeated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

roofrepeated* roofrepeated::default_instance_ = NULL;

roofrepeated* roofrepeated::New() const {
  return new roofrepeated;
}

void roofrepeated::Clear() {
  points_.Clear();
  bottomlevel_.Clear();
  thickness_.Clear();
  material_.Clear();
  type_.Clear();
  guid_.Clear();
  subpolygons_.Clear();
  height_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool roofrepeated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roofrepeated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pointsmessage points = 1;
      case 1: {
        if (tag == 10) {
         parse_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_points;
        if (input->ExpectTag(18)) goto parse_bottomlevel;
        break;
      }

      // repeated .storyinfo bottomlevel = 2;
      case 2: {
        if (tag == 18) {
         parse_bottomlevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bottomlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bottomlevel;
        if (input->ExpectTag(25)) goto parse_thickness;
        break;
      }

      // repeated double thickness = 3;
      case 3: {
        if (tag == 25) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_thickness())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_thickness())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_thickness;
        if (input->ExpectTag(34)) goto parse_material;
        break;
      }

      // repeated string material = 4;
      case 4: {
        if (tag == 34) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material(this->material_size() - 1).data(),
            this->material(this->material_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_material;
        if (input->ExpectTag(42)) goto parse_type;
        break;
      }

      // repeated string type = 5;
      case 5: {
        if (tag == 42) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type(this->type_size() - 1).data(),
            this->type(this->type_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_type;
        if (input->ExpectTag(50)) goto parse_guid;
        break;
      }

      // repeated string guid = 6;
      case 6: {
        if (tag == 50) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid(this->guid_size() - 1).data(),
            this->guid(this->guid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_guid;
        if (input->ExpectTag(58)) goto parse_subpolygons;
        break;
      }

      // repeated .intlistmsg subpolygons = 7;
      case 7: {
        if (tag == 58) {
         parse_subpolygons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subpolygons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_subpolygons;
        if (input->ExpectTag(65)) goto parse_height;
        break;
      }

      // repeated double height = 8;
      case 8: {
        if (tag == 65) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65, input, this->mutable_height())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_height())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_height;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roofrepeated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roofrepeated)
  return false;
#undef DO_
}

void roofrepeated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roofrepeated)
  // repeated .pointsmessage points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  // repeated .storyinfo bottomlevel = 2;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bottomlevel(i), output);
  }

  // repeated double thickness = 3;
  for (int i = 0; i < this->thickness_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->thickness(i), output);
  }

  // repeated string material = 4;
  for (int i = 0; i < this->material_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->material(i).data(), this->material(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "material");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->material(i), output);
  }

  // repeated string type = 5;
  for (int i = 0; i < this->type_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->type(i).data(), this->type(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "type");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->type(i), output);
  }

  // repeated string guid = 6;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->guid(i), output);
  }

  // repeated .intlistmsg subpolygons = 7;
  for (int i = 0; i < this->subpolygons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->subpolygons(i), output);
  }

  // repeated double height = 8;
  for (int i = 0; i < this->height_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->height(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roofrepeated)
}

::google::protobuf::uint8* roofrepeated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roofrepeated)
  // repeated .pointsmessage points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->points(i), target);
  }

  // repeated .storyinfo bottomlevel = 2;
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bottomlevel(i), target);
  }

  // repeated double thickness = 3;
  for (int i = 0; i < this->thickness_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->thickness(i), target);
  }

  // repeated string material = 4;
  for (int i = 0; i < this->material_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material(i).data(), this->material(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->material(i), target);
  }

  // repeated string type = 5;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type(i).data(), this->type(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->type(i), target);
  }

  // repeated string guid = 6;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->guid(i), target);
  }

  // repeated .intlistmsg subpolygons = 7;
  for (int i = 0; i < this->subpolygons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->subpolygons(i), target);
  }

  // repeated double height = 8;
  for (int i = 0; i < this->height_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(8, this->height(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roofrepeated)
  return target;
}

int roofrepeated::ByteSize() const {
  int total_size = 0;

  // repeated .pointsmessage points = 1;
  total_size += 1 * this->points_size();
  for (int i = 0; i < this->points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points(i));
  }

  // repeated .storyinfo bottomlevel = 2;
  total_size += 1 * this->bottomlevel_size();
  for (int i = 0; i < this->bottomlevel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bottomlevel(i));
  }

  // repeated double thickness = 3;
  {
    int data_size = 0;
    data_size = 8 * this->thickness_size();
    total_size += 1 * this->thickness_size() + data_size;
  }

  // repeated string material = 4;
  total_size += 1 * this->material_size();
  for (int i = 0; i < this->material_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->material(i));
  }

  // repeated string type = 5;
  total_size += 1 * this->type_size();
  for (int i = 0; i < this->type_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type(i));
  }

  // repeated string guid = 6;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }

  // repeated .intlistmsg subpolygons = 7;
  total_size += 1 * this->subpolygons_size();
  for (int i = 0; i < this->subpolygons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->subpolygons(i));
  }

  // repeated double height = 8;
  {
    int data_size = 0;
    data_size = 8 * this->height_size();
    total_size += 1 * this->height_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void roofrepeated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const roofrepeated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const roofrepeated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void roofrepeated::MergeFrom(const roofrepeated& from) {
  GOOGLE_CHECK_NE(&from, this);
  points_.MergeFrom(from.points_);
  bottomlevel_.MergeFrom(from.bottomlevel_);
  thickness_.MergeFrom(from.thickness_);
  material_.MergeFrom(from.material_);
  type_.MergeFrom(from.type_);
  guid_.MergeFrom(from.guid_);
  subpolygons_.MergeFrom(from.subpolygons_);
  height_.MergeFrom(from.height_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void roofrepeated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void roofrepeated::CopyFrom(const roofrepeated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool roofrepeated::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->bottomlevel())) return false;
  return true;
}

void roofrepeated::Swap(roofrepeated* other) {
  if (other != this) {
    points_.Swap(&other->points_);
    bottomlevel_.Swap(&other->bottomlevel_);
    thickness_.Swap(&other->thickness_);
    material_.Swap(&other->material_);
    type_.Swap(&other->type_);
    guid_.Swap(&other->guid_);
    subpolygons_.Swap(&other->subpolygons_);
    height_.Swap(&other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata roofrepeated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = roofrepeated_descriptor_;
  metadata.reflection = roofrepeated_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int levelrepeated::kLevelsFieldNumber;
#endif  // !_MSC_VER

levelrepeated::levelrepeated()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:levelrepeated)
}

void levelrepeated::InitAsDefaultInstance() {
}

levelrepeated::levelrepeated(const levelrepeated& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:levelrepeated)
}

void levelrepeated::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

levelrepeated::~levelrepeated() {
  // @@protoc_insertion_point(destructor:levelrepeated)
  SharedDtor();
}

void levelrepeated::SharedDtor() {
  if (this != default_instance_) {
  }
}

void levelrepeated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* levelrepeated::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return levelrepeated_descriptor_;
}

const levelrepeated& levelrepeated::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

levelrepeated* levelrepeated::default_instance_ = NULL;

levelrepeated* levelrepeated::New() const {
  return new levelrepeated;
}

void levelrepeated::Clear() {
  levels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool levelrepeated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:levelrepeated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .storyinfo levels = 1;
      case 1: {
        if (tag == 10) {
         parse_levels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_levels()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_levels;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:levelrepeated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:levelrepeated)
  return false;
#undef DO_
}

void levelrepeated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:levelrepeated)
  // repeated .storyinfo levels = 1;
  for (int i = 0; i < this->levels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->levels(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:levelrepeated)
}

::google::protobuf::uint8* levelrepeated::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:levelrepeated)
  // repeated .storyinfo levels = 1;
  for (int i = 0; i < this->levels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->levels(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:levelrepeated)
  return target;
}

int levelrepeated::ByteSize() const {
  int total_size = 0;

  // repeated .storyinfo levels = 1;
  total_size += 1 * this->levels_size();
  for (int i = 0; i < this->levels_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->levels(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void levelrepeated::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const levelrepeated* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const levelrepeated*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void levelrepeated::MergeFrom(const levelrepeated& from) {
  GOOGLE_CHECK_NE(&from, this);
  levels_.MergeFrom(from.levels_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void levelrepeated::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void levelrepeated::CopyFrom(const levelrepeated& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool levelrepeated::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->levels())) return false;
  return true;
}

void levelrepeated::Swap(levelrepeated* other) {
  if (other != this) {
    levels_.Swap(&other->levels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata levelrepeated::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = levelrepeated_descriptor_;
  metadata.reflection = levelrepeated_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int extrusionmsg::kVxFieldNumber;
const int extrusionmsg::kVyFieldNumber;
const int extrusionmsg::kVzFieldNumber;
const int extrusionmsg::kHeightFieldNumber;
#endif  // !_MSC_VER

extrusionmsg::extrusionmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:extrusionmsg)
}

void extrusionmsg::InitAsDefaultInstance() {
}

extrusionmsg::extrusionmsg(const extrusionmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:extrusionmsg)
}

void extrusionmsg::SharedCtor() {
  _cached_size_ = 0;
  vx_ = 0;
  vy_ = 0;
  vz_ = 0;
  height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

extrusionmsg::~extrusionmsg() {
  // @@protoc_insertion_point(destructor:extrusionmsg)
  SharedDtor();
}

void extrusionmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void extrusionmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* extrusionmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return extrusionmsg_descriptor_;
}

const extrusionmsg& extrusionmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

extrusionmsg* extrusionmsg::default_instance_ = NULL;

extrusionmsg* extrusionmsg::New() const {
  return new extrusionmsg;
}

void extrusionmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<extrusionmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(vx_, height_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool extrusionmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:extrusionmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double vx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
          set_has_vx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_vy;
        break;
      }

      // required double vy = 2;
      case 2: {
        if (tag == 17) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
          set_has_vy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_vz;
        break;
      }

      // required double vz = 3;
      case 3: {
        if (tag == 25) {
         parse_vz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vz_)));
          set_has_vz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_height;
        break;
      }

      // required double height = 4;
      case 4: {
        if (tag == 33) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:extrusionmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:extrusionmsg)
  return false;
#undef DO_
}

void extrusionmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:extrusionmsg)
  // required double vx = 1;
  if (has_vx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->vx(), output);
  }

  // required double vy = 2;
  if (has_vy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vy(), output);
  }

  // required double vz = 3;
  if (has_vz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vz(), output);
  }

  // required double height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->height(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:extrusionmsg)
}

::google::protobuf::uint8* extrusionmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:extrusionmsg)
  // required double vx = 1;
  if (has_vx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->vx(), target);
  }

  // required double vy = 2;
  if (has_vy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vy(), target);
  }

  // required double vz = 3;
  if (has_vz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->vz(), target);
  }

  // required double height = 4;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->height(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:extrusionmsg)
  return target;
}

int extrusionmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double vx = 1;
    if (has_vx()) {
      total_size += 1 + 8;
    }

    // required double vy = 2;
    if (has_vy()) {
      total_size += 1 + 8;
    }

    // required double vz = 3;
    if (has_vz()) {
      total_size += 1 + 8;
    }

    // required double height = 4;
    if (has_height()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void extrusionmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const extrusionmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const extrusionmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void extrusionmsg::MergeFrom(const extrusionmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vx()) {
      set_vx(from.vx());
    }
    if (from.has_vy()) {
      set_vy(from.vy());
    }
    if (from.has_vz()) {
      set_vz(from.vz());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void extrusionmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void extrusionmsg::CopyFrom(const extrusionmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool extrusionmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void extrusionmsg::Swap(extrusionmsg* other) {
  if (other != this) {
    std::swap(vx_, other->vx_);
    std::swap(vy_, other->vy_);
    std::swap(vz_, other->vz_);
    std::swap(height_, other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata extrusionmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = extrusionmsg_descriptor_;
  metadata.reflection = extrusionmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int openmessage::kPathFieldNumber;
const int openmessage::kExtensionFieldNumber;
#endif  // !_MSC_VER

openmessage::openmessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:openmessage)
}

void openmessage::InitAsDefaultInstance() {
}

openmessage::openmessage(const openmessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:openmessage)
}

void openmessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

openmessage::~openmessage() {
  // @@protoc_insertion_point(destructor:openmessage)
  SharedDtor();
}

void openmessage::SharedDtor() {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete path_;
  }
  if (extension_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extension_;
  }
  if (this != default_instance_) {
  }
}

void openmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* openmessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return openmessage_descriptor_;
}

const openmessage& openmessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

openmessage* openmessage::default_instance_ = NULL;

openmessage* openmessage::New() const {
  return new openmessage;
}

void openmessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        path_->clear();
      }
    }
    if (has_extension()) {
      if (extension_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extension_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool openmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_extension;
        break;
      }

      // required string extension = 2;
      case 2: {
        if (tag == 18) {
         parse_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extension().data(), this->extension().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extension");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openmessage)
  return false;
#undef DO_
}

void openmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openmessage)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // required string extension = 2;
  if (has_extension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extension().data(), this->extension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extension");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extension(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:openmessage)
}

::google::protobuf::uint8* openmessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:openmessage)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required string extension = 2;
  if (has_extension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extension().data(), this->extension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extension");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extension(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openmessage)
  return target;
}

int openmessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required string extension = 2;
    if (has_extension()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extension());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void openmessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const openmessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const openmessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void openmessage::MergeFrom(const openmessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_extension()) {
      set_extension(from.extension());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void openmessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void openmessage::CopyFrom(const openmessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool openmessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void openmessage::Swap(openmessage* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(extension_, other->extension_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata openmessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = openmessage_descriptor_;
  metadata.reflection = openmessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int transformmsg::kGuidFieldNumber;
const int transformmsg::kOpFieldNumber;
const int transformmsg::kXFieldNumber;
const int transformmsg::kYFieldNumber;
const int transformmsg::kZFieldNumber;
const int transformmsg::kAngleFieldNumber;
const int transformmsg::kScaleFieldNumber;
#endif  // !_MSC_VER

transformmsg::transformmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transformmsg)
}

void transformmsg::InitAsDefaultInstance() {
}

transformmsg::transformmsg(const transformmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transformmsg)
}

void transformmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_ = 0;
  y_ = 0;
  z_ = 0;
  angle_ = 0;
  scale_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

transformmsg::~transformmsg() {
  // @@protoc_insertion_point(destructor:transformmsg)
  SharedDtor();
}

void transformmsg::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (op_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete op_;
  }
  if (this != default_instance_) {
  }
}

void transformmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* transformmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return transformmsg_descriptor_;
}

const transformmsg& transformmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

transformmsg* transformmsg::default_instance_ = NULL;

transformmsg* transformmsg::New() const {
  return new transformmsg;
}

void transformmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<transformmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(x_, scale_);
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_op()) {
      if (op_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        op_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool transformmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transformmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_op;
        break;
      }

      // required string op = 2;
      case 2: {
        if (tag == 18) {
         parse_op:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op().data(), this->op().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "op");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_x;
        break;
      }

      // required double x = 3;
      case 3: {
        if (tag == 25) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_y;
        break;
      }

      // required double y = 4;
      case 4: {
        if (tag == 33) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_z;
        break;
      }

      // required double z = 5;
      case 5: {
        if (tag == 41) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_angle;
        break;
      }

      // required double angle = 6;
      case 6: {
        if (tag == 49) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_scale;
        break;
      }

      // required double scale = 7;
      case 7: {
        if (tag == 57) {
         parse_scale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
          set_has_scale();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transformmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transformmsg)
  return false;
#undef DO_
}

void transformmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transformmsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required string op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op().data(), this->op().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "op");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->op(), output);
  }

  // required double x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->x(), output);
  }

  // required double y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->y(), output);
  }

  // required double z = 5;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->z(), output);
  }

  // required double angle = 6;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->angle(), output);
  }

  // required double scale = 7;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->scale(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transformmsg)
}

::google::protobuf::uint8* transformmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transformmsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required string op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op().data(), this->op().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "op");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->op(), target);
  }

  // required double x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->x(), target);
  }

  // required double y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->y(), target);
  }

  // required double z = 5;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->z(), target);
  }

  // required double angle = 6;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->angle(), target);
  }

  // required double scale = 7;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->scale(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transformmsg)
  return target;
}

int transformmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required string op = 2;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op());
    }

    // required double x = 3;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 4;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // required double z = 5;
    if (has_z()) {
      total_size += 1 + 8;
    }

    // required double angle = 6;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required double scale = 7;
    if (has_scale()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void transformmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const transformmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const transformmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void transformmsg::MergeFrom(const transformmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_scale()) {
      set_scale(from.scale());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void transformmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void transformmsg::CopyFrom(const transformmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool transformmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void transformmsg::Swap(transformmsg* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(op_, other->op_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(angle_, other->angle_);
    std::swap(scale_, other->scale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata transformmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = transformmsg_descriptor_;
  metadata.reflection = transformmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int applymatrix::kGuidFieldNumber;
const int applymatrix::kMatrixFieldNumber;
#endif  // !_MSC_VER

applymatrix::applymatrix()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:applymatrix)
}

void applymatrix::InitAsDefaultInstance() {
}

applymatrix::applymatrix(const applymatrix& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:applymatrix)
}

void applymatrix::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

applymatrix::~applymatrix() {
  // @@protoc_insertion_point(destructor:applymatrix)
  SharedDtor();
}

void applymatrix::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void applymatrix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* applymatrix::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return applymatrix_descriptor_;
}

const applymatrix& applymatrix::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

applymatrix* applymatrix::default_instance_ = NULL;

applymatrix* applymatrix::New() const {
  return new applymatrix;
}

void applymatrix::Clear() {
  if (has_guid()) {
    if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      guid_->clear();
    }
  }
  matrix_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool applymatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:applymatrix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_matrix;
        break;
      }

      // repeated double matrix = 2;
      case 2: {
        if (tag == 17) {
         parse_matrix:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_matrix())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_matrix())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_matrix;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:applymatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:applymatrix)
  return false;
#undef DO_
}

void applymatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:applymatrix)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // repeated double matrix = 2;
  for (int i = 0; i < this->matrix_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->matrix(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:applymatrix)
}

::google::protobuf::uint8* applymatrix::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:applymatrix)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // repeated double matrix = 2;
  for (int i = 0; i < this->matrix_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->matrix(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:applymatrix)
  return target;
}

int applymatrix::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

  }
  // repeated double matrix = 2;
  {
    int data_size = 0;
    data_size = 8 * this->matrix_size();
    total_size += 1 * this->matrix_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void applymatrix::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const applymatrix* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const applymatrix*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void applymatrix::MergeFrom(const applymatrix& from) {
  GOOGLE_CHECK_NE(&from, this);
  matrix_.MergeFrom(from.matrix_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void applymatrix::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void applymatrix::CopyFrom(const applymatrix& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool applymatrix::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void applymatrix::Swap(applymatrix* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    matrix_.Swap(&other->matrix_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata applymatrix::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = applymatrix_descriptor_;
  metadata.reflection = applymatrix_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int beammsg::kX0FieldNumber;
const int beammsg::kY0FieldNumber;
const int beammsg::kX1FieldNumber;
const int beammsg::kY1FieldNumber;
const int beammsg::kBeamheightFieldNumber;
const int beammsg::kBeamwidthFieldNumber;
const int beammsg::kLevelheightFieldNumber;
const int beammsg::kBottomlevelFieldNumber;
const int beammsg::kAngleFieldNumber;
const int beammsg::kMaterialFieldNumber;
const int beammsg::kProfilenameFieldNumber;
const int beammsg::kLayerFieldNumber;
#endif  // !_MSC_VER

beammsg::beammsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:beammsg)
}

void beammsg::InitAsDefaultInstance() {
}

beammsg::beammsg(const beammsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:beammsg)
}

void beammsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  x0_ = 0;
  y0_ = 0;
  x1_ = 0;
  y1_ = 0;
  beamheight_ = 0;
  beamwidth_ = 0;
  levelheight_ = 0;
  bottomlevel_ = 0;
  angle_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

beammsg::~beammsg() {
  // @@protoc_insertion_point(destructor:beammsg)
  SharedDtor();
}

void beammsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (profilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profilename_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void beammsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* beammsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return beammsg_descriptor_;
}

const beammsg& beammsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

beammsg* beammsg::default_instance_ = NULL;

beammsg* beammsg::New() const {
  return new beammsg;
}

void beammsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<beammsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(x0_, levelheight_);
    bottomlevel_ = 0;
  }
  if (_has_bits_[8 / 32] & 3840) {
    angle_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_profilename()) {
      if (profilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        profilename_->clear();
      }
    }
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool beammsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:beammsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x0 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x0_)));
          set_has_x0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y0;
        break;
      }

      // required double y0 = 2;
      case 2: {
        if (tag == 17) {
         parse_y0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y0_)));
          set_has_y0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_x1;
        break;
      }

      // required double x1 = 3;
      case 3: {
        if (tag == 25) {
         parse_x1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x1_)));
          set_has_x1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_y1;
        break;
      }

      // required double y1 = 4;
      case 4: {
        if (tag == 33) {
         parse_y1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y1_)));
          set_has_y1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_beamheight;
        break;
      }

      // required double beamheight = 5;
      case 5: {
        if (tag == 41) {
         parse_beamheight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &beamheight_)));
          set_has_beamheight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_beamwidth;
        break;
      }

      // required double beamwidth = 6;
      case 6: {
        if (tag == 49) {
         parse_beamwidth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &beamwidth_)));
          set_has_beamwidth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_levelheight;
        break;
      }

      // required double levelheight = 7;
      case 7: {
        if (tag == 57) {
         parse_levelheight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &levelheight_)));
          set_has_levelheight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_bottomlevel;
        break;
      }

      // required int32 bottomlevel = 8;
      case 8: {
        if (tag == 64) {
         parse_bottomlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottomlevel_)));
          set_has_bottomlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_angle;
        break;
      }

      // required double angle = 9;
      case 9: {
        if (tag == 73) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_material;
        break;
      }

      // required string material = 10;
      case 10: {
        if (tag == 82) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_profilename;
        break;
      }

      // required string profilename = 11;
      case 11: {
        if (tag == 90) {
         parse_profilename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->profilename().data(), this->profilename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "profilename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_layer;
        break;
      }

      // optional string layer = 12;
      case 12: {
        if (tag == 98) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:beammsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:beammsg)
  return false;
#undef DO_
}

void beammsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:beammsg)
  // required double x0 = 1;
  if (has_x0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x0(), output);
  }

  // required double y0 = 2;
  if (has_y0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y0(), output);
  }

  // required double x1 = 3;
  if (has_x1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->x1(), output);
  }

  // required double y1 = 4;
  if (has_y1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->y1(), output);
  }

  // required double beamheight = 5;
  if (has_beamheight()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->beamheight(), output);
  }

  // required double beamwidth = 6;
  if (has_beamwidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->beamwidth(), output);
  }

  // required double levelheight = 7;
  if (has_levelheight()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->levelheight(), output);
  }

  // required int32 bottomlevel = 8;
  if (has_bottomlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->bottomlevel(), output);
  }

  // required double angle = 9;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->angle(), output);
  }

  // required string material = 10;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->material(), output);
  }

  // required string profilename = 11;
  if (has_profilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->profilename().data(), this->profilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "profilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->profilename(), output);
  }

  // optional string layer = 12;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:beammsg)
}

::google::protobuf::uint8* beammsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:beammsg)
  // required double x0 = 1;
  if (has_x0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x0(), target);
  }

  // required double y0 = 2;
  if (has_y0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y0(), target);
  }

  // required double x1 = 3;
  if (has_x1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->x1(), target);
  }

  // required double y1 = 4;
  if (has_y1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->y1(), target);
  }

  // required double beamheight = 5;
  if (has_beamheight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->beamheight(), target);
  }

  // required double beamwidth = 6;
  if (has_beamwidth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->beamwidth(), target);
  }

  // required double levelheight = 7;
  if (has_levelheight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->levelheight(), target);
  }

  // required int32 bottomlevel = 8;
  if (has_bottomlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->bottomlevel(), target);
  }

  // required double angle = 9;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->angle(), target);
  }

  // required string material = 10;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->material(), target);
  }

  // required string profilename = 11;
  if (has_profilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->profilename().data(), this->profilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "profilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->profilename(), target);
  }

  // optional string layer = 12;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:beammsg)
  return target;
}

int beammsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x0 = 1;
    if (has_x0()) {
      total_size += 1 + 8;
    }

    // required double y0 = 2;
    if (has_y0()) {
      total_size += 1 + 8;
    }

    // required double x1 = 3;
    if (has_x1()) {
      total_size += 1 + 8;
    }

    // required double y1 = 4;
    if (has_y1()) {
      total_size += 1 + 8;
    }

    // required double beamheight = 5;
    if (has_beamheight()) {
      total_size += 1 + 8;
    }

    // required double beamwidth = 6;
    if (has_beamwidth()) {
      total_size += 1 + 8;
    }

    // required double levelheight = 7;
    if (has_levelheight()) {
      total_size += 1 + 8;
    }

    // required int32 bottomlevel = 8;
    if (has_bottomlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottomlevel());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double angle = 9;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required string material = 10;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string profilename = 11;
    if (has_profilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->profilename());
    }

    // optional string layer = 12;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void beammsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const beammsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const beammsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void beammsg::MergeFrom(const beammsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x0()) {
      set_x0(from.x0());
    }
    if (from.has_y0()) {
      set_y0(from.y0());
    }
    if (from.has_x1()) {
      set_x1(from.x1());
    }
    if (from.has_y1()) {
      set_y1(from.y1());
    }
    if (from.has_beamheight()) {
      set_beamheight(from.beamheight());
    }
    if (from.has_beamwidth()) {
      set_beamwidth(from.beamwidth());
    }
    if (from.has_levelheight()) {
      set_levelheight(from.levelheight());
    }
    if (from.has_bottomlevel()) {
      set_bottomlevel(from.bottomlevel());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_profilename()) {
      set_profilename(from.profilename());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void beammsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void beammsg::CopyFrom(const beammsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool beammsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void beammsg::Swap(beammsg* other) {
  if (other != this) {
    std::swap(x0_, other->x0_);
    std::swap(y0_, other->y0_);
    std::swap(x1_, other->x1_);
    std::swap(y1_, other->y1_);
    std::swap(beamheight_, other->beamheight_);
    std::swap(beamwidth_, other->beamwidth_);
    std::swap(levelheight_, other->levelheight_);
    std::swap(bottomlevel_, other->bottomlevel_);
    std::swap(angle_, other->angle_);
    std::swap(material_, other->material_);
    std::swap(profilename_, other->profilename_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata beammsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = beammsg_descriptor_;
  metadata.reflection = beammsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int intarray::kLstFieldNumber;
#endif  // !_MSC_VER

intarray::intarray()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:intarray)
}

void intarray::InitAsDefaultInstance() {
}

intarray::intarray(const intarray& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:intarray)
}

void intarray::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intarray::~intarray() {
  // @@protoc_insertion_point(destructor:intarray)
  SharedDtor();
}

void intarray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void intarray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intarray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intarray_descriptor_;
}

const intarray& intarray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

intarray* intarray::default_instance_ = NULL;

intarray* intarray::New() const {
  return new intarray;
}

void intarray::Clear() {
  lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool intarray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intarray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 lst = 1;
      case 1: {
        if (tag == 8) {
         parse_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_lst())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lst())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_lst;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intarray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intarray)
  return false;
#undef DO_
}

void intarray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intarray)
  // repeated int32 lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:intarray)
}

::google::protobuf::uint8* intarray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:intarray)
  // repeated int32 lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intarray)
  return target;
}

int intarray::ByteSize() const {
  int total_size = 0;

  // repeated int32 lst = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lst(i));
    }
    total_size += 1 * this->lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intarray::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const intarray* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intarray*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intarray::MergeFrom(const intarray& from) {
  GOOGLE_CHECK_NE(&from, this);
  lst_.MergeFrom(from.lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void intarray::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intarray::CopyFrom(const intarray& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intarray::IsInitialized() const {

  return true;
}

void intarray::Swap(intarray* other) {
  if (other != this) {
    lst_.Swap(&other->lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata intarray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intarray_descriptor_;
  metadata.reflection = intarray_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int doublearray::kLstFieldNumber;
#endif  // !_MSC_VER

doublearray::doublearray()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:doublearray)
}

void doublearray::InitAsDefaultInstance() {
}

doublearray::doublearray(const doublearray& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:doublearray)
}

void doublearray::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

doublearray::~doublearray() {
  // @@protoc_insertion_point(destructor:doublearray)
  SharedDtor();
}

void doublearray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void doublearray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* doublearray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return doublearray_descriptor_;
}

const doublearray& doublearray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

doublearray* doublearray::default_instance_ = NULL;

doublearray* doublearray::New() const {
  return new doublearray;
}

void doublearray::Clear() {
  lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool doublearray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:doublearray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double lst = 1;
      case 1: {
        if (tag == 9) {
         parse_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_lst())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_lst())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_lst;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:doublearray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:doublearray)
  return false;
#undef DO_
}

void doublearray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:doublearray)
  // repeated double lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:doublearray)
}

::google::protobuf::uint8* doublearray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:doublearray)
  // repeated double lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:doublearray)
  return target;
}

int doublearray::ByteSize() const {
  int total_size = 0;

  // repeated double lst = 1;
  {
    int data_size = 0;
    data_size = 8 * this->lst_size();
    total_size += 1 * this->lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void doublearray::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const doublearray* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const doublearray*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void doublearray::MergeFrom(const doublearray& from) {
  GOOGLE_CHECK_NE(&from, this);
  lst_.MergeFrom(from.lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void doublearray::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void doublearray::CopyFrom(const doublearray& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool doublearray::IsInitialized() const {

  return true;
}

void doublearray::Swap(doublearray* other) {
  if (other != this) {
    lst_.Swap(&other->lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata doublearray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = doublearray_descriptor_;
  metadata.reflection = doublearray_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int boolarray::kLstFieldNumber;
#endif  // !_MSC_VER

boolarray::boolarray()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:boolarray)
}

void boolarray::InitAsDefaultInstance() {
}

boolarray::boolarray(const boolarray& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:boolarray)
}

void boolarray::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

boolarray::~boolarray() {
  // @@protoc_insertion_point(destructor:boolarray)
  SharedDtor();
}

void boolarray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void boolarray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* boolarray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return boolarray_descriptor_;
}

const boolarray& boolarray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

boolarray* boolarray::default_instance_ = NULL;

boolarray* boolarray::New() const {
  return new boolarray;
}

void boolarray::Clear() {
  lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool boolarray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:boolarray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool lst = 1;
      case 1: {
        if (tag == 8) {
         parse_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 8, input, this->mutable_lst())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_lst())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_lst;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:boolarray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:boolarray)
  return false;
#undef DO_
}

void boolarray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:boolarray)
  // repeated bool lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      1, this->lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:boolarray)
}

::google::protobuf::uint8* boolarray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:boolarray)
  // repeated bool lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(1, this->lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:boolarray)
  return target;
}

int boolarray::ByteSize() const {
  int total_size = 0;

  // repeated bool lst = 1;
  {
    int data_size = 0;
    data_size = 1 * this->lst_size();
    total_size += 1 * this->lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void boolarray::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const boolarray* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const boolarray*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void boolarray::MergeFrom(const boolarray& from) {
  GOOGLE_CHECK_NE(&from, this);
  lst_.MergeFrom(from.lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void boolarray::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void boolarray::CopyFrom(const boolarray& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool boolarray::IsInitialized() const {

  return true;
}

void boolarray::Swap(boolarray* other) {
  if (other != this) {
    lst_.Swap(&other->lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata boolarray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = boolarray_descriptor_;
  metadata.reflection = boolarray_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int stringarray::kLstFieldNumber;
#endif  // !_MSC_VER

stringarray::stringarray()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:stringarray)
}

void stringarray::InitAsDefaultInstance() {
}

stringarray::stringarray(const stringarray& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:stringarray)
}

void stringarray::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

stringarray::~stringarray() {
  // @@protoc_insertion_point(destructor:stringarray)
  SharedDtor();
}

void stringarray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void stringarray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* stringarray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return stringarray_descriptor_;
}

const stringarray& stringarray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

stringarray* stringarray::default_instance_ = NULL;

stringarray* stringarray::New() const {
  return new stringarray;
}

void stringarray::Clear() {
  lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool stringarray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stringarray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string lst = 1;
      case 1: {
        if (tag == 10) {
         parse_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lst(this->lst_size() - 1).data(),
            this->lst(this->lst_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lst");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_lst;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stringarray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stringarray)
  return false;
#undef DO_
}

void stringarray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stringarray)
  // repeated string lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->lst(i).data(), this->lst(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "lst");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stringarray)
}

::google::protobuf::uint8* stringarray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:stringarray)
  // repeated string lst = 1;
  for (int i = 0; i < this->lst_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lst(i).data(), this->lst(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lst");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stringarray)
  return target;
}

int stringarray::ByteSize() const {
  int total_size = 0;

  // repeated string lst = 1;
  total_size += 1 * this->lst_size();
  for (int i = 0; i < this->lst_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void stringarray::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const stringarray* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const stringarray*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void stringarray::MergeFrom(const stringarray& from) {
  GOOGLE_CHECK_NE(&from, this);
  lst_.MergeFrom(from.lst_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void stringarray::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stringarray::CopyFrom(const stringarray& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stringarray::IsInitialized() const {

  return true;
}

void stringarray::Swap(stringarray* other) {
  if (other != this) {
    lst_.Swap(&other->lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata stringarray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = stringarray_descriptor_;
  metadata.reflection = stringarray_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int objectmsg::kIndexFieldNumber;
const int objectmsg::kPosxFieldNumber;
const int objectmsg::kPosyFieldNumber;
const int objectmsg::kUsexyfixsizeFieldNumber;
const int objectmsg::kXratioFieldNumber;
const int objectmsg::kYratioFieldNumber;
const int objectmsg::kUseobjsectattrsFieldNumber;
const int objectmsg::kBottomFieldNumber;
const int objectmsg::kAngleFieldNumber;
const int objectmsg::kParamsFieldNumber;
const int objectmsg::kNameFieldNumber;
const int objectmsg::kLevelFieldNumber;
const int objectmsg::kLayerFieldNumber;
#endif  // !_MSC_VER

objectmsg::objectmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:objectmsg)
}

void objectmsg::InitAsDefaultInstance() {
  params_ = const_cast< ::additionalparams*>(&::additionalparams::default_instance());
}

objectmsg::objectmsg(const objectmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:objectmsg)
}

void objectmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  index_ = 0;
  posx_ = 0;
  posy_ = 0;
  usexyfixsize_ = false;
  xratio_ = 0;
  yratio_ = 0;
  useobjsectattrs_ = false;
  bottom_ = 0;
  angle_ = 0;
  params_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

objectmsg::~objectmsg() {
  // @@protoc_insertion_point(destructor:objectmsg)
  SharedDtor();
}

void objectmsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
    delete params_;
  }
}

void objectmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* objectmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return objectmsg_descriptor_;
}

const objectmsg& objectmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

objectmsg* objectmsg::default_instance_ = NULL;

objectmsg* objectmsg::New() const {
  return new objectmsg;
}

void objectmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<objectmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(posx_, bottom_);
  }
  if (_has_bits_[8 / 32] & 7936) {
    angle_ = 0;
    if (has_params()) {
      if (params_ != NULL) params_->::additionalparams::Clear();
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    level_ = 0;
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool objectmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:objectmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_posx;
        break;
      }

      // required double posx = 2;
      case 2: {
        if (tag == 17) {
         parse_posx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_posy;
        break;
      }

      // required double posy = 3;
      case 3: {
        if (tag == 25) {
         parse_posy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_usexyfixsize;
        break;
      }

      // required bool usexyfixsize = 4;
      case 4: {
        if (tag == 32) {
         parse_usexyfixsize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usexyfixsize_)));
          set_has_usexyfixsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_xratio;
        break;
      }

      // required double xratio = 5;
      case 5: {
        if (tag == 41) {
         parse_xratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xratio_)));
          set_has_xratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_yratio;
        break;
      }

      // required double yratio = 6;
      case 6: {
        if (tag == 49) {
         parse_yratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yratio_)));
          set_has_yratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_useobjsectattrs;
        break;
      }

      // required bool useobjsectattrs = 7;
      case 7: {
        if (tag == 56) {
         parse_useobjsectattrs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &useobjsectattrs_)));
          set_has_useobjsectattrs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_bottom;
        break;
      }

      // required double bottom = 8;
      case 8: {
        if (tag == 65) {
         parse_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_angle;
        break;
      }

      // required double angle = 9;
      case 9: {
        if (tag == 73) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_params;
        break;
      }

      // required .additionalparams params = 10;
      case 10: {
        if (tag == 82) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_name;
        break;
      }

      // optional string name = 11;
      case 11: {
        if (tag == 90) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_level;
        break;
      }

      // required int32 level = 12;
      case 12: {
        if (tag == 96) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_layer;
        break;
      }

      // optional string layer = 13;
      case 13: {
        if (tag == 106) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:objectmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:objectmsg)
  return false;
#undef DO_
}

void objectmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:objectmsg)
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required double posx = 2;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->posx(), output);
  }

  // required double posy = 3;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->posy(), output);
  }

  // required bool usexyfixsize = 4;
  if (has_usexyfixsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->usexyfixsize(), output);
  }

  // required double xratio = 5;
  if (has_xratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->xratio(), output);
  }

  // required double yratio = 6;
  if (has_yratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->yratio(), output);
  }

  // required bool useobjsectattrs = 7;
  if (has_useobjsectattrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->useobjsectattrs(), output);
  }

  // required double bottom = 8;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->bottom(), output);
  }

  // required double angle = 9;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->angle(), output);
  }

  // required .additionalparams params = 10;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->params(), output);
  }

  // optional string name = 11;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->name(), output);
  }

  // required int32 level = 12;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->level(), output);
  }

  // optional string layer = 13;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:objectmsg)
}

::google::protobuf::uint8* objectmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:objectmsg)
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required double posx = 2;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->posx(), target);
  }

  // required double posy = 3;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->posy(), target);
  }

  // required bool usexyfixsize = 4;
  if (has_usexyfixsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->usexyfixsize(), target);
  }

  // required double xratio = 5;
  if (has_xratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->xratio(), target);
  }

  // required double yratio = 6;
  if (has_yratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->yratio(), target);
  }

  // required bool useobjsectattrs = 7;
  if (has_useobjsectattrs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->useobjsectattrs(), target);
  }

  // required double bottom = 8;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->bottom(), target);
  }

  // required double angle = 9;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->angle(), target);
  }

  // required .additionalparams params = 10;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->params(), target);
  }

  // optional string name = 11;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->name(), target);
  }

  // required int32 level = 12;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->level(), target);
  }

  // optional string layer = 13;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objectmsg)
  return target;
}

int objectmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // required double posx = 2;
    if (has_posx()) {
      total_size += 1 + 8;
    }

    // required double posy = 3;
    if (has_posy()) {
      total_size += 1 + 8;
    }

    // required bool usexyfixsize = 4;
    if (has_usexyfixsize()) {
      total_size += 1 + 1;
    }

    // required double xratio = 5;
    if (has_xratio()) {
      total_size += 1 + 8;
    }

    // required double yratio = 6;
    if (has_yratio()) {
      total_size += 1 + 8;
    }

    // required bool useobjsectattrs = 7;
    if (has_useobjsectattrs()) {
      total_size += 1 + 1;
    }

    // required double bottom = 8;
    if (has_bottom()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double angle = 9;
    if (has_angle()) {
      total_size += 1 + 8;
    }

    // required .additionalparams params = 10;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params());
    }

    // optional string name = 11;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 level = 12;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional string layer = 13;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void objectmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const objectmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const objectmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void objectmsg::MergeFrom(const objectmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
    if (from.has_usexyfixsize()) {
      set_usexyfixsize(from.usexyfixsize());
    }
    if (from.has_xratio()) {
      set_xratio(from.xratio());
    }
    if (from.has_yratio()) {
      set_yratio(from.yratio());
    }
    if (from.has_useobjsectattrs()) {
      set_useobjsectattrs(from.useobjsectattrs());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_params()) {
      mutable_params()->::additionalparams::MergeFrom(from.params());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void objectmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void objectmsg::CopyFrom(const objectmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool objectmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000bff) != 0x00000bff) return false;

  return true;
}

void objectmsg::Swap(objectmsg* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(usexyfixsize_, other->usexyfixsize_);
    std::swap(xratio_, other->xratio_);
    std::swap(yratio_, other->yratio_);
    std::swap(useobjsectattrs_, other->useobjsectattrs_);
    std::swap(bottom_, other->bottom_);
    std::swap(angle_, other->angle_);
    std::swap(params_, other->params_);
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata objectmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = objectmsg_descriptor_;
  metadata.reflection = objectmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int libpartmsg::kNameFieldNumber;
const int libpartmsg::kTwocodeFieldNumber;
const int libpartmsg::kThreecodeFieldNumber;
const int libpartmsg::kTypeFieldNumber;
const int libpartmsg::kParentidFieldNumber;
const int libpartmsg::kMastercodeFieldNumber;
const int libpartmsg::kParametercodeFieldNumber;
const int libpartmsg::kNamesFieldNumber;
const int libpartmsg::kDoublesFieldNumber;
const int libpartmsg::kStringsFieldNumber;
const int libpartmsg::kIntegersFieldNumber;
const int libpartmsg::kBooleansFieldNumber;
const int libpartmsg::kParamtypeFieldNumber;
const int libpartmsg::kIntarraysFieldNumber;
const int libpartmsg::kDoublearraysFieldNumber;
const int libpartmsg::kBoolarraysFieldNumber;
const int libpartmsg::kStringarraysFieldNumber;
const int libpartmsg::kIsarrayFieldNumber;
#endif  // !_MSC_VER

libpartmsg::libpartmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:libpartmsg)
}

void libpartmsg::InitAsDefaultInstance() {
}

libpartmsg::libpartmsg(const libpartmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:libpartmsg)
}

void libpartmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twocode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  threecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parametercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

libpartmsg::~libpartmsg() {
  // @@protoc_insertion_point(destructor:libpartmsg)
  SharedDtor();
}

void libpartmsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (twocode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete twocode_;
  }
  if (threecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete threecode_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (parentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parentid_;
  }
  if (mastercode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mastercode_;
  }
  if (parametercode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parametercode_;
  }
  if (this != default_instance_) {
  }
}

void libpartmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* libpartmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return libpartmsg_descriptor_;
}

const libpartmsg& libpartmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

libpartmsg* libpartmsg::default_instance_ = NULL;

libpartmsg* libpartmsg::New() const {
  return new libpartmsg;
}

void libpartmsg::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_twocode()) {
      if (twocode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        twocode_->clear();
      }
    }
    if (has_threecode()) {
      if (threecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        threecode_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_parentid()) {
      if (parentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        parentid_->clear();
      }
    }
    if (has_mastercode()) {
      if (mastercode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mastercode_->clear();
      }
    }
    if (has_parametercode()) {
      if (parametercode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        parametercode_->clear();
      }
    }
  }
  names_.Clear();
  doubles_.Clear();
  strings_.Clear();
  integers_.Clear();
  booleans_.Clear();
  paramtype_.Clear();
  intarrays_.Clear();
  doublearrays_.Clear();
  boolarrays_.Clear();
  stringarrays_.Clear();
  isarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool libpartmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:libpartmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_twocode;
        break;
      }

      // required string twocode = 2;
      case 2: {
        if (tag == 18) {
         parse_twocode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_twocode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->twocode().data(), this->twocode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "twocode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_threecode;
        break;
      }

      // required string threecode = 3;
      case 3: {
        if (tag == 26) {
         parse_threecode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_threecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->threecode().data(), this->threecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "threecode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // required string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_parentid;
        break;
      }

      // required string parentid = 5;
      case 5: {
        if (tag == 42) {
         parse_parentid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parentid().data(), this->parentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mastercode;
        break;
      }

      // required string mastercode = 6;
      case 6: {
        if (tag == 50) {
         parse_mastercode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mastercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mastercode().data(), this->mastercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mastercode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_parametercode;
        break;
      }

      // required string parametercode = 7;
      case 7: {
        if (tag == 58) {
         parse_parametercode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parametercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parametercode().data(), this->parametercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parametercode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_names;
        break;
      }

      // repeated string names = 8;
      case 8: {
        if (tag == 66) {
         parse_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->names(this->names_size() - 1).data(),
            this->names(this->names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "names");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_names;
        if (input->ExpectTag(73)) goto parse_doubles;
        break;
      }

      // repeated double doubles = 9;
      case 9: {
        if (tag == 73) {
         parse_doubles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 73, input, this->mutable_doubles())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_doubles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_doubles;
        if (input->ExpectTag(82)) goto parse_strings;
        break;
      }

      // repeated string strings = 10;
      case 10: {
        if (tag == 82) {
         parse_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strings(this->strings_size() - 1).data(),
            this->strings(this->strings_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strings");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_strings;
        if (input->ExpectTag(88)) goto parse_integers;
        break;
      }

      // repeated int32 integers = 11;
      case 11: {
        if (tag == 88) {
         parse_integers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88, input, this->mutable_integers())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_integers())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_integers;
        if (input->ExpectTag(96)) goto parse_booleans;
        break;
      }

      // repeated bool booleans = 12;
      case 12: {
        if (tag == 96) {
         parse_booleans:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 96, input, this->mutable_booleans())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_booleans())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_booleans;
        if (input->ExpectTag(106)) goto parse_paramtype;
        break;
      }

      // repeated string paramtype = 13;
      case 13: {
        if (tag == 106) {
         parse_paramtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_paramtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paramtype(this->paramtype_size() - 1).data(),
            this->paramtype(this->paramtype_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paramtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_paramtype;
        if (input->ExpectTag(114)) goto parse_intarrays;
        break;
      }

      // repeated .intarray intarrays = 14;
      case 14: {
        if (tag == 114) {
         parse_intarrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_intarrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_intarrays;
        if (input->ExpectTag(122)) goto parse_doublearrays;
        break;
      }

      // repeated .doublearray doublearrays = 15;
      case 15: {
        if (tag == 122) {
         parse_doublearrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_doublearrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_doublearrays;
        if (input->ExpectTag(130)) goto parse_boolarrays;
        break;
      }

      // repeated .boolarray boolarrays = 16;
      case 16: {
        if (tag == 130) {
         parse_boolarrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_boolarrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_boolarrays;
        if (input->ExpectTag(138)) goto parse_stringarrays;
        break;
      }

      // repeated .stringarray stringarrays = 17;
      case 17: {
        if (tag == 138) {
         parse_stringarrays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stringarrays()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_stringarrays;
        if (input->ExpectTag(144)) goto parse_isarray;
        break;
      }

      // repeated bool isarray = 18;
      case 18: {
        if (tag == 144) {
         parse_isarray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 144, input, this->mutable_isarray())));
        } else if (tag == 146) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_isarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_isarray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:libpartmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:libpartmsg)
  return false;
#undef DO_
}

void libpartmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:libpartmsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string twocode = 2;
  if (has_twocode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->twocode().data(), this->twocode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "twocode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->twocode(), output);
  }

  // required string threecode = 3;
  if (has_threecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->threecode().data(), this->threecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "threecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->threecode(), output);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // required string parentid = 5;
  if (has_parentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parentid().data(), this->parentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parentid(), output);
  }

  // required string mastercode = 6;
  if (has_mastercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mastercode().data(), this->mastercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mastercode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mastercode(), output);
  }

  // required string parametercode = 7;
  if (has_parametercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parametercode().data(), this->parametercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parametercode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->parametercode(), output);
  }

  // repeated string names = 8;
  for (int i = 0; i < this->names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->names(i).data(), this->names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->names(i), output);
  }

  // repeated double doubles = 9;
  for (int i = 0; i < this->doubles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      9, this->doubles(i), output);
  }

  // repeated string strings = 10;
  for (int i = 0; i < this->strings_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->strings(i).data(), this->strings(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strings(i), output);
  }

  // repeated int32 integers = 11;
  for (int i = 0; i < this->integers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->integers(i), output);
  }

  // repeated bool booleans = 12;
  for (int i = 0; i < this->booleans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      12, this->booleans(i), output);
  }

  // repeated string paramtype = 13;
  for (int i = 0; i < this->paramtype_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->paramtype(i).data(), this->paramtype(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "paramtype");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->paramtype(i), output);
  }

  // repeated .intarray intarrays = 14;
  for (int i = 0; i < this->intarrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->intarrays(i), output);
  }

  // repeated .doublearray doublearrays = 15;
  for (int i = 0; i < this->doublearrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->doublearrays(i), output);
  }

  // repeated .boolarray boolarrays = 16;
  for (int i = 0; i < this->boolarrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->boolarrays(i), output);
  }

  // repeated .stringarray stringarrays = 17;
  for (int i = 0; i < this->stringarrays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->stringarrays(i), output);
  }

  // repeated bool isarray = 18;
  for (int i = 0; i < this->isarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      18, this->isarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:libpartmsg)
}

::google::protobuf::uint8* libpartmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:libpartmsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string twocode = 2;
  if (has_twocode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->twocode().data(), this->twocode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "twocode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->twocode(), target);
  }

  // required string threecode = 3;
  if (has_threecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->threecode().data(), this->threecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "threecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->threecode(), target);
  }

  // required string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // required string parentid = 5;
  if (has_parentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parentid().data(), this->parentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parentid(), target);
  }

  // required string mastercode = 6;
  if (has_mastercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mastercode().data(), this->mastercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mastercode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mastercode(), target);
  }

  // required string parametercode = 7;
  if (has_parametercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parametercode().data(), this->parametercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parametercode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->parametercode(), target);
  }

  // repeated string names = 8;
  for (int i = 0; i < this->names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->names(i).data(), this->names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->names(i), target);
  }

  // repeated double doubles = 9;
  for (int i = 0; i < this->doubles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(9, this->doubles(i), target);
  }

  // repeated string strings = 10;
  for (int i = 0; i < this->strings_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strings(i).data(), this->strings(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->strings(i), target);
  }

  // repeated int32 integers = 11;
  for (int i = 0; i < this->integers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(11, this->integers(i), target);
  }

  // repeated bool booleans = 12;
  for (int i = 0; i < this->booleans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(12, this->booleans(i), target);
  }

  // repeated string paramtype = 13;
  for (int i = 0; i < this->paramtype_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paramtype(i).data(), this->paramtype(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paramtype");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->paramtype(i), target);
  }

  // repeated .intarray intarrays = 14;
  for (int i = 0; i < this->intarrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->intarrays(i), target);
  }

  // repeated .doublearray doublearrays = 15;
  for (int i = 0; i < this->doublearrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->doublearrays(i), target);
  }

  // repeated .boolarray boolarrays = 16;
  for (int i = 0; i < this->boolarrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->boolarrays(i), target);
  }

  // repeated .stringarray stringarrays = 17;
  for (int i = 0; i < this->stringarrays_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->stringarrays(i), target);
  }

  // repeated bool isarray = 18;
  for (int i = 0; i < this->isarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(18, this->isarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:libpartmsg)
  return target;
}

int libpartmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string twocode = 2;
    if (has_twocode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->twocode());
    }

    // required string threecode = 3;
    if (has_threecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->threecode());
    }

    // required string type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required string parentid = 5;
    if (has_parentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parentid());
    }

    // required string mastercode = 6;
    if (has_mastercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mastercode());
    }

    // required string parametercode = 7;
    if (has_parametercode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parametercode());
    }

  }
  // repeated string names = 8;
  total_size += 1 * this->names_size();
  for (int i = 0; i < this->names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // repeated double doubles = 9;
  {
    int data_size = 0;
    data_size = 8 * this->doubles_size();
    total_size += 1 * this->doubles_size() + data_size;
  }

  // repeated string strings = 10;
  total_size += 1 * this->strings_size();
  for (int i = 0; i < this->strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strings(i));
  }

  // repeated int32 integers = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->integers_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->integers(i));
    }
    total_size += 1 * this->integers_size() + data_size;
  }

  // repeated bool booleans = 12;
  {
    int data_size = 0;
    data_size = 1 * this->booleans_size();
    total_size += 1 * this->booleans_size() + data_size;
  }

  // repeated string paramtype = 13;
  total_size += 1 * this->paramtype_size();
  for (int i = 0; i < this->paramtype_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->paramtype(i));
  }

  // repeated .intarray intarrays = 14;
  total_size += 1 * this->intarrays_size();
  for (int i = 0; i < this->intarrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->intarrays(i));
  }

  // repeated .doublearray doublearrays = 15;
  total_size += 1 * this->doublearrays_size();
  for (int i = 0; i < this->doublearrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->doublearrays(i));
  }

  // repeated .boolarray boolarrays = 16;
  total_size += 2 * this->boolarrays_size();
  for (int i = 0; i < this->boolarrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->boolarrays(i));
  }

  // repeated .stringarray stringarrays = 17;
  total_size += 2 * this->stringarrays_size();
  for (int i = 0; i < this->stringarrays_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stringarrays(i));
  }

  // repeated bool isarray = 18;
  {
    int data_size = 0;
    data_size = 1 * this->isarray_size();
    total_size += 2 * this->isarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void libpartmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const libpartmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const libpartmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void libpartmsg::MergeFrom(const libpartmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  names_.MergeFrom(from.names_);
  doubles_.MergeFrom(from.doubles_);
  strings_.MergeFrom(from.strings_);
  integers_.MergeFrom(from.integers_);
  booleans_.MergeFrom(from.booleans_);
  paramtype_.MergeFrom(from.paramtype_);
  intarrays_.MergeFrom(from.intarrays_);
  doublearrays_.MergeFrom(from.doublearrays_);
  boolarrays_.MergeFrom(from.boolarrays_);
  stringarrays_.MergeFrom(from.stringarrays_);
  isarray_.MergeFrom(from.isarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_twocode()) {
      set_twocode(from.twocode());
    }
    if (from.has_threecode()) {
      set_threecode(from.threecode());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_parentid()) {
      set_parentid(from.parentid());
    }
    if (from.has_mastercode()) {
      set_mastercode(from.mastercode());
    }
    if (from.has_parametercode()) {
      set_parametercode(from.parametercode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void libpartmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void libpartmsg::CopyFrom(const libpartmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool libpartmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void libpartmsg::Swap(libpartmsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(twocode_, other->twocode_);
    std::swap(threecode_, other->threecode_);
    std::swap(type_, other->type_);
    std::swap(parentid_, other->parentid_);
    std::swap(mastercode_, other->mastercode_);
    std::swap(parametercode_, other->parametercode_);
    names_.Swap(&other->names_);
    doubles_.Swap(&other->doubles_);
    strings_.Swap(&other->strings_);
    integers_.Swap(&other->integers_);
    booleans_.Swap(&other->booleans_);
    paramtype_.Swap(&other->paramtype_);
    intarrays_.Swap(&other->intarrays_);
    doublearrays_.Swap(&other->doublearrays_);
    boolarrays_.Swap(&other->boolarrays_);
    stringarrays_.Swap(&other->stringarrays_);
    isarray_.Swap(&other->isarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata libpartmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = libpartmsg_descriptor_;
  metadata.reflection = libpartmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int profilemsg::kPtsFieldNumber;
const int profilemsg::kArcsFieldNumber;
const int profilemsg::kMaterialFieldNumber;
const int profilemsg::kNameFieldNumber;
#endif  // !_MSC_VER

profilemsg::profilemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:profilemsg)
}

void profilemsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

profilemsg::profilemsg(const profilemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:profilemsg)
}

void profilemsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pts_ = NULL;
  arcs_ = NULL;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

profilemsg::~profilemsg() {
  // @@protoc_insertion_point(destructor:profilemsg)
  SharedDtor();
}

void profilemsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete arcs_;
  }
}

void profilemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* profilemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return profilemsg_descriptor_;
}

const profilemsg& profilemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

profilemsg* profilemsg::default_instance_ = NULL;

profilemsg* profilemsg::New() const {
  return new profilemsg;
}

void profilemsg::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool profilemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profilemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pointsmessage pts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arcs;
        break;
      }

      // required .polyarcsmessage arcs = 2;
      case 2: {
        if (tag == 18) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_material;
        break;
      }

      // required string material = 3;
      case 3: {
        if (tag == 26) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profilemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profilemsg)
  return false;
#undef DO_
}

void profilemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profilemsg)
  // required .pointsmessage pts = 1;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pts(), output);
  }

  // required .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arcs(), output);
  }

  // required string material = 3;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->material(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:profilemsg)
}

::google::protobuf::uint8* profilemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:profilemsg)
  // required .pointsmessage pts = 1;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pts(), target);
  }

  // required .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arcs(), target);
  }

  // required string material = 3;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->material(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profilemsg)
  return target;
}

int profilemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pointsmessage pts = 1;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // required .polyarcsmessage arcs = 2;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

    // required string material = 3;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void profilemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const profilemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const profilemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void profilemsg::MergeFrom(const profilemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void profilemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void profilemsg::CopyFrom(const profilemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool profilemsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void profilemsg::Swap(profilemsg* other) {
  if (other != this) {
    std::swap(pts_, other->pts_);
    std::swap(arcs_, other->arcs_);
    std::swap(material_, other->material_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata profilemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = profilemsg_descriptor_;
  metadata.reflection = profilemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int layermsg::kNameFieldNumber;
const int layermsg::kConnectionFieldNumber;
#endif  // !_MSC_VER

layermsg::layermsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:layermsg)
}

void layermsg::InitAsDefaultInstance() {
}

layermsg::layermsg(const layermsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:layermsg)
}

void layermsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connection_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

layermsg::~layermsg() {
  // @@protoc_insertion_point(destructor:layermsg)
  SharedDtor();
}

void layermsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void layermsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* layermsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return layermsg_descriptor_;
}

const layermsg& layermsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

layermsg* layermsg::default_instance_ = NULL;

layermsg* layermsg::New() const {
  return new layermsg;
}

void layermsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    connection_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool layermsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:layermsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_connection;
        break;
      }

      // optional int32 connection = 2;
      case 2: {
        if (tag == 16) {
         parse_connection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connection_)));
          set_has_connection();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:layermsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:layermsg)
  return false;
#undef DO_
}

void layermsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:layermsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 connection = 2;
  if (has_connection()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->connection(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:layermsg)
}

::google::protobuf::uint8* layermsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:layermsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 connection = 2;
  if (has_connection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->connection(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:layermsg)
  return target;
}

int layermsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 connection = 2;
    if (has_connection()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connection());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void layermsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const layermsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const layermsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void layermsg::MergeFrom(const layermsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_connection()) {
      set_connection(from.connection());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void layermsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void layermsg::CopyFrom(const layermsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool layermsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void layermsg::Swap(layermsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(connection_, other->connection_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata layermsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = layermsg_descriptor_;
  metadata.reflection = layermsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int layerelementmsg::kGuidFieldNumber;
const int layerelementmsg::kLayerFieldNumber;
#endif  // !_MSC_VER

layerelementmsg::layerelementmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:layerelementmsg)
}

void layerelementmsg::InitAsDefaultInstance() {
}

layerelementmsg::layerelementmsg(const layerelementmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:layerelementmsg)
}

void layerelementmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

layerelementmsg::~layerelementmsg() {
  // @@protoc_insertion_point(destructor:layerelementmsg)
  SharedDtor();
}

void layerelementmsg::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete layer_;
  }
  if (this != default_instance_) {
  }
}

void layerelementmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* layerelementmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return layerelementmsg_descriptor_;
}

const layerelementmsg& layerelementmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

layerelementmsg* layerelementmsg::default_instance_ = NULL;

layerelementmsg* layerelementmsg::New() const {
  return new layerelementmsg;
}

void layerelementmsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_layer()) {
      if (layer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        layer_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool layerelementmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:layerelementmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_layer;
        break;
      }

      // required string layer = 2;
      case 2: {
        if (tag == 18) {
         parse_layer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layer().data(), this->layer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "layer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:layerelementmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:layerelementmsg)
  return false;
#undef DO_
}

void layerelementmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:layerelementmsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // required string layer = 2;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->layer(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:layerelementmsg)
}

::google::protobuf::uint8* layerelementmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:layerelementmsg)
  // required string guid = 1;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // required string layer = 2;
  if (has_layer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layer().data(), this->layer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "layer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->layer(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:layerelementmsg)
  return target;
}

int layerelementmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // required string layer = 2;
    if (has_layer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void layerelementmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const layerelementmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const layerelementmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void layerelementmsg::MergeFrom(const layerelementmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_layer()) {
      set_layer(from.layer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void layerelementmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void layerelementmsg::CopyFrom(const layerelementmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool layerelementmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void layerelementmsg::Swap(layerelementmsg* other) {
  if (other != this) {
    std::swap(guid_, other->guid_);
    std::swap(layer_, other->layer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata layerelementmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = layerelementmsg_descriptor_;
  metadata.reflection = layerelementmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int splinemsg::kPointsFieldNumber;
const int splinemsg::kClosedFieldNumber;
#endif  // !_MSC_VER

splinemsg::splinemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:splinemsg)
}

void splinemsg::InitAsDefaultInstance() {
  points_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
}

splinemsg::splinemsg(const splinemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:splinemsg)
}

void splinemsg::SharedCtor() {
  _cached_size_ = 0;
  points_ = NULL;
  closed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

splinemsg::~splinemsg() {
  // @@protoc_insertion_point(destructor:splinemsg)
  SharedDtor();
}

void splinemsg::SharedDtor() {
  if (this != default_instance_) {
    delete points_;
  }
}

void splinemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* splinemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return splinemsg_descriptor_;
}

const splinemsg& splinemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

splinemsg* splinemsg::default_instance_ = NULL;

splinemsg* splinemsg::New() const {
  return new splinemsg;
}

void splinemsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_points()) {
      if (points_ != NULL) points_->::pointsmessage::Clear();
    }
    closed_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool splinemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:splinemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pointsmessage points = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_closed;
        break;
      }

      // required bool closed = 2;
      case 2: {
        if (tag == 16) {
         parse_closed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &closed_)));
          set_has_closed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:splinemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:splinemsg)
  return false;
#undef DO_
}

void splinemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:splinemsg)
  // required .pointsmessage points = 1;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(), output);
  }

  // required bool closed = 2;
  if (has_closed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->closed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:splinemsg)
}

::google::protobuf::uint8* splinemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:splinemsg)
  // required .pointsmessage points = 1;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->points(), target);
  }

  // required bool closed = 2;
  if (has_closed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->closed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:splinemsg)
  return target;
}

int splinemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pointsmessage points = 1;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points());
    }

    // required bool closed = 2;
    if (has_closed()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void splinemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const splinemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const splinemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void splinemsg::MergeFrom(const splinemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_points()) {
      mutable_points()->::pointsmessage::MergeFrom(from.points());
    }
    if (from.has_closed()) {
      set_closed(from.closed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void splinemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void splinemsg::CopyFrom(const splinemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool splinemsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void splinemsg::Swap(splinemsg* other) {
  if (other != this) {
    std::swap(points_, other->points_);
    std::swap(closed_, other->closed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata splinemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = splinemsg_descriptor_;
  metadata.reflection = splinemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int linemsg::kPtsFieldNumber;
#endif  // !_MSC_VER

linemsg::linemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:linemsg)
}

void linemsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
}

linemsg::linemsg(const linemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:linemsg)
}

void linemsg::SharedCtor() {
  _cached_size_ = 0;
  pts_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

linemsg::~linemsg() {
  // @@protoc_insertion_point(destructor:linemsg)
  SharedDtor();
}

void linemsg::SharedDtor() {
  if (this != default_instance_) {
    delete pts_;
  }
}

void linemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* linemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return linemsg_descriptor_;
}

const linemsg& linemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

linemsg* linemsg::default_instance_ = NULL;

linemsg* linemsg::New() const {
  return new linemsg;
}

void linemsg::Clear() {
  if (has_pts()) {
    if (pts_ != NULL) pts_->::pointsmessage::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool linemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:linemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pointsmessage pts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:linemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:linemsg)
  return false;
#undef DO_
}

void linemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:linemsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:linemsg)
}

::google::protobuf::uint8* linemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:linemsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linemsg)
  return target;
}

int linemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pointsmessage pts = 1;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void linemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const linemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const linemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void linemsg::MergeFrom(const linemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void linemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void linemsg::CopyFrom(const linemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool linemsg::IsInitialized() const {

  return true;
}

void linemsg::Swap(linemsg* other) {
  if (other != this) {
    std::swap(pts_, other->pts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata linemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = linemsg_descriptor_;
  metadata.reflection = linemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int polylinemsg::kPtsFieldNumber;
const int polylinemsg::kArcsFieldNumber;
#endif  // !_MSC_VER

polylinemsg::polylinemsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polylinemsg)
}

void polylinemsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

polylinemsg::polylinemsg(const polylinemsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polylinemsg)
}

void polylinemsg::SharedCtor() {
  _cached_size_ = 0;
  pts_ = NULL;
  arcs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

polylinemsg::~polylinemsg() {
  // @@protoc_insertion_point(destructor:polylinemsg)
  SharedDtor();
}

void polylinemsg::SharedDtor() {
  if (this != default_instance_) {
    delete pts_;
    delete arcs_;
  }
}

void polylinemsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* polylinemsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return polylinemsg_descriptor_;
}

const polylinemsg& polylinemsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

polylinemsg* polylinemsg::default_instance_ = NULL;

polylinemsg* polylinemsg::New() const {
  return new polylinemsg;
}

void polylinemsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool polylinemsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polylinemsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pointsmessage pts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arcs;
        break;
      }

      // optional .polyarcsmessage arcs = 2;
      case 2: {
        if (tag == 18) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polylinemsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polylinemsg)
  return false;
#undef DO_
}

void polylinemsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polylinemsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pts(), output);
  }

  // optional .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arcs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polylinemsg)
}

::google::protobuf::uint8* polylinemsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polylinemsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pts(), target);
  }

  // optional .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arcs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polylinemsg)
  return target;
}

int polylinemsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pointsmessage pts = 1;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // optional .polyarcsmessage arcs = 2;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void polylinemsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const polylinemsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const polylinemsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void polylinemsg::MergeFrom(const polylinemsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void polylinemsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void polylinemsg::CopyFrom(const polylinemsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool polylinemsg::IsInitialized() const {

  return true;
}

void polylinemsg::Swap(polylinemsg* other) {
  if (other != this) {
    std::swap(pts_, other->pts_);
    std::swap(arcs_, other->arcs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata polylinemsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = polylinemsg_descriptor_;
  metadata.reflection = polylinemsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getlinesmsg::kLinesFieldNumber;
const int getlinesmsg::kGuidsFieldNumber;
#endif  // !_MSC_VER

getlinesmsg::getlinesmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:getlinesmsg)
}

void getlinesmsg::InitAsDefaultInstance() {
}

getlinesmsg::getlinesmsg(const getlinesmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:getlinesmsg)
}

void getlinesmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getlinesmsg::~getlinesmsg() {
  // @@protoc_insertion_point(destructor:getlinesmsg)
  SharedDtor();
}

void getlinesmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getlinesmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getlinesmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getlinesmsg_descriptor_;
}

const getlinesmsg& getlinesmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

getlinesmsg* getlinesmsg::default_instance_ = NULL;

getlinesmsg* getlinesmsg::New() const {
  return new getlinesmsg;
}

void getlinesmsg::Clear() {
  lines_.Clear();
  guids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getlinesmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:getlinesmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .linemsg lines = 1;
      case 1: {
        if (tag == 10) {
         parse_lines:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lines()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_lines;
        if (input->ExpectTag(18)) goto parse_guids;
        break;
      }

      // repeated string guids = 2;
      case 2: {
        if (tag == 18) {
         parse_guids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guids(this->guids_size() - 1).data(),
            this->guids(this->guids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:getlinesmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:getlinesmsg)
  return false;
#undef DO_
}

void getlinesmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:getlinesmsg)
  // repeated .linemsg lines = 1;
  for (int i = 0; i < this->lines_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lines(i), output);
  }

  // repeated string guids = 2;
  for (int i = 0; i < this->guids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guids(i).data(), this->guids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->guids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:getlinesmsg)
}

::google::protobuf::uint8* getlinesmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:getlinesmsg)
  // repeated .linemsg lines = 1;
  for (int i = 0; i < this->lines_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lines(i), target);
  }

  // repeated string guids = 2;
  for (int i = 0; i < this->guids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guids(i).data(), this->guids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->guids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:getlinesmsg)
  return target;
}

int getlinesmsg::ByteSize() const {
  int total_size = 0;

  // repeated .linemsg lines = 1;
  total_size += 1 * this->lines_size();
  for (int i = 0; i < this->lines_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lines(i));
  }

  // repeated string guids = 2;
  total_size += 1 * this->guids_size();
  for (int i = 0; i < this->guids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getlinesmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getlinesmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getlinesmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getlinesmsg::MergeFrom(const getlinesmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  lines_.MergeFrom(from.lines_);
  guids_.MergeFrom(from.guids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getlinesmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getlinesmsg::CopyFrom(const getlinesmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getlinesmsg::IsInitialized() const {

  return true;
}

void getlinesmsg::Swap(getlinesmsg* other) {
  if (other != this) {
    lines_.Swap(&other->lines_);
    guids_.Swap(&other->guids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getlinesmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getlinesmsg_descriptor_;
  metadata.reflection = getlinesmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getpolylinesmsg::kPolylinesFieldNumber;
const int getpolylinesmsg::kGuidsFieldNumber;
#endif  // !_MSC_VER

getpolylinesmsg::getpolylinesmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:getpolylinesmsg)
}

void getpolylinesmsg::InitAsDefaultInstance() {
}

getpolylinesmsg::getpolylinesmsg(const getpolylinesmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:getpolylinesmsg)
}

void getpolylinesmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getpolylinesmsg::~getpolylinesmsg() {
  // @@protoc_insertion_point(destructor:getpolylinesmsg)
  SharedDtor();
}

void getpolylinesmsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getpolylinesmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getpolylinesmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getpolylinesmsg_descriptor_;
}

const getpolylinesmsg& getpolylinesmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

getpolylinesmsg* getpolylinesmsg::default_instance_ = NULL;

getpolylinesmsg* getpolylinesmsg::New() const {
  return new getpolylinesmsg;
}

void getpolylinesmsg::Clear() {
  polylines_.Clear();
  guids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getpolylinesmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:getpolylinesmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .polylinemsg polylines = 1;
      case 1: {
        if (tag == 10) {
         parse_polylines:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_polylines()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_polylines;
        if (input->ExpectTag(18)) goto parse_guids;
        break;
      }

      // repeated string guids = 2;
      case 2: {
        if (tag == 18) {
         parse_guids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guids(this->guids_size() - 1).data(),
            this->guids(this->guids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:getpolylinesmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:getpolylinesmsg)
  return false;
#undef DO_
}

void getpolylinesmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:getpolylinesmsg)
  // repeated .polylinemsg polylines = 1;
  for (int i = 0; i < this->polylines_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->polylines(i), output);
  }

  // repeated string guids = 2;
  for (int i = 0; i < this->guids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->guids(i).data(), this->guids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "guids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->guids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:getpolylinesmsg)
}

::google::protobuf::uint8* getpolylinesmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:getpolylinesmsg)
  // repeated .polylinemsg polylines = 1;
  for (int i = 0; i < this->polylines_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->polylines(i), target);
  }

  // repeated string guids = 2;
  for (int i = 0; i < this->guids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guids(i).data(), this->guids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->guids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:getpolylinesmsg)
  return target;
}

int getpolylinesmsg::ByteSize() const {
  int total_size = 0;

  // repeated .polylinemsg polylines = 1;
  total_size += 1 * this->polylines_size();
  for (int i = 0; i < this->polylines_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->polylines(i));
  }

  // repeated string guids = 2;
  total_size += 1 * this->guids_size();
  for (int i = 0; i < this->guids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getpolylinesmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getpolylinesmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getpolylinesmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getpolylinesmsg::MergeFrom(const getpolylinesmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  polylines_.MergeFrom(from.polylines_);
  guids_.MergeFrom(from.guids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getpolylinesmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getpolylinesmsg::CopyFrom(const getpolylinesmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getpolylinesmsg::IsInitialized() const {

  return true;
}

void getpolylinesmsg::Swap(getpolylinesmsg* other) {
  if (other != this) {
    polylines_.Swap(&other->polylines_);
    guids_.Swap(&other->guids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getpolylinesmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getpolylinesmsg_descriptor_;
  metadata.reflection = getpolylinesmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int revshellmsg::kPtsFieldNumber;
const int revshellmsg::kArcsFieldNumber;
const int revshellmsg::kLevelFieldNumber;
const int revshellmsg::kFlippedFieldNumber;
const int revshellmsg::kSlantangleFieldNumber;
const int revshellmsg::kRevangleFieldNumber;
const int revshellmsg::kDistortionangleFieldNumber;
const int revshellmsg::kBegangleFieldNumber;
const int revshellmsg::kAxisFieldNumber;
const int revshellmsg::kMaterialFieldNumber;
const int revshellmsg::kTypeFieldNumber;
const int revshellmsg::kThicknessFieldNumber;
const int revshellmsg::kHeightFieldNumber;
#endif  // !_MSC_VER

revshellmsg::revshellmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:revshellmsg)
}

void revshellmsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

revshellmsg::revshellmsg(const revshellmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:revshellmsg)
}

void revshellmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pts_ = NULL;
  arcs_ = NULL;
  level_ = 0;
  flipped_ = false;
  slantangle_ = 0;
  revangle_ = 0;
  distortionangle_ = 0;
  begangle_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thickness_ = 0;
  height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

revshellmsg::~revshellmsg() {
  // @@protoc_insertion_point(destructor:revshellmsg)
  SharedDtor();
}

void revshellmsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete arcs_;
  }
}

void revshellmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* revshellmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return revshellmsg_descriptor_;
}

const revshellmsg& revshellmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

revshellmsg* revshellmsg::default_instance_ = NULL;

revshellmsg* revshellmsg::New() const {
  return new revshellmsg;
}

void revshellmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<revshellmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(level_, begangle_);
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 7680) {
    ZR_(thickness_, height_);
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  axis_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool revshellmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revshellmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pointsmessage pts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arcs;
        break;
      }

      // optional .polyarcsmessage arcs = 2;
      case 2: {
        if (tag == 18) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_flipped;
        break;
      }

      // required bool flipped = 4;
      case 4: {
        if (tag == 32) {
         parse_flipped:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipped_)));
          set_has_flipped();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_slantangle;
        break;
      }

      // required double slantangle = 5;
      case 5: {
        if (tag == 41) {
         parse_slantangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slantangle_)));
          set_has_slantangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_revangle;
        break;
      }

      // required double revangle = 6;
      case 6: {
        if (tag == 49) {
         parse_revangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &revangle_)));
          set_has_revangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_distortionangle;
        break;
      }

      // required double distortionangle = 7;
      case 7: {
        if (tag == 57) {
         parse_distortionangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distortionangle_)));
          set_has_distortionangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_begangle;
        break;
      }

      // required double begangle = 8;
      case 8: {
        if (tag == 65) {
         parse_begangle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &begangle_)));
          set_has_begangle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_axis;
        break;
      }

      // repeated double axis = 9;
      case 9: {
        if (tag == 73) {
         parse_axis:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 73, input, this->mutable_axis())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_axis())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_axis;
        if (input->ExpectTag(82)) goto parse_material;
        break;
      }

      // required string material = 10;
      case 10: {
        if (tag == 82) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_type;
        break;
      }

      // required string type = 11;
      case 11: {
        if (tag == 90) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_thickness;
        break;
      }

      // required double thickness = 12;
      case 12: {
        if (tag == 97) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_height;
        break;
      }

      // required double height = 13;
      case 13: {
        if (tag == 105) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revshellmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revshellmsg)
  return false;
#undef DO_
}

void revshellmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revshellmsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pts(), output);
  }

  // optional .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arcs(), output);
  }

  // required int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required bool flipped = 4;
  if (has_flipped()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->flipped(), output);
  }

  // required double slantangle = 5;
  if (has_slantangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->slantangle(), output);
  }

  // required double revangle = 6;
  if (has_revangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->revangle(), output);
  }

  // required double distortionangle = 7;
  if (has_distortionangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->distortionangle(), output);
  }

  // required double begangle = 8;
  if (has_begangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->begangle(), output);
  }

  // repeated double axis = 9;
  for (int i = 0; i < this->axis_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      9, this->axis(i), output);
  }

  // required string material = 10;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->material(), output);
  }

  // required string type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->type(), output);
  }

  // required double thickness = 12;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->thickness(), output);
  }

  // required double height = 13;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->height(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revshellmsg)
}

::google::protobuf::uint8* revshellmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:revshellmsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pts(), target);
  }

  // optional .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arcs(), target);
  }

  // required int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required bool flipped = 4;
  if (has_flipped()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->flipped(), target);
  }

  // required double slantangle = 5;
  if (has_slantangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->slantangle(), target);
  }

  // required double revangle = 6;
  if (has_revangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->revangle(), target);
  }

  // required double distortionangle = 7;
  if (has_distortionangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->distortionangle(), target);
  }

  // required double begangle = 8;
  if (has_begangle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->begangle(), target);
  }

  // repeated double axis = 9;
  for (int i = 0; i < this->axis_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(9, this->axis(i), target);
  }

  // required string material = 10;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->material(), target);
  }

  // required string type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->type(), target);
  }

  // required double thickness = 12;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->thickness(), target);
  }

  // required double height = 13;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->height(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revshellmsg)
  return target;
}

int revshellmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pointsmessage pts = 1;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // optional .polyarcsmessage arcs = 2;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

    // required int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required bool flipped = 4;
    if (has_flipped()) {
      total_size += 1 + 1;
    }

    // required double slantangle = 5;
    if (has_slantangle()) {
      total_size += 1 + 8;
    }

    // required double revangle = 6;
    if (has_revangle()) {
      total_size += 1 + 8;
    }

    // required double distortionangle = 7;
    if (has_distortionangle()) {
      total_size += 1 + 8;
    }

    // required double begangle = 8;
    if (has_begangle()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // required string material = 10;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string type = 11;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required double thickness = 12;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

    // required double height = 13;
    if (has_height()) {
      total_size += 1 + 8;
    }

  }
  // repeated double axis = 9;
  {
    int data_size = 0;
    data_size = 8 * this->axis_size();
    total_size += 1 * this->axis_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void revshellmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const revshellmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const revshellmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void revshellmsg::MergeFrom(const revshellmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  axis_.MergeFrom(from.axis_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_flipped()) {
      set_flipped(from.flipped());
    }
    if (from.has_slantangle()) {
      set_slantangle(from.slantangle());
    }
    if (from.has_revangle()) {
      set_revangle(from.revangle());
    }
    if (from.has_distortionangle()) {
      set_distortionangle(from.distortionangle());
    }
    if (from.has_begangle()) {
      set_begangle(from.begangle());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void revshellmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void revshellmsg::CopyFrom(const revshellmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool revshellmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001efc) != 0x00001efc) return false;

  return true;
}

void revshellmsg::Swap(revshellmsg* other) {
  if (other != this) {
    std::swap(pts_, other->pts_);
    std::swap(arcs_, other->arcs_);
    std::swap(level_, other->level_);
    std::swap(flipped_, other->flipped_);
    std::swap(slantangle_, other->slantangle_);
    std::swap(revangle_, other->revangle_);
    std::swap(distortionangle_, other->distortionangle_);
    std::swap(begangle_, other->begangle_);
    axis_.Swap(&other->axis_);
    std::swap(material_, other->material_);
    std::swap(type_, other->type_);
    std::swap(thickness_, other->thickness_);
    std::swap(height_, other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata revshellmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = revshellmsg_descriptor_;
  metadata.reflection = revshellmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int extshellmsg::kPtsFieldNumber;
const int extshellmsg::kArcsFieldNumber;
const int extshellmsg::kLevelFieldNumber;
const int extshellmsg::kFlippedFieldNumber;
const int extshellmsg::kCextxFieldNumber;
const int extshellmsg::kCextyFieldNumber;
const int extshellmsg::kExtxFieldNumber;
const int extshellmsg::kExtyFieldNumber;
const int extshellmsg::kExtzFieldNumber;
const int extshellmsg::kVisibleFieldNumber;
const int extshellmsg::kMaterialFieldNumber;
const int extshellmsg::kTypeFieldNumber;
const int extshellmsg::kThicknessFieldNumber;
#endif  // !_MSC_VER

extshellmsg::extshellmsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:extshellmsg)
}

void extshellmsg::InitAsDefaultInstance() {
  pts_ = const_cast< ::pointsmessage*>(&::pointsmessage::default_instance());
  arcs_ = const_cast< ::polyarcsmessage*>(&::polyarcsmessage::default_instance());
}

extshellmsg::extshellmsg(const extshellmsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:extshellmsg)
}

void extshellmsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pts_ = NULL;
  arcs_ = NULL;
  level_ = 0;
  flipped_ = false;
  cextx_ = 0;
  cexty_ = 0;
  extx_ = 0;
  exty_ = 0;
  extz_ = 0;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thickness_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

extshellmsg::~extshellmsg() {
  // @@protoc_insertion_point(destructor:extshellmsg)
  SharedDtor();
}

void extshellmsg::SharedDtor() {
  if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete material_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (this != default_instance_) {
    delete pts_;
    delete arcs_;
  }
}

void extshellmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* extshellmsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return extshellmsg_descriptor_;
}

const extshellmsg& extshellmsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

extshellmsg* extshellmsg::default_instance_ = NULL;

extshellmsg* extshellmsg::New() const {
  return new extshellmsg;
}

void extshellmsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<extshellmsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(level_, exty_);
    if (has_pts()) {
      if (pts_ != NULL) pts_->::pointsmessage::Clear();
    }
    if (has_arcs()) {
      if (arcs_ != NULL) arcs_->::polyarcsmessage::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 7424) {
    extz_ = 0;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        material_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    thickness_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  visible_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool extshellmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:extshellmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pointsmessage pts = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arcs;
        break;
      }

      // optional .polyarcsmessage arcs = 2;
      case 2: {
        if (tag == 18) {
         parse_arcs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arcs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_flipped;
        break;
      }

      // required bool flipped = 4;
      case 4: {
        if (tag == 32) {
         parse_flipped:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flipped_)));
          set_has_flipped();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_cextx;
        break;
      }

      // required double cextx = 5;
      case 5: {
        if (tag == 41) {
         parse_cextx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cextx_)));
          set_has_cextx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_cexty;
        break;
      }

      // required double cexty = 6;
      case 6: {
        if (tag == 49) {
         parse_cexty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cexty_)));
          set_has_cexty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_extx;
        break;
      }

      // required double extx = 7;
      case 7: {
        if (tag == 57) {
         parse_extx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extx_)));
          set_has_extx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_exty;
        break;
      }

      // required double exty = 8;
      case 8: {
        if (tag == 65) {
         parse_exty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exty_)));
          set_has_exty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_extz;
        break;
      }

      // required double extz = 9;
      case 9: {
        if (tag == 73) {
         parse_extz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extz_)));
          set_has_extz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_visible;
        break;
      }

      // repeated bool visible = 10;
      case 10: {
        if (tag == 80) {
         parse_visible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 80, input, this->mutable_visible())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_visible())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_visible;
        if (input->ExpectTag(90)) goto parse_material;
        break;
      }

      // required string material = 11;
      case 11: {
        if (tag == 90) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "material");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_type;
        break;
      }

      // required string type = 12;
      case 12: {
        if (tag == 98) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_thickness;
        break;
      }

      // required double thickness = 13;
      case 13: {
        if (tag == 105) {
         parse_thickness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thickness_)));
          set_has_thickness();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:extshellmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:extshellmsg)
  return false;
#undef DO_
}

void extshellmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:extshellmsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pts(), output);
  }

  // optional .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arcs(), output);
  }

  // required int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required bool flipped = 4;
  if (has_flipped()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->flipped(), output);
  }

  // required double cextx = 5;
  if (has_cextx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->cextx(), output);
  }

  // required double cexty = 6;
  if (has_cexty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cexty(), output);
  }

  // required double extx = 7;
  if (has_extx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->extx(), output);
  }

  // required double exty = 8;
  if (has_exty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->exty(), output);
  }

  // required double extz = 9;
  if (has_extz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->extz(), output);
  }

  // repeated bool visible = 10;
  for (int i = 0; i < this->visible_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      10, this->visible(i), output);
  }

  // required string material = 11;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->material(), output);
  }

  // required string type = 12;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->type(), output);
  }

  // required double thickness = 13;
  if (has_thickness()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->thickness(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:extshellmsg)
}

::google::protobuf::uint8* extshellmsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:extshellmsg)
  // optional .pointsmessage pts = 1;
  if (has_pts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pts(), target);
  }

  // optional .polyarcsmessage arcs = 2;
  if (has_arcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arcs(), target);
  }

  // required int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required bool flipped = 4;
  if (has_flipped()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->flipped(), target);
  }

  // required double cextx = 5;
  if (has_cextx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->cextx(), target);
  }

  // required double cexty = 6;
  if (has_cexty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->cexty(), target);
  }

  // required double extx = 7;
  if (has_extx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->extx(), target);
  }

  // required double exty = 8;
  if (has_exty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->exty(), target);
  }

  // required double extz = 9;
  if (has_extz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->extz(), target);
  }

  // repeated bool visible = 10;
  for (int i = 0; i < this->visible_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(10, this->visible(i), target);
  }

  // required string material = 11;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "material");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->material(), target);
  }

  // required string type = 12;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->type(), target);
  }

  // required double thickness = 13;
  if (has_thickness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->thickness(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:extshellmsg)
  return target;
}

int extshellmsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pointsmessage pts = 1;
    if (has_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pts());
    }

    // optional .polyarcsmessage arcs = 2;
    if (has_arcs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arcs());
    }

    // required int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required bool flipped = 4;
    if (has_flipped()) {
      total_size += 1 + 1;
    }

    // required double cextx = 5;
    if (has_cextx()) {
      total_size += 1 + 8;
    }

    // required double cexty = 6;
    if (has_cexty()) {
      total_size += 1 + 8;
    }

    // required double extx = 7;
    if (has_extx()) {
      total_size += 1 + 8;
    }

    // required double exty = 8;
    if (has_exty()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double extz = 9;
    if (has_extz()) {
      total_size += 1 + 8;
    }

    // required string material = 11;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string type = 12;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required double thickness = 13;
    if (has_thickness()) {
      total_size += 1 + 8;
    }

  }
  // repeated bool visible = 10;
  {
    int data_size = 0;
    data_size = 1 * this->visible_size();
    total_size += 1 * this->visible_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void extshellmsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const extshellmsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const extshellmsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void extshellmsg::MergeFrom(const extshellmsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  visible_.MergeFrom(from.visible_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pts()) {
      mutable_pts()->::pointsmessage::MergeFrom(from.pts());
    }
    if (from.has_arcs()) {
      mutable_arcs()->::polyarcsmessage::MergeFrom(from.arcs());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_flipped()) {
      set_flipped(from.flipped());
    }
    if (from.has_cextx()) {
      set_cextx(from.cextx());
    }
    if (from.has_cexty()) {
      set_cexty(from.cexty());
    }
    if (from.has_extx()) {
      set_extx(from.extx());
    }
    if (from.has_exty()) {
      set_exty(from.exty());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_extz()) {
      set_extz(from.extz());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_thickness()) {
      set_thickness(from.thickness());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void extshellmsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void extshellmsg::CopyFrom(const extshellmsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool extshellmsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001dfc) != 0x00001dfc) return false;

  return true;
}

void extshellmsg::Swap(extshellmsg* other) {
  if (other != this) {
    std::swap(pts_, other->pts_);
    std::swap(arcs_, other->arcs_);
    std::swap(level_, other->level_);
    std::swap(flipped_, other->flipped_);
    std::swap(cextx_, other->cextx_);
    std::swap(cexty_, other->cexty_);
    std::swap(extx_, other->extx_);
    std::swap(exty_, other->exty_);
    std::swap(extz_, other->extz_);
    visible_.Swap(&other->visible_);
    std::swap(material_, other->material_);
    std::swap(type_, other->type_);
    std::swap(thickness_, other->thickness_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata extshellmsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = extshellmsg_descriptor_;
  metadata.reflection = extshellmsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int rendermsg::kFileFieldNumber;
#endif  // !_MSC_VER

rendermsg::rendermsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rendermsg)
}

void rendermsg::InitAsDefaultInstance() {
}

rendermsg::rendermsg(const rendermsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rendermsg)
}

void rendermsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rendermsg::~rendermsg() {
  // @@protoc_insertion_point(destructor:rendermsg)
  SharedDtor();
}

void rendermsg::SharedDtor() {
  if (file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete file_;
  }
  if (this != default_instance_) {
  }
}

void rendermsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rendermsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rendermsg_descriptor_;
}

const rendermsg& rendermsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

rendermsg* rendermsg::default_instance_ = NULL;

rendermsg* rendermsg::New() const {
  return new rendermsg;
}

void rendermsg::Clear() {
  if (has_file()) {
    if (file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      file_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool rendermsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rendermsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string file = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "file");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rendermsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rendermsg)
  return false;
#undef DO_
}

void rendermsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rendermsg)
  // required string file = 1;
  if (has_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rendermsg)
}

::google::protobuf::uint8* rendermsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rendermsg)
  // required string file = 1;
  if (has_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rendermsg)
  return target;
}

int rendermsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string file = 1;
    if (has_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rendermsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const rendermsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const rendermsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rendermsg::MergeFrom(const rendermsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_file()) {
      set_file(from.file());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void rendermsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rendermsg::CopyFrom(const rendermsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rendermsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void rendermsg::Swap(rendermsg* other) {
  if (other != this) {
    std::swap(file_, other->file_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata rendermsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rendermsg_descriptor_;
  metadata.reflection = rendermsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cameramsg::kCxFieldNumber;
const int cameramsg::kCyFieldNumber;
const int cameramsg::kCzFieldNumber;
const int cameramsg::kTxFieldNumber;
const int cameramsg::kTyFieldNumber;
const int cameramsg::kTzFieldNumber;
const int cameramsg::kLensFieldNumber;
const int cameramsg::kSunazimuthFieldNumber;
const int cameramsg::kSunaltitudeFieldNumber;
#endif  // !_MSC_VER

cameramsg::cameramsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cameramsg)
}

void cameramsg::InitAsDefaultInstance() {
}

cameramsg::cameramsg(const cameramsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cameramsg)
}

void cameramsg::SharedCtor() {
  _cached_size_ = 0;
  cx_ = 0;
  cy_ = 0;
  cz_ = 0;
  tx_ = 0;
  ty_ = 0;
  tz_ = 0;
  lens_ = 0;
  sunazimuth_ = 0;
  sunaltitude_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cameramsg::~cameramsg() {
  // @@protoc_insertion_point(destructor:cameramsg)
  SharedDtor();
}

void cameramsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cameramsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cameramsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cameramsg_descriptor_;
}

const cameramsg& cameramsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

cameramsg* cameramsg::default_instance_ = NULL;

cameramsg* cameramsg::New() const {
  return new cameramsg;
}

void cameramsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<cameramsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(cx_, sunazimuth_);
  }
  sunaltitude_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cameramsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cameramsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double cx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cx_)));
          set_has_cx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_cy;
        break;
      }

      // required double cy = 2;
      case 2: {
        if (tag == 17) {
         parse_cy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cy_)));
          set_has_cy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_cz;
        break;
      }

      // required double cz = 3;
      case 3: {
        if (tag == 25) {
         parse_cz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cz_)));
          set_has_cz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_tx;
        break;
      }

      // required double tx = 4;
      case 4: {
        if (tag == 33) {
         parse_tx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tx_)));
          set_has_tx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_ty;
        break;
      }

      // required double ty = 5;
      case 5: {
        if (tag == 41) {
         parse_ty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ty_)));
          set_has_ty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_tz;
        break;
      }

      // required double tz = 6;
      case 6: {
        if (tag == 49) {
         parse_tz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tz_)));
          set_has_tz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_lens;
        break;
      }

      // required double lens = 7;
      case 7: {
        if (tag == 57) {
         parse_lens:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lens_)));
          set_has_lens();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_sunazimuth;
        break;
      }

      // required double sunazimuth = 8;
      case 8: {
        if (tag == 65) {
         parse_sunazimuth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sunazimuth_)));
          set_has_sunazimuth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_sunaltitude;
        break;
      }

      // required double sunaltitude = 9;
      case 9: {
        if (tag == 73) {
         parse_sunaltitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sunaltitude_)));
          set_has_sunaltitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cameramsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cameramsg)
  return false;
#undef DO_
}

void cameramsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cameramsg)
  // required double cx = 1;
  if (has_cx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->cx(), output);
  }

  // required double cy = 2;
  if (has_cy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cy(), output);
  }

  // required double cz = 3;
  if (has_cz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->cz(), output);
  }

  // required double tx = 4;
  if (has_tx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->tx(), output);
  }

  // required double ty = 5;
  if (has_ty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->ty(), output);
  }

  // required double tz = 6;
  if (has_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->tz(), output);
  }

  // required double lens = 7;
  if (has_lens()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->lens(), output);
  }

  // required double sunazimuth = 8;
  if (has_sunazimuth()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->sunazimuth(), output);
  }

  // required double sunaltitude = 9;
  if (has_sunaltitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->sunaltitude(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cameramsg)
}

::google::protobuf::uint8* cameramsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cameramsg)
  // required double cx = 1;
  if (has_cx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->cx(), target);
  }

  // required double cy = 2;
  if (has_cy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->cy(), target);
  }

  // required double cz = 3;
  if (has_cz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->cz(), target);
  }

  // required double tx = 4;
  if (has_tx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->tx(), target);
  }

  // required double ty = 5;
  if (has_ty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->ty(), target);
  }

  // required double tz = 6;
  if (has_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->tz(), target);
  }

  // required double lens = 7;
  if (has_lens()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->lens(), target);
  }

  // required double sunazimuth = 8;
  if (has_sunazimuth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->sunazimuth(), target);
  }

  // required double sunaltitude = 9;
  if (has_sunaltitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->sunaltitude(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cameramsg)
  return target;
}

int cameramsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double cx = 1;
    if (has_cx()) {
      total_size += 1 + 8;
    }

    // required double cy = 2;
    if (has_cy()) {
      total_size += 1 + 8;
    }

    // required double cz = 3;
    if (has_cz()) {
      total_size += 1 + 8;
    }

    // required double tx = 4;
    if (has_tx()) {
      total_size += 1 + 8;
    }

    // required double ty = 5;
    if (has_ty()) {
      total_size += 1 + 8;
    }

    // required double tz = 6;
    if (has_tz()) {
      total_size += 1 + 8;
    }

    // required double lens = 7;
    if (has_lens()) {
      total_size += 1 + 8;
    }

    // required double sunazimuth = 8;
    if (has_sunazimuth()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required double sunaltitude = 9;
    if (has_sunaltitude()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cameramsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cameramsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cameramsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cameramsg::MergeFrom(const cameramsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cx()) {
      set_cx(from.cx());
    }
    if (from.has_cy()) {
      set_cy(from.cy());
    }
    if (from.has_cz()) {
      set_cz(from.cz());
    }
    if (from.has_tx()) {
      set_tx(from.tx());
    }
    if (from.has_ty()) {
      set_ty(from.ty());
    }
    if (from.has_tz()) {
      set_tz(from.tz());
    }
    if (from.has_lens()) {
      set_lens(from.lens());
    }
    if (from.has_sunazimuth()) {
      set_sunazimuth(from.sunazimuth());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sunaltitude()) {
      set_sunaltitude(from.sunaltitude());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cameramsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cameramsg::CopyFrom(const cameramsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cameramsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void cameramsg::Swap(cameramsg* other) {
  if (other != this) {
    std::swap(cx_, other->cx_);
    std::swap(cy_, other->cy_);
    std::swap(cz_, other->cz_);
    std::swap(tx_, other->tx_);
    std::swap(ty_, other->ty_);
    std::swap(tz_, other->tz_);
    std::swap(lens_, other->lens_);
    std::swap(sunazimuth_, other->sunazimuth_);
    std::swap(sunaltitude_, other->sunaltitude_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cameramsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cameramsg_descriptor_;
  metadata.reflection = cameramsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
